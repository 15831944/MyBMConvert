/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using HLONG = System.Int64;
#else
using HLONG = System.Int32;
#endif


public class TK_Character_Attribute : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal TK_Character_Attribute(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(TK_Character_Attribute obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~TK_Character_Attribute() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSBSTREAMPINVOKE.delete_TK_Character_Attribute(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public float size {
    set {
      HCSBSTREAMPINVOKE.TK_Character_Attribute_size_set(swigCPtr, value);
    } 
    get {
      float ret = HCSBSTREAMPINVOKE.TK_Character_Attribute_size_get(swigCPtr);
      return ret;
    } 
  }

  public float vertical_offset {
    set {
      HCSBSTREAMPINVOKE.TK_Character_Attribute_vertical_offset_set(swigCPtr, value);
    } 
    get {
      float ret = HCSBSTREAMPINVOKE.TK_Character_Attribute_vertical_offset_get(swigCPtr);
      return ret;
    } 
  }

  public float horizontal_offset {
    set {
      HCSBSTREAMPINVOKE.TK_Character_Attribute_horizontal_offset_set(swigCPtr, value);
    } 
    get {
      float ret = HCSBSTREAMPINVOKE.TK_Character_Attribute_horizontal_offset_get(swigCPtr);
      return ret;
    } 
  }

  public float slant {
    set {
      HCSBSTREAMPINVOKE.TK_Character_Attribute_slant_set(swigCPtr, value);
    } 
    get {
      float ret = HCSBSTREAMPINVOKE.TK_Character_Attribute_slant_get(swigCPtr);
      return ret;
    } 
  }

  public float rotation {
    set {
      HCSBSTREAMPINVOKE.TK_Character_Attribute_rotation_set(swigCPtr, value);
    } 
    get {
      float ret = HCSBSTREAMPINVOKE.TK_Character_Attribute_rotation_get(swigCPtr);
      return ret;
    } 
  }

  public float width_scale {
    set {
      HCSBSTREAMPINVOKE.TK_Character_Attribute_width_scale_set(swigCPtr, value);
    } 
    get {
      float ret = HCSBSTREAMPINVOKE.TK_Character_Attribute_width_scale_get(swigCPtr);
      return ret;
    } 
  }

  public ushort mask {
    set {
      HCSBSTREAMPINVOKE.TK_Character_Attribute_mask_set(swigCPtr, value);
    } 
    get {
      ushort ret = HCSBSTREAMPINVOKE.TK_Character_Attribute_mask_get(swigCPtr);
      return ret;
    } 
  }

  public ushort value {
    set {
      HCSBSTREAMPINVOKE.TK_Character_Attribute_value_set(swigCPtr, value);
    } 
    get {
      ushort ret = HCSBSTREAMPINVOKE.TK_Character_Attribute_value_get(swigCPtr);
      return ret;
    } 
  }

  public byte size_units {
    set {
      HCSBSTREAMPINVOKE.TK_Character_Attribute_size_units_set(swigCPtr, value);
    } 
    get {
      byte ret = HCSBSTREAMPINVOKE.TK_Character_Attribute_size_units_get(swigCPtr);
      return ret;
    } 
  }

  public byte vertical_offset_units {
    set {
      HCSBSTREAMPINVOKE.TK_Character_Attribute_vertical_offset_units_set(swigCPtr, value);
    } 
    get {
      byte ret = HCSBSTREAMPINVOKE.TK_Character_Attribute_vertical_offset_units_get(swigCPtr);
      return ret;
    } 
  }

  public byte horizontal_offset_units {
    set {
      HCSBSTREAMPINVOKE.TK_Character_Attribute_horizontal_offset_units_set(swigCPtr, value);
    } 
    get {
      byte ret = HCSBSTREAMPINVOKE.TK_Character_Attribute_horizontal_offset_units_get(swigCPtr);
      return ret;
    } 
  }

  public TK_Character_Attribute() : this(HCSBSTREAMPINVOKE.new_TK_Character_Attribute(), true) {
  }

}
