/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using HLONG = System.Int64;
#else
using HLONG = System.Int32;
#endif


public class loop_table : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal loop_table(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(loop_table obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~loop_table() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSBSTREAMPINVOKE.delete_loop_table(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public IntPtr loops {
   get {
	 return HCSBSTREAMPINVOKE.loop_table_loops_get(swigCPtr);
   } 
  }

  public int loops_allocated {
    set {
      HCSBSTREAMPINVOKE.loop_table_loops_allocated_set(swigCPtr, value);
    } 
    get {
      int ret = HCSBSTREAMPINVOKE.loop_table_loops_allocated_get(swigCPtr);
      return ret;
    } 
  }

  public IntPtr loops_edges {
   get {
	 return HCSBSTREAMPINVOKE.loop_table_loops_edges_get(swigCPtr);
   } 
  }

  public int loops_used {
    set {
      HCSBSTREAMPINVOKE.loop_table_loops_used_set(swigCPtr, value);
    } 
    get {
      int ret = HCSBSTREAMPINVOKE.loop_table_loops_used_get(swigCPtr);
      return ret;
    } 
  }

  public int loops_edges_allocated {
    set {
      HCSBSTREAMPINVOKE.loop_table_loops_edges_allocated_set(swigCPtr, value);
    } 
    get {
      int ret = HCSBSTREAMPINVOKE.loop_table_loops_edges_allocated_get(swigCPtr);
      return ret;
    } 
  }

  public int np_allocated {
    set {
      HCSBSTREAMPINVOKE.loop_table_np_allocated_set(swigCPtr, value);
    } 
    get {
      int ret = HCSBSTREAMPINVOKE.loop_table_np_allocated_get(swigCPtr);
      return ret;
    } 
  }

  public IntPtr P {
   get {
	 return HCSBSTREAMPINVOKE.loop_table_P_get(swigCPtr);
   } 
  }

  public IntPtr N {
   get {
	 return HCSBSTREAMPINVOKE.loop_table_N_get(swigCPtr);
   } 
  }

  public loop_table() : this(HCSBSTREAMPINVOKE.new_loop_table(), true) {
  }

}
