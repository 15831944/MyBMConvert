/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HImCuttingGeometry : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HImCuttingGeometry(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HImCuttingGeometry obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HImCuttingGeometry() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HImCuttingGeometry(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public HImCuttingGeometry() : this(HCSMVOPINVOKE.new_HImCuttingGeometry(), true) {
  }

  public void CreateCuttingGeometry(MVO_POINTER_SIZED_INT source_key, MVO_POINTER_SIZED_INT target_key, int cutting_type, int body_level) {
    HCSMVOPINVOKE.HImCuttingGeometry_CreateCuttingGeometry__SWIG_0(swigCPtr, source_key, target_key, cutting_type, body_level);
  }

  public void CreateCuttingGeometry(MVO_POINTER_SIZED_INT source_key, MVO_POINTER_SIZED_INT target_key, int cutting_type) {
    HCSMVOPINVOKE.HImCuttingGeometry_CreateCuttingGeometry__SWIG_1(swigCPtr, source_key, target_key, cutting_type);
  }

  public void CreateCuttingGeometry(MVO_POINTER_SIZED_INT source_key, MVO_POINTER_SIZED_INT target_key) {
    HCSMVOPINVOKE.HImCuttingGeometry_CreateCuttingGeometry__SWIG_2(swigCPtr, source_key, target_key);
  }

  public void CreateCuttingGeometry(MVO_POINTER_SIZED_INT source_key, MVO_POINTER_SIZED_INT target_key, bool honor_modelling_matrices) {
    HCSMVOPINVOKE.HImCuttingGeometry_CreateCuttingGeometry__SWIG_3(swigCPtr, source_key, target_key, honor_modelling_matrices);
  }

  public static void RegisterCallbacks() {
    HCSMVOPINVOKE.HImCuttingGeometry_RegisterCallbacks();
  }

  public void SetSmallestFeature(float smallest_feature) {
    HCSMVOPINVOKE.HImCuttingGeometry_SetSmallestFeature(swigCPtr, smallest_feature);
  }

  public float GetSmallestFeature() {
    float ret = HCSMVOPINVOKE.HImCuttingGeometry_GetSmallestFeature(swigCPtr);
    return ret;
  }

  public void SetTolerance(float tolerance) {
    HCSMVOPINVOKE.HImCuttingGeometry_SetTolerance(swigCPtr, tolerance);
  }

  public float GetTolerance() {
    float ret = HCSMVOPINVOKE.HImCuttingGeometry_GetTolerance(swigCPtr);
    return ret;
  }

}
