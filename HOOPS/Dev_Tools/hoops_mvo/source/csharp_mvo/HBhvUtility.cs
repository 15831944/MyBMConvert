/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HBhvUtility : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HBhvUtility(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HBhvUtility obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HBhvUtility() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HBhvUtility(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public static void GetQuatPoint(HUtilityTextParser tp, HQuat quat) {
    HCSMVOPINVOKE.HBhvUtility_GetQuatPoint__SWIG_0(HUtilityTextParser.getCPtr(tp), HQuat.getCPtr(quat));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void GetMatrix(HUtilityTextParser tp, float[] matrix) {
    HCSMVOPINVOKE.HBhvUtility_GetMatrix__SWIG_0(HUtilityTextParser.getCPtr(tp), matrix);
  }

  public static void GetQuatPoint(string text, HQuat quat) {
    HCSMVOPINVOKE.HBhvUtility_GetQuatPoint__SWIG_1(text, HQuat.getCPtr(quat));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void GetMatrix(string text, float[] matrix) {
    HCSMVOPINVOKE.HBhvUtility_GetMatrix__SWIG_1(text, matrix);
  }

  public static void ConvertHSFtoMorph(string filename, HBaseModel model) {
    HCSMVOPINVOKE.HBhvUtility_ConvertHSFtoMorph(filename, HBaseModel.getCPtr(model));
  }

  public static void ConvertHSFtoSegSwitch(string filename, HBaseModel model) {
    HCSMVOPINVOKE.HBhvUtility_ConvertHSFtoSegSwitch(filename, HBaseModel.getCPtr(model));
  }

  public static void SetupAnimationReadFromHSF(HStreamFileToolkit mytool, HBaseModel model) {
    HCSMVOPINVOKE.HBhvUtility_SetupAnimationReadFromHSF(HStreamFileToolkit.getCPtr(mytool), HBaseModel.getCPtr(model));
  }

  public static void SetupAnimationWriteFromHSF(HStreamFileToolkit mytool, HBaseModel model) {
    HCSMVOPINVOKE.HBhvUtility_SetupAnimationWriteFromHSF(HStreamFileToolkit.getCPtr(mytool), HBaseModel.getCPtr(model));
  }

  public static void ShowModellingMatrix(float[] segment_modelling_matrix) {
    HCSMVOPINVOKE.HBhvUtility_ShowModellingMatrix(segment_modelling_matrix);
  }

  public static void MakeCameraKeyframe(HBaseView view, float timediff, bool targetmode) {
    HCSMVOPINVOKE.HBhvUtility_MakeCameraKeyframe__SWIG_0(HBaseView.getCPtr(view), timediff, targetmode);
  }

  public static void MakeCameraKeyframe(HBaseView view, float timediff) {
    HCSMVOPINVOKE.HBhvUtility_MakeCameraKeyframe__SWIG_1(HBaseView.getCPtr(view), timediff);
  }

  public static HBhvAnimation AddAnimation(HBaseModel model, System.Text.StringBuilder name, System.Text.StringBuilder targetpath, HPoint pivot) {
    IntPtr cPtr = HCSMVOPINVOKE.HBhvUtility_AddAnimation(HBaseModel.getCPtr(model), name, targetpath, HPoint.getCPtr(pivot));
    HBhvAnimation ret = (cPtr == IntPtr.Zero) ? null : new HBhvAnimation(cPtr, false);
    return ret;
  }

  public static void AddPosKeyframe(HBaseModel model, System.Text.StringBuilder animname, int tick, HPoint pos, bool linear) {
    HCSMVOPINVOKE.HBhvUtility_AddPosKeyframe(HBaseModel.getCPtr(model), animname, tick, HPoint.getCPtr(pos), linear);
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void AddRotKeyframe(HBaseModel model, System.Text.StringBuilder animname, int tick, HQuat pos, bool linear) {
    HCSMVOPINVOKE.HBhvUtility_AddRotKeyframe(HBaseModel.getCPtr(model), animname, tick, HQuat.getCPtr(pos), linear);
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void AddPosRotKeyframe(HBaseModel model, string animname, int tick, HPoint pivot, float[] matrix) {
    HCSMVOPINVOKE.HBhvUtility_AddPosRotKeyframe__SWIG_0(HBaseModel.getCPtr(model), animname, tick, HPoint.getCPtr(pivot), matrix);
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void AddMatrixKeyframe(HBaseModel model, HBhvAnimation ani, int tick, float[] matrix) {
    HCSMVOPINVOKE.HBhvUtility_AddMatrixKeyframe(HBaseModel.getCPtr(model), HBhvAnimation.getCPtr(ani), tick, matrix);
  }

  public static void AddPosRotKeyframe(HBaseModel model, System.Text.StringBuilder animname, int tick, HPoint pos, bool linear, HQuat quat, bool linear2) {
    HCSMVOPINVOKE.HBhvUtility_AddPosRotKeyframe__SWIG_1(HBaseModel.getCPtr(model), animname, tick, HPoint.getCPtr(pos), linear, HQuat.getCPtr(quat), linear2);
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void AddInstanceCreateKeyframe(HBaseModel model, System.Text.StringBuilder animname, int tick, System.Text.StringBuilder path, System.Text.StringBuilder include_path, System.Text.StringBuilder color) {
    HCSMVOPINVOKE.HBhvUtility_AddInstanceCreateKeyframe(HBaseModel.getCPtr(model), animname, tick, path, include_path, color);
  }

  public static void AddSegmentMoveKeyframe(HBaseModel model, HBhvAnimation anim, int tick, System.Text.StringBuilder path) {
    HCSMVOPINVOKE.HBhvUtility_AddSegmentMoveKeyframe(HBaseModel.getCPtr(model), HBhvAnimation.getCPtr(anim), tick, path);
  }

  public HBhvUtility() : this(HCSMVOPINVOKE.new_HBhvUtility(), true) {
  }

}
