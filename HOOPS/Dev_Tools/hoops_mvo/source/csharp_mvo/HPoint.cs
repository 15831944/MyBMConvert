/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HPoint : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HPoint(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HPoint obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HPoint() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HPoint(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public float x {
    set {
      HCSMVOPINVOKE.HPoint_x_set(swigCPtr, value);
    } 
    get {
      float ret = HCSMVOPINVOKE.HPoint_x_get(swigCPtr);
      return ret;
    } 
  }

  public float y {
    set {
      HCSMVOPINVOKE.HPoint_y_set(swigCPtr, value);
    } 
    get {
      float ret = HCSMVOPINVOKE.HPoint_y_get(swigCPtr);
      return ret;
    } 
  }

  public float z {
    set {
      HCSMVOPINVOKE.HPoint_z_set(swigCPtr, value);
    } 
    get {
      float ret = HCSMVOPINVOKE.HPoint_z_get(swigCPtr);
      return ret;
    } 
  }

  public HPoint() : this(HCSMVOPINVOKE.new_HPoint__SWIG_0(), true) {
  }

  public HPoint(float X, float Y, float Z) : this(HCSMVOPINVOKE.new_HPoint__SWIG_1(X, Y, Z), true) {
  }

  public HPoint(float X, float Y) : this(HCSMVOPINVOKE.new_HPoint__SWIG_2(X, Y), true) {
  }

  public HPoint(HPoint p) : this(HCSMVOPINVOKE.new_HPoint__SWIG_3(HPoint.getCPtr(p)), true) {
  }

  public void Set(float X, float Y, float Z) {
    HCSMVOPINVOKE.HPoint_Set__SWIG_0(swigCPtr, X, Y, Z);
  }

  public void Set(float X, float Y) {
    HCSMVOPINVOKE.HPoint_Set__SWIG_1(swigCPtr, X, Y);
  }

  public void Set(HPoint p) {
    HCSMVOPINVOKE.HPoint_Set__SWIG_2(swigCPtr, HPoint.getCPtr(p));
  }

  public void Add(float X, float Y, float Z) {
    HCSMVOPINVOKE.HPoint_Add__SWIG_0(swigCPtr, X, Y, Z);
  }

  public void Add(float X, float Y) {
    HCSMVOPINVOKE.HPoint_Add__SWIG_1(swigCPtr, X, Y);
  }

  public bool Equal(HPoint p, float epsi) {
    bool ret = HCSMVOPINVOKE.HPoint_Equal__SWIG_0(swigCPtr, HPoint.getCPtr(p), epsi);
    return ret;
  }

  public bool Equal(HPoint p) {
    bool ret = HCSMVOPINVOKE.HPoint_Equal__SWIG_1(swigCPtr, HPoint.getCPtr(p));
    return ret;
  }

}
