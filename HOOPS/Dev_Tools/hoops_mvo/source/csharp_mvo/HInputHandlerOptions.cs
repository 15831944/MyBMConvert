/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HInputHandlerOptions : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HInputHandlerOptions(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HInputHandlerOptions obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HInputHandlerOptions() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HInputHandlerOptions(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public HInputHandlerOptions() : this(HCSMVOPINVOKE.new_HInputHandlerOptions__SWIG_0(), true) {
  }

  public HInputHandlerOptions(HInputHandlerOptions o) : this(HCSMVOPINVOKE.new_HInputHandlerOptions__SWIG_1(HInputHandlerOptions.getCPtr(o)), true) {
  }

  public HBaseView m_pHBaseView {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_pHBaseView_set(swigCPtr, HBaseView.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HInputHandlerOptions_m_pHBaseView_get(swigCPtr);
      HBaseView ret = (cPtr == IntPtr.Zero) ? null : new HBaseView(cPtr, false);
      return ret;
    } 
  }

  public string m_pImageName {
	set { HCSMVOPINVOKE.HInputHandlerOptions_m_pImageName_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HInputHandlerOptions_m_pImageName_get(swigCPtr); } 
  }

  public string m_pImageFormat {
	set { HCSMVOPINVOKE.HInputHandlerOptions_m_pImageFormat_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HInputHandlerOptions_m_pImageFormat_get(swigCPtr); } 
  }

  public bool m_bLocal {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bLocal_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bLocal_get(swigCPtr);
      return ret;
    } 
  }

  public HStreamFileToolkit m_tk {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_tk_set(swigCPtr, HStreamFileToolkit.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HInputHandlerOptions_m_tk_get(swigCPtr);
      HStreamFileToolkit ret = (cPtr == IntPtr.Zero) ? null : new HStreamFileToolkit(cPtr, false);
      return ret;
    } 
  }

  public bool m_bLogging {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bLogging_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bLogging_get(swigCPtr);
      return ret;
    } 
  }

  public HIOConnector m_pConnector {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_pConnector_set(swigCPtr, HIOConnector.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HInputHandlerOptions_m_pConnector_get(swigCPtr);
      HIOConnector ret = (cPtr == IntPtr.Zero) ? null : new HIOConnector(cPtr, false);
      return ret;
    } 
  }

  public IntPtr m_pExtendedData {
	set { HCSMVOPINVOKE.HInputHandlerOptions_m_pExtendedData_set(swigCPtr, value); } 
	get { return new IntPtr((int)HCSMVOPINVOKE.HInputHandlerOptions_m_pExtendedData_get(swigCPtr)); } 
  }

  public bool m_bImportMetadata {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bImportMetadata_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bImportMetadata_get(swigCPtr);
      return ret;
    } 
  }

  public string m_license {
	set { HCSMVOPINVOKE.HInputHandlerOptions_m_license_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HInputHandlerOptions_m_license_get(swigCPtr); } 
  }

  public bool m_bIgnoreOffEntities {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bIgnoreOffEntities_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bIgnoreOffEntities_get(swigCPtr);
      return ret;
    } 
  }

  public double m_coneFactor {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_coneFactor_set(swigCPtr, value);
    } 
    get {
      double ret = HCSMVOPINVOKE.HInputHandlerOptions_m_coneFactor_get(swigCPtr);
      return ret;
    } 
  }

  public double m_factorForSmartSolids {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_factorForSmartSolids_set(swigCPtr, value);
    } 
    get {
      double ret = HCSMVOPINVOKE.HInputHandlerOptions_m_factorForSmartSolids_get(swigCPtr);
      return ret;
    } 
  }

  public int m_iDGNCellHeaderOption {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_iDGNCellHeaderOption_set(swigCPtr, value);
    } 
    get {
      int ret = HCSMVOPINVOKE.HInputHandlerOptions_m_iDGNCellHeaderOption_get(swigCPtr);
      return ret;
    } 
  }

  public IntPtr m_pPRCAsmModelFile {
	set { HCSMVOPINVOKE.HInputHandlerOptions_m_pPRCAsmModelFile_set(swigCPtr, value); } 
	get { return new IntPtr((int)HCSMVOPINVOKE.HInputHandlerOptions_m_pPRCAsmModelFile_get(swigCPtr)); } 
  }

  public bool m_pPRCDeleteModelFile {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_pPRCDeleteModelFile_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_pPRCDeleteModelFile_get(swigCPtr);
      return ret;
    } 
  }

  public HIOConnector m_pPRCPMIConnector {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_pPRCPMIConnector_set(swigCPtr, HIOConnector.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HInputHandlerOptions_m_pPRCPMIConnector_get(swigCPtr);
      HIOConnector ret = (cPtr == IntPtr.Zero) ? null : new HIOConnector(cPtr, false);
      return ret;
    } 
  }

  public BREP_Topology m_pPRCTopologyManager {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_pPRCTopologyManager_set(swigCPtr, BREP_Topology.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HInputHandlerOptions_m_pPRCTopologyManager_get(swigCPtr);
      BREP_Topology ret = (cPtr == IntPtr.Zero) ? null : new BREP_Topology(cPtr, false);
      return ret;
    } 
  }

  public bool m_bPRCMergeFaces {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCMergeFaces_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCMergeFaces_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bPRCImportNonBrepFaces {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCImportNonBrepFaces_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCImportNonBrepFaces_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bPRCCreatePRCFileOnly {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCCreatePRCFileOnly_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCCreatePRCFileOnly_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bPRCInstanceShells {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCInstanceShells_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCInstanceShells_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bPRCCalculatePhysicalProperties {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCCalculatePhysicalProperties_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCCalculatePhysicalProperties_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_q_const__char_int_a___p_q_const__char_r_int__void m_pPRCMultiModelSelectionCallback {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_pPRCMultiModelSelectionCallback_set(swigCPtr, SWIGTYPE_p_f_p_q_const__char_int_a___p_q_const__char_r_int__void.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HInputHandlerOptions_m_pPRCMultiModelSelectionCallback_get(swigCPtr);
      SWIGTYPE_p_f_p_q_const__char_int_a___p_q_const__char_r_int__void ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_q_const__char_int_a___p_q_const__char_r_int__void(cPtr, false);
      return ret;
    } 
  }

  public bool m_bPRCStoreUserAttributes {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCStoreUserAttributes_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCStoreUserAttributes_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bPRCImportHiddenObjects {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCImportHiddenObjects_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bPRCImportHiddenObjects_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bDGNRebaselineModel {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bDGNRebaselineModel_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bDGNRebaselineModel_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bDGNImportAllModels {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bDGNImportAllModels_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bDGNImportAllModels_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bDisableDWFDrawOrder {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bDisableDWFDrawOrder_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bDisableDWFDrawOrder_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bImportThumbnail {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bImportThumbnail_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bImportThumbnail_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bDWFRebaselineModel {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bDWFRebaselineModel_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bDWFRebaselineModel_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bOptimizeSegmentTree {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bOptimizeSegmentTree_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bOptimizeSegmentTree_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bLegacyOptimize {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bLegacyOptimize_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bLegacyOptimize_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bDwgSkipUnreferencedBlocks {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bDwgSkipUnreferencedBlocks_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bDwgSkipUnreferencedBlocks_get(swigCPtr);
      return ret;
    } 
  }

  public double m_z_separation {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_z_separation_set(swigCPtr, value);
    } 
    get {
      double ret = HCSMVOPINVOKE.HInputHandlerOptions_m_z_separation_get(swigCPtr);
      return ret;
    } 
  }

  public double m_depth_range {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_depth_range_set(swigCPtr, value);
    } 
    get {
      double ret = HCSMVOPINVOKE.HInputHandlerOptions_m_depth_range_get(swigCPtr);
      return ret;
    } 
  }

  public IntPtr m_pOOCNodeDeltas {
	set { HCSMVOPINVOKE.HInputHandlerOptions_m_pOOCNodeDeltas_set(swigCPtr, value); } 
	get { return new IntPtr((int)HCSMVOPINVOKE.HInputHandlerOptions_m_pOOCNodeDeltas_get(swigCPtr)); } 
  }

  public bool m_bOOCAutoUpdate {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bOOCAutoUpdate_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bOOCAutoUpdate_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bOOCAutoCleanup {
    set {
      HCSMVOPINVOKE.HInputHandlerOptions_m_bOOCAutoCleanup_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HInputHandlerOptions_m_bOOCAutoCleanup_get(swigCPtr);
      return ret;
    } 
  }

  public static readonly int SINGLE_ENTITY_CELLHEADER = HCSMVOPINVOKE.HInputHandlerOptions_SINGLE_ENTITY_CELLHEADER_get();
  public static readonly int BREAK_CELLHEADER = HCSMVOPINVOKE.HInputHandlerOptions_BREAK_CELLHEADER_get();
  public static readonly int OPT_CELLHEADER = HCSMVOPINVOKE.HInputHandlerOptions_OPT_CELLHEADER_get();

}
