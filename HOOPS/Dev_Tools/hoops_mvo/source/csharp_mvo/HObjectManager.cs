/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HObjectManager : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HObjectManager(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HObjectManager obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HObjectManager() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HObjectManager(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public HObjectManager() : this(HCSMVOPINVOKE.new_HObjectManager(), true) {
  }

  public HObject AddHObject(HObject hobject) {
    IntPtr cPtr = HCSMVOPINVOKE.HObjectManager_AddHObject(swigCPtr, HObject.getCPtr(hobject));
    HObject ret = (cPtr == IntPtr.Zero) ? null : new HObject(cPtr, false);
    return ret;
  }

  public HObject RemoveHObject(string name) {
    IntPtr cPtr = HCSMVOPINVOKE.HObjectManager_RemoveHObject(swigCPtr, name);
    HObject ret = (cPtr == IntPtr.Zero) ? null : new HObject(cPtr, false);
    return ret;
  }

  public HObject GetHObject(string name) {
    IntPtr cPtr = HCSMVOPINVOKE.HObjectManager_GetHObject(swigCPtr, name);
    HObject ret = (cPtr == IntPtr.Zero) ? null : new HObject(cPtr, false);
    return ret;
  }

  public static MVO_POINTER_SIZED_INT FindHObjectSegment(MVO_POINTER_SIZED_INT segkey, System.Text.StringBuilder res, System.Text.StringBuilder ores) {return HCSMVOPINVOKE.HObjectManager_FindHObjectSegment__SWIG_0(segkey, res, ores);}

  public static MVO_POINTER_SIZED_INT FindHObjectSegment(MVO_POINTER_SIZED_INT segkey, System.Text.StringBuilder res) {return HCSMVOPINVOKE.HObjectManager_FindHObjectSegment__SWIG_1(segkey, res);}

  public static MVO_POINTER_SIZED_INT FindHObjectSegment(MVO_POINTER_SIZED_INT segkey) {return HCSMVOPINVOKE.HObjectManager_FindHObjectSegment__SWIG_2(segkey);}

  public static void FileLoadHObjectCheck(MVO_POINTER_SIZED_INT segkey) {
    HCSMVOPINVOKE.HObjectManager_FileLoadHObjectCheck(segkey);
  }

  public static void SetHObjectSegment(string objecttype) {
    HCSMVOPINVOKE.HObjectManager_SetHObjectSegment(objecttype);
  }

  public static void SetHObjectInfo(string objectinfo) {
    HCSMVOPINVOKE.HObjectManager_SetHObjectInfo(objectinfo);
  }

}
