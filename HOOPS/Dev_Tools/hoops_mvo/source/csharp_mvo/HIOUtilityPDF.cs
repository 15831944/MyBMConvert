/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HIOUtilityPDF : HOutputHandler {
  private HandleRef swigCPtr;

  public HIOUtilityPDF(IntPtr cPtr, bool cMemoryOwn) : base(HCSMVOPINVOKE.HIOUtilityPDFUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HIOUtilityPDF obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~HIOUtilityPDF() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HIOUtilityPDF(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public HIOUtilityPDF() : this(HCSMVOPINVOKE.new_HIOUtilityPDF(), true) {
  }

  public override string GetOutputName() {
    string ret = HCSMVOPINVOKE.HIOUtilityPDF_GetOutputName(swigCPtr);
    return ret;
  }

  public override void RegisterOutputHandlerTypes() {
    HCSMVOPINVOKE.HIOUtilityPDF_RegisterOutputHandlerTypes(swigCPtr);
  }

  public override string GetOutputTypesString() {
    string ret = HCSMVOPINVOKE.HIOUtilityPDF_GetOutputTypesString(swigCPtr);
    return ret;
  }

  public override HOutputHandlerStyle GetOutputStyle() {
    HOutputHandlerStyle ret = (HOutputHandlerStyle)HCSMVOPINVOKE.HIOUtilityPDF_GetOutputStyle(swigCPtr);
    return ret;
  }

  public override string GetOutputDefaultHSRA() {
    string ret = HCSMVOPINVOKE.HIOUtilityPDF_GetOutputDefaultHSRA(swigCPtr);
    return ret;
  }

  public bool Has3dSupport() {
    bool ret = HCSMVOPINVOKE.HIOUtilityPDF_Has3dSupport(swigCPtr);
    return ret;
  }

  public override HFileIOResult FileOutputByKey(string filename, MVO_POINTER_SIZED_INT key, HOutputHandlerOptions options) {
    HFileIOResult ret = (HFileIOResult)HCSMVOPINVOKE.HIOUtilityPDF_FileOutputByKey(swigCPtr, filename, key, HOutputHandlerOptions.getCPtr(options));
    return ret;
  }

}
