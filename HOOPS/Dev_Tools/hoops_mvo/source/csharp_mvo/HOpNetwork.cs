/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HOpNetwork : HBaseOperator {
  private HandleRef swigCPtr;

  public HOpNetwork(IntPtr cPtr, bool cMemoryOwn) : base(HCSMVOPINVOKE.HOpNetworkUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HOpNetwork obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~HOpNetwork() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HOpNetwork(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public HOpNetwork(HBaseView view) : this(HCSMVOPINVOKE.new_HOpNetwork(HBaseView.getCPtr(view)), true) {
    SwigDirectorConnect();
  }

  public override int OnLButtonDown(HEventInfo hevent) {
    int ret = ((this.GetType() == typeof(HOpNetwork)) ? HCSMVOPINVOKE.HOpNetwork_OnLButtonDown(swigCPtr, HEventInfo.getCPtr(hevent)) : HCSMVOPINVOKE.HOpNetwork_OnLButtonDownSwigExplicitHOpNetwork(swigCPtr, HEventInfo.getCPtr(hevent)));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override int OnLButtonDownAndMove(HEventInfo hevent) {
    int ret = ((this.GetType() == typeof(HOpNetwork)) ? HCSMVOPINVOKE.HOpNetwork_OnLButtonDownAndMove(swigCPtr, HEventInfo.getCPtr(hevent)) : HCSMVOPINVOKE.HOpNetwork_OnLButtonDownAndMoveSwigExplicitHOpNetwork(swigCPtr, HEventInfo.getCPtr(hevent)));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override int OnLButtonUp(HEventInfo hevent) {
    int ret = ((this.GetType() == typeof(HOpNetwork)) ? HCSMVOPINVOKE.HOpNetwork_OnLButtonUp(swigCPtr, HEventInfo.getCPtr(hevent)) : HCSMVOPINVOKE.HOpNetwork_OnLButtonUpSwigExplicitHOpNetwork(swigCPtr, HEventInfo.getCPtr(hevent)));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override int OnRButtonDown(HEventInfo hevent) {
    int ret = ((this.GetType() == typeof(HOpNetwork)) ? HCSMVOPINVOKE.HOpNetwork_OnRButtonDown(swigCPtr, HEventInfo.getCPtr(hevent)) : HCSMVOPINVOKE.HOpNetwork_OnRButtonDownSwigExplicitHOpNetwork(swigCPtr, HEventInfo.getCPtr(hevent)));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override int OnRButtonDownAndMove(HEventInfo hevent) {
    int ret = ((this.GetType() == typeof(HOpNetwork)) ? HCSMVOPINVOKE.HOpNetwork_OnRButtonDownAndMove(swigCPtr, HEventInfo.getCPtr(hevent)) : HCSMVOPINVOKE.HOpNetwork_OnRButtonDownAndMoveSwigExplicitHOpNetwork(swigCPtr, HEventInfo.getCPtr(hevent)));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override int OnRButtonUp(HEventInfo hevent) {
    int ret = ((this.GetType() == typeof(HOpNetwork)) ? HCSMVOPINVOKE.HOpNetwork_OnRButtonUp(swigCPtr, HEventInfo.getCPtr(hevent)) : HCSMVOPINVOKE.HOpNetwork_OnRButtonUpSwigExplicitHOpNetwork(swigCPtr, HEventInfo.getCPtr(hevent)));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  protected MVO_POINTER_SIZED_INT m_NetworkKey {
	set { HCSMVOPINVOKE.HOpNetwork_m_NetworkKey_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HOpNetwork_m_NetworkKey_get(swigCPtr); } 
  }

  protected MVO_POINTER_SIZED_INT m_NodesKey {
	set { HCSMVOPINVOKE.HOpNetwork_m_NodesKey_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HOpNetwork_m_NodesKey_get(swigCPtr); } 
  }

  protected MVO_POINTER_SIZED_INT m_SelectedNodeKey {
	set { HCSMVOPINVOKE.HOpNetwork_m_SelectedNodeKey_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HOpNetwork_m_SelectedNodeKey_get(swigCPtr); } 
  }

  protected MVO_POINTER_SIZED_INT m_SelectedLineKey {
	set { HCSMVOPINVOKE.HOpNetwork_m_SelectedLineKey_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HOpNetwork_m_SelectedLineKey_get(swigCPtr); } 
  }

  protected MVO_POINTER_SIZED_INT My_KInsert_Line(float x1, float y1, float z1, float x2, float y2, float z2) {return HCSMVOPINVOKE.HOpNetwork_My_KInsert_Line(swigCPtr, x1, y1, z1, x2, y2, z2);}

  protected void My_Line_Common(MVO_POINTER_SIZED_INT key, float x1, float y1, float z1, float x2, float y2, float z2) {
    HCSMVOPINVOKE.HOpNetwork_My_Line_Common(swigCPtr, key, x1, y1, z1, x2, y2, z2);
  }

  protected void My_Edit_Line(MVO_POINTER_SIZED_INT key, float x1, float y1, float z1, float x2, float y2, float z2) {
    HCSMVOPINVOKE.HOpNetwork_My_Edit_Line(swigCPtr, key, x1, y1, z1, x2, y2, z2);
  }

  protected void My_Delete_Line(MVO_POINTER_SIZED_INT key) {
    HCSMVOPINVOKE.HOpNetwork_My_Delete_Line(swigCPtr, key);
  }

  protected MVO_POINTER_SIZED_INT My_KInsert_Node(float x, float y, float z) {return HCSMVOPINVOKE.HOpNetwork_My_KInsert_Node(swigCPtr, x, y, z);}

  protected void My_Edit_Node(MVO_POINTER_SIZED_INT key, float x, float y, float z) {
    HCSMVOPINVOKE.HOpNetwork_My_Edit_Node(swigCPtr, key, x, y, z);
  }

  protected void Show_Node_Position(MVO_POINTER_SIZED_INT key, float[] x, float[] y, float[] z) {
    HCSMVOPINVOKE.HOpNetwork_Show_Node_Position(swigCPtr, key, x, y, z);
  }

  protected MVO_POINTER_SIZED_INT Get_Node_Key(MVO_POINTER_SIZED_INT key) {return HCSMVOPINVOKE.HOpNetwork_Get_Node_Key(swigCPtr, key);}

  protected void My_Open_Node(MVO_POINTER_SIZED_INT key) {
    HCSMVOPINVOKE.HOpNetwork_My_Open_Node(swigCPtr, key);
  }

  protected void My_Close_Node() {
    HCSMVOPINVOKE.HOpNetwork_My_Close_Node(swigCPtr);
  }

  protected MVO_POINTER_SIZED_INT My_Renumber_Key(MVO_POINTER_SIZED_INT key) {return HCSMVOPINVOKE.HOpNetwork_My_Renumber_Key(swigCPtr, key);}

  protected MVO_POINTER_SIZED_INT GetNextKey() {return HCSMVOPINVOKE.HOpNetwork_GetNextKey(swigCPtr);}

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("CreateListenerManager", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateHOpNetwork_0(SwigDirectorCreateListenerManager);
    if (SwigDerivedClassHasMethod("OnLButtonDown", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateHOpNetwork_1(SwigDirectorOnLButtonDown);
    if (SwigDerivedClassHasMethod("OnMouseMove", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateHOpNetwork_2(SwigDirectorOnMouseMove);
    if (SwigDerivedClassHasMethod("OnLButtonUp", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateHOpNetwork_3(SwigDirectorOnLButtonUp);
    if (SwigDerivedClassHasMethod("OnLButtonDblClk", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateHOpNetwork_4(SwigDirectorOnLButtonDblClk);
    if (SwigDerivedClassHasMethod("OnMButtonDown", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateHOpNetwork_5(SwigDirectorOnMButtonDown);
    if (SwigDerivedClassHasMethod("OnMButtonUp", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateHOpNetwork_6(SwigDirectorOnMButtonUp);
    if (SwigDerivedClassHasMethod("OnMButtonDblClk", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateHOpNetwork_7(SwigDirectorOnMButtonDblClk);
    if (SwigDerivedClassHasMethod("OnRButtonDown", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateHOpNetwork_8(SwigDirectorOnRButtonDown);
    if (SwigDerivedClassHasMethod("OnRButtonUp", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateHOpNetwork_9(SwigDirectorOnRButtonUp);
    if (SwigDerivedClassHasMethod("OnRButtonDblClk", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateHOpNetwork_10(SwigDirectorOnRButtonDblClk);
    if (SwigDerivedClassHasMethod("OnMouseWheel", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateHOpNetwork_11(SwigDirectorOnMouseWheel);
    if (SwigDerivedClassHasMethod("OnKeyDown", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateHOpNetwork_12(SwigDirectorOnKeyDown);
    if (SwigDerivedClassHasMethod("OnKeyUp", swigMethodTypes13))
      swigDelegate13 = new SwigDelegateHOpNetwork_13(SwigDirectorOnKeyUp);
    if (SwigDerivedClassHasMethod("OnTouchesDown", swigMethodTypes14))
      swigDelegate14 = new SwigDelegateHOpNetwork_14(SwigDirectorOnTouchesDown);
    if (SwigDerivedClassHasMethod("OnTouchesMove", swigMethodTypes15))
      swigDelegate15 = new SwigDelegateHOpNetwork_15(SwigDirectorOnTouchesMove);
    if (SwigDerivedClassHasMethod("OnTouchesUp", swigMethodTypes16))
      swigDelegate16 = new SwigDelegateHOpNetwork_16(SwigDirectorOnTouchesUp);
    if (SwigDerivedClassHasMethod("Clone", swigMethodTypes17))
      swigDelegate17 = new SwigDelegateHOpNetwork_17(SwigDirectorClone);
    if (SwigDerivedClassHasMethod("OperatorStarted", swigMethodTypes18))
      swigDelegate18 = new SwigDelegateHOpNetwork_18(SwigDirectorOperatorStarted);
    if (SwigDerivedClassHasMethod("GetName", swigMethodTypes19))
      swigDelegate19 = new SwigDelegateHOpNetwork_19(SwigDirectorGetName);
    if (SwigDerivedClassHasMethod("OnLButtonDownAndMove", swigMethodTypes20))
      swigDelegate20 = new SwigDelegateHOpNetwork_20(SwigDirectorOnLButtonDownAndMove);
    if (SwigDerivedClassHasMethod("OnMButtonDownAndMove", swigMethodTypes21))
      swigDelegate21 = new SwigDelegateHOpNetwork_21(SwigDirectorOnMButtonDownAndMove);
    if (SwigDerivedClassHasMethod("OnRButtonDownAndMove", swigMethodTypes22))
      swigDelegate22 = new SwigDelegateHOpNetwork_22(SwigDirectorOnRButtonDownAndMove);
    if (SwigDerivedClassHasMethod("OnLRButtonDownAndMove", swigMethodTypes23))
      swigDelegate23 = new SwigDelegateHOpNetwork_23(SwigDirectorOnLRButtonDownAndMove);
    if (SwigDerivedClassHasMethod("OnNoButtonDownAndMove", swigMethodTypes24))
      swigDelegate24 = new SwigDelegateHOpNetwork_24(SwigDirectorOnNoButtonDownAndMove);
    if (SwigDerivedClassHasMethod("OnTimer", swigMethodTypes25))
      swigDelegate25 = new SwigDelegateHOpNetwork_25(SwigDirectorOnTimer);
    HCSMVOPINVOKE.HOpNetwork_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25);
  }

  private bool SwigDerivedClassHasMethod(string methodName, Type[] methodTypes) {
    System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(HOpNetwork));
    return hasDerivedMethod;
  }

  private IntPtr SwigDirectorCreateListenerManager() {
    return HEventListener.getCPtr(CreateListenerManager()).Handle;
  }

  private int SwigDirectorOnLButtonDown(IntPtr hevent) {
    return OnLButtonDown(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMouseMove(IntPtr hevent) {
    return OnMouseMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnLButtonUp(IntPtr hevent) {
    return OnLButtonUp(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnLButtonDblClk(IntPtr hevent) {
    return OnLButtonDblClk(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMButtonDown(IntPtr hevent) {
    return OnMButtonDown(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMButtonUp(IntPtr hevent) {
    return OnMButtonUp(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMButtonDblClk(IntPtr hevent) {
    return OnMButtonDblClk(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnRButtonDown(IntPtr hevent) {
    return OnRButtonDown(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnRButtonUp(IntPtr hevent) {
    return OnRButtonUp(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnRButtonDblClk(IntPtr hevent) {
    return OnRButtonDblClk(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMouseWheel(IntPtr hevent) {
    return OnMouseWheel(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnKeyDown(IntPtr hevent) {
    return OnKeyDown(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnKeyUp(IntPtr hevent) {
    return OnKeyUp(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnTouchesDown(IntPtr hevent) {
    return OnTouchesDown(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnTouchesMove(IntPtr hevent) {
    return OnTouchesMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnTouchesUp(IntPtr hevent) {
    return OnTouchesUp(new HEventInfo(hevent, false));
  }

  private IntPtr SwigDirectorClone() {
    return HBaseOperator.getCPtr(Clone()).Handle;
  }

  private bool SwigDirectorOperatorStarted() {
    return OperatorStarted();
  }

  private string SwigDirectorGetName() {
    return GetName();
  }

  private int SwigDirectorOnLButtonDownAndMove(IntPtr hevent) {
    return OnLButtonDownAndMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMButtonDownAndMove(IntPtr hevent) {
    return OnMButtonDownAndMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnRButtonDownAndMove(IntPtr hevent) {
    return OnRButtonDownAndMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnLRButtonDownAndMove(IntPtr hevent) {
    return OnLRButtonDownAndMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnNoButtonDownAndMove(IntPtr hevent) {
    return OnNoButtonDownAndMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnTimer(IntPtr hevent) {
    return OnTimer(new HEventInfo(hevent, false));
  }

  public delegate IntPtr SwigDelegateHOpNetwork_0();
  public delegate int SwigDelegateHOpNetwork_1(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_2(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_3(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_4(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_5(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_6(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_7(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_8(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_9(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_10(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_11(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_12(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_13(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_14(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_15(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_16(IntPtr hevent);
  public delegate IntPtr SwigDelegateHOpNetwork_17();
  public delegate bool SwigDelegateHOpNetwork_18();
  public delegate string SwigDelegateHOpNetwork_19();
  public delegate int SwigDelegateHOpNetwork_20(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_21(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_22(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_23(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_24(IntPtr hevent);
  public delegate int SwigDelegateHOpNetwork_25(IntPtr hevent);

  private SwigDelegateHOpNetwork_0 swigDelegate0;
  private SwigDelegateHOpNetwork_1 swigDelegate1;
  private SwigDelegateHOpNetwork_2 swigDelegate2;
  private SwigDelegateHOpNetwork_3 swigDelegate3;
  private SwigDelegateHOpNetwork_4 swigDelegate4;
  private SwigDelegateHOpNetwork_5 swigDelegate5;
  private SwigDelegateHOpNetwork_6 swigDelegate6;
  private SwigDelegateHOpNetwork_7 swigDelegate7;
  private SwigDelegateHOpNetwork_8 swigDelegate8;
  private SwigDelegateHOpNetwork_9 swigDelegate9;
  private SwigDelegateHOpNetwork_10 swigDelegate10;
  private SwigDelegateHOpNetwork_11 swigDelegate11;
  private SwigDelegateHOpNetwork_12 swigDelegate12;
  private SwigDelegateHOpNetwork_13 swigDelegate13;
  private SwigDelegateHOpNetwork_14 swigDelegate14;
  private SwigDelegateHOpNetwork_15 swigDelegate15;
  private SwigDelegateHOpNetwork_16 swigDelegate16;
  private SwigDelegateHOpNetwork_17 swigDelegate17;
  private SwigDelegateHOpNetwork_18 swigDelegate18;
  private SwigDelegateHOpNetwork_19 swigDelegate19;
  private SwigDelegateHOpNetwork_20 swigDelegate20;
  private SwigDelegateHOpNetwork_21 swigDelegate21;
  private SwigDelegateHOpNetwork_22 swigDelegate22;
  private SwigDelegateHOpNetwork_23 swigDelegate23;
  private SwigDelegateHOpNetwork_24 swigDelegate24;
  private SwigDelegateHOpNetwork_25 swigDelegate25;

  private static Type[] swigMethodTypes0 = new Type[] {  };
  private static Type[] swigMethodTypes1 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes2 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes3 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes4 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes5 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes6 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes7 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes8 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes9 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes10 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes11 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes12 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes13 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes14 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes15 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes16 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes17 = new Type[] {  };
  private static Type[] swigMethodTypes18 = new Type[] {  };
  private static Type[] swigMethodTypes19 = new Type[] {  };
  private static Type[] swigMethodTypes20 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes21 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes22 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes23 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes24 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes25 = new Type[] { typeof(HEventInfo) };
}
