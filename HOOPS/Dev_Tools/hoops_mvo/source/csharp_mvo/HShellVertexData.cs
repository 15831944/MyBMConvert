/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HShellVertexData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HShellVertexData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HShellVertexData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HShellVertexData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HShellVertexData(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public HShellVertexData() : this(HCSMVOPINVOKE.new_HShellVertexData(), true) {
  }

  public void SetKey(MVO_POINTER_SIZED_INT key) {
    HCSMVOPINVOKE.HShellVertexData_SetKey(swigCPtr, key);
  }

  public string GetHType() {
    string ret = HCSMVOPINVOKE.HShellVertexData_GetHType(swigCPtr);
    return ret;
  }

  public int GetVertexCount() {
    int ret = HCSMVOPINVOKE.HShellVertexData_GetVertexCount(swigCPtr);
    return ret;
  }

  public MVO_POINTER_SIZED_INT GetKey() {return HCSMVOPINVOKE.HShellVertexData_GetKey(swigCPtr);}

  public int GetFIndexDataSize() {
    int ret = HCSMVOPINVOKE.HShellVertexData_GetFIndexDataSize(swigCPtr);
    return ret;
  }

  public IntPtr GetFIndexData() {return HCSMVOPINVOKE.HShellVertexData_GetFIndexData__SWIG_0(swigCPtr);}

  public void GetFIndexData(float[] data) {
    HCSMVOPINVOKE.HShellVertexData_GetFIndexData__SWIG_1(swigCPtr, data);
  }

  public void SetFIndexData(int size, float[] data) {
    HCSMVOPINVOKE.HShellVertexData_SetFIndexData(swigCPtr, size, data);
  }

}
