/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HKeyframe3String : HKeyframe {
  private HandleRef swigCPtr;

  public HKeyframe3String(IntPtr cPtr, bool cMemoryOwn) : base(HCSMVOPINVOKE.HKeyframe3StringUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HKeyframe3String obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~HKeyframe3String() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HKeyframe3String(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public HKeyframe3String() : this(HCSMVOPINVOKE.new_HKeyframe3String(), true) {
  }

  public override HKeyframe Clone() {
    IntPtr cPtr = HCSMVOPINVOKE.HKeyframe3String_Clone(swigCPtr);
    HKeyframe ret = (cPtr == IntPtr.Zero) ? null : new HKeyframe(cPtr, false);
    return ret;
  }

  public override void Serialize(SWIGTYPE_p_HUtilityXMLTag xmlgen) {
    HCSMVOPINVOKE.HKeyframe3String_Serialize(swigCPtr, SWIGTYPE_p_HUtilityXMLTag.getCPtr(xmlgen));
  }

  public void SetTarget(string t1, string t2, string t3) {
    HCSMVOPINVOKE.HKeyframe3String_SetTarget(swigCPtr, t1, t2, t3);
  }

  public System.Text.StringBuilder GetTarget1() {
    string ret = HCSMVOPINVOKE.HKeyframe3String_GetTarget1(swigCPtr);
    return ret;
  }

  public System.Text.StringBuilder GetTarget2() {
    string ret = HCSMVOPINVOKE.HKeyframe3String_GetTarget2(swigCPtr);
    return ret;
  }

  public System.Text.StringBuilder GetTarget3() {
    string ret = HCSMVOPINVOKE.HKeyframe3String_GetTarget3(swigCPtr);
    return ret;
  }

  public string m_t1 {
    set {
      HCSMVOPINVOKE.HKeyframe3String_m_t1_set(swigCPtr, value);
    } 
    get {
      string ret = HCSMVOPINVOKE.HKeyframe3String_m_t1_get(swigCPtr);
      return ret;
    } 
  }

  public string m_t2 {
    set {
      HCSMVOPINVOKE.HKeyframe3String_m_t2_set(swigCPtr, value);
    } 
    get {
      string ret = HCSMVOPINVOKE.HKeyframe3String_m_t2_get(swigCPtr);
      return ret;
    } 
  }

  public string m_t3 {
    set {
      HCSMVOPINVOKE.HKeyframe3String_m_t3_set(swigCPtr, value);
    } 
    get {
      string ret = HCSMVOPINVOKE.HKeyframe3String_m_t3_get(swigCPtr);
      return ret;
    } 
  }

}
