/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HTClient : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HTClient(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HTClient obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HTClient() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HTClient(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public HTClient(float interval, HTCStyle style, SWIGTYPE_p_f_float_float_p_void__bool tick_function, IntPtr user_data) : this(HCSMVOPINVOKE.new_HTClient__SWIG_0(interval, (int)style, SWIGTYPE_p_f_float_float_p_void__bool.getCPtr(tick_function), user_data), true) {
  }

  public HTClient(float interval, HTCStyle style, SWIGTYPE_p_f_float_float_p_void__bool tick_function) : this(HCSMVOPINVOKE.new_HTClient__SWIG_1(interval, (int)style, SWIGTYPE_p_f_float_float_p_void__bool.getCPtr(tick_function)), true) {
  }

  public HTClient(float interval, HTCStyle style) : this(HCSMVOPINVOKE.new_HTClient__SWIG_2(interval, (int)style), true) {
  }

  public HTClient(float interval) : this(HCSMVOPINVOKE.new_HTClient__SWIG_3(interval), true) {
  }

  public HTClient() : this(HCSMVOPINVOKE.new_HTClient__SWIG_4(), true) {
  }

  public virtual bool Tick(float request_time, float actual_time) {
    bool ret = HCSMVOPINVOKE.HTClient_Tick(swigCPtr, request_time, actual_time);
    return ret;
  }

  public void SetInterval(float interval) {
    HCSMVOPINVOKE.HTClient_SetInterval(swigCPtr, interval);
  }

  public float GetInterval() {
    float ret = HCSMVOPINVOKE.HTClient_GetInterval(swigCPtr);
    return ret;
  }

  public void SetStyle(HTCStyle style) {
    HCSMVOPINVOKE.HTClient_SetStyle(swigCPtr, (int)style);
  }

  public HTCStyle GetStyle() {
    HTCStyle ret = (HTCStyle)HCSMVOPINVOKE.HTClient_GetStyle(swigCPtr);
    return ret;
  }

  public void SetNextRequest(float nr) {
    HCSMVOPINVOKE.HTClient_SetNextRequest(swigCPtr, nr);
  }

  public float GetNextRequest() {
    float ret = HCSMVOPINVOKE.HTClient_GetNextRequest(swigCPtr);
    return ret;
  }

  public int GetPriority() {
    int ret = HCSMVOPINVOKE.HTClient_GetPriority(swigCPtr);
    return ret;
  }

  public void SetPriorityLowest() {
    HCSMVOPINVOKE.HTClient_SetPriorityLowest(swigCPtr);
  }

  public void SetUserData(IntPtr user_data) {
    HCSMVOPINVOKE.HTClient_SetUserData(swigCPtr, user_data);
  }

  public IntPtr GetUserData() {return new IntPtr((int)HCSMVOPINVOKE.HTClient_GetUserData(swigCPtr));}

  public void SetTickFunction(SWIGTYPE_p_f_float_float_p_void__bool tick_function) {
    HCSMVOPINVOKE.HTClient_SetTickFunction(swigCPtr, SWIGTYPE_p_f_float_float_p_void__bool.getCPtr(tick_function));
  }

  public SWIGTYPE_p_f_float_float_p_void__bool GetTickFunction() {
    IntPtr cPtr = HCSMVOPINVOKE.HTClient_GetTickFunction(swigCPtr);
    SWIGTYPE_p_f_float_float_p_void__bool ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_f_float_float_p_void__bool(cPtr, false);
    return ret;
  }

}
