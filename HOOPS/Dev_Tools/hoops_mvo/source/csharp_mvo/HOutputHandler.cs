/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HOutputHandler : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HOutputHandler(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HOutputHandler obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HOutputHandler() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HOutputHandler(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public HOutputHandler() : this(HCSMVOPINVOKE.new_HOutputHandler(), true) {
    SwigDirectorConnect();
  }

  public virtual string GetOutputName() {
    string ret = HCSMVOPINVOKE.HOutputHandler_GetOutputName(swigCPtr);
    return ret;
  }

  public uint GetOutputOps() {
    uint ret = HCSMVOPINVOKE.HOutputHandler_GetOutputOps(swigCPtr);
    return ret;
  }

  public virtual void RegisterOutputHandlerTypes() {
    HCSMVOPINVOKE.HOutputHandler_RegisterOutputHandlerTypes(swigCPtr);
  }

  public virtual HFileIOResult FileOutputByKey(string filename, MVO_POINTER_SIZED_INT key, HOutputHandlerOptions options) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HOutputHandler)) ? HCSMVOPINVOKE.HOutputHandler_FileOutputByKey(swigCPtr, filename, key, HOutputHandlerOptions.getCPtr(options)) : HCSMVOPINVOKE.HOutputHandler_FileOutputByKeySwigExplicitHOutputHandler(swigCPtr, filename, key, HOutputHandlerOptions.getCPtr(options)));
    return ret;
  }

  public virtual HFileIOResult FileOutputFromImageKey(string filename, MVO_POINTER_SIZED_INT image_key, HOutputHandlerOptions options) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HOutputHandler)) ? HCSMVOPINVOKE.HOutputHandler_FileOutputFromImageKey(swigCPtr, filename, image_key, HOutputHandlerOptions.getCPtr(options)) : HCSMVOPINVOKE.HOutputHandler_FileOutputFromImageKeySwigExplicitHOutputHandler(swigCPtr, filename, image_key, HOutputHandlerOptions.getCPtr(options)));
    return ret;
  }

  public virtual string GetOutputTypesString() {
    string ret = HCSMVOPINVOKE.HOutputHandler_GetOutputTypesString(swigCPtr);
    return ret;
  }

  public virtual HOutputHandlerStyle GetOutputStyle() {
    HOutputHandlerStyle ret = (HOutputHandlerStyle)HCSMVOPINVOKE.HOutputHandler_GetOutputStyle(swigCPtr);
    return ret;
  }

  public virtual string GetOutputDefaultHSRA() {
    string ret = ((this.GetType() == typeof(HOutputHandler)) ? HCSMVOPINVOKE.HOutputHandler_GetOutputDefaultHSRA(swigCPtr) : HCSMVOPINVOKE.HOutputHandler_GetOutputDefaultHSRASwigExplicitHOutputHandler(swigCPtr));
    return ret;
  }

  public string GetOutputProgress() {
    string ret = HCSMVOPINVOKE.HOutputHandler_GetOutputProgress(swigCPtr);
    return ret;
  }

  public float GetOutputPercentProgress() {
    float ret = HCSMVOPINVOKE.HOutputHandler_GetOutputPercentProgress(swigCPtr);
    return ret;
  }

  public string GetOutputInformation() {
    string ret = System.Runtime.InteropServices.Marshal.PtrToStringUni(HCSMVOPINVOKE.HOutputHandler_GetOutputInformation(swigCPtr));
    return ret;
  }

  public HIONoticeCallback SetOutputProgressNoticeCallback(HIONoticeCallback notice_callback) {
    IntPtr cPtr = HCSMVOPINVOKE.HOutputHandler_SetOutputProgressNoticeCallback(swigCPtr, HIONoticeCallback.getCPtr(notice_callback));
    HIONoticeCallback ret = (cPtr == IntPtr.Zero) ? null : new HIONoticeCallback(cPtr, false);
    return ret;
  }

  public HIOPercentNoticeCallback SetOutputPercentProgressNoticeCallback(HIOPercentNoticeCallback percent_notice_callback) {
    IntPtr cPtr = HCSMVOPINVOKE.HOutputHandler_SetOutputPercentProgressNoticeCallback(swigCPtr, HIOPercentNoticeCallback.getCPtr(percent_notice_callback));
    HIOPercentNoticeCallback ret = (cPtr == IntPtr.Zero) ? null : new HIOPercentNoticeCallback(cPtr, false);
    return ret;
  }

  public HIONoticeCallback SetOutputInformationNoticeCallback(HIONoticeCallback notice_callback) {
    IntPtr cPtr = HCSMVOPINVOKE.HOutputHandler_SetOutputInformationNoticeCallback(swigCPtr, HIONoticeCallback.getCPtr(notice_callback));
    HIONoticeCallback ret = (cPtr == IntPtr.Zero) ? null : new HIONoticeCallback(cPtr, false);
    return ret;
  }

  public void ReportOutputProgress(string progress) {
    HCSMVOPINVOKE.HOutputHandler_ReportOutputProgress(swigCPtr, progress);
  }

  public void ReportOutputPercentProgress(float percent_progress) {
    HCSMVOPINVOKE.HOutputHandler_ReportOutputPercentProgress(swigCPtr, percent_progress);
  }

  public void ReportOutputInformation(string information) {
    HCSMVOPINVOKE.HOutputHandler_ReportOutputInformation(swigCPtr, information);
  }

  public void SetModuleDirectory(string module_directory) {
    HCSMVOPINVOKE.HOutputHandler_SetModuleDirectory__SWIG_0(swigCPtr, module_directory);
  }

  protected void SetStartingOutput() {
    HCSMVOPINVOKE.HOutputHandler_SetStartingOutput(swigCPtr);
  }

  protected void SetFinishedOutput() {
    HCSMVOPINVOKE.HOutputHandler_SetFinishedOutput(swigCPtr);
  }

  protected void SetOutputOps(uint ops) {
    HCSMVOPINVOKE.HOutputHandler_SetOutputOps(swigCPtr, ops);
  }

  protected uint m_OutputOps {
    set {
      HCSMVOPINVOKE.HOutputHandler_m_OutputOps_set(swigCPtr, value);
    } 
    get {
      uint ret = HCSMVOPINVOKE.HOutputHandler_m_OutputOps_get(swigCPtr);
      return ret;
    } 
  }

  protected System.Text.StringBuilder m_module_directory {
	set { HCSMVOPINVOKE.HOutputHandler_m_module_directory_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HOutputHandler_m_module_directory_get(swigCPtr); } 
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("GetOutputName", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateHOutputHandler_0(SwigDirectorGetOutputName);
    if (SwigDerivedClassHasMethod("RegisterOutputHandlerTypes", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateHOutputHandler_1(SwigDirectorRegisterOutputHandlerTypes);
    if (SwigDerivedClassHasMethod("FileOutputByKey", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateHOutputHandler_2(SwigDirectorFileOutputByKey);
    if (SwigDerivedClassHasMethod("FileOutputFromImageKey", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateHOutputHandler_3(SwigDirectorFileOutputFromImageKey);
    if (SwigDerivedClassHasMethod("GetOutputTypesString", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateHOutputHandler_4(SwigDirectorGetOutputTypesString);
    if (SwigDerivedClassHasMethod("GetOutputStyle", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateHOutputHandler_5(SwigDirectorGetOutputStyle);
    if (SwigDerivedClassHasMethod("GetOutputDefaultHSRA", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateHOutputHandler_6(SwigDirectorGetOutputDefaultHSRA);
    HCSMVOPINVOKE.HOutputHandler_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6);
  }

  private bool SwigDerivedClassHasMethod(string methodName, Type[] methodTypes) {
    System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(HOutputHandler));
    return hasDerivedMethod;
  }

  private string SwigDirectorGetOutputName() {
    return GetOutputName();
  }

  private void SwigDirectorRegisterOutputHandlerTypes() {
    RegisterOutputHandlerTypes();
  }

  private int SwigDirectorFileOutputByKey(IntPtr filename, MVO_POINTER_SIZED_INT key, IntPtr options) {
    return (int)FileOutputByKey(System.Runtime.InteropServices.Marshal.PtrToStringUni(filename), key, (options == IntPtr.Zero) ? null : new HOutputHandlerOptions(options, false));
  }

  private int SwigDirectorFileOutputFromImageKey(IntPtr filename, MVO_POINTER_SIZED_INT image_key, IntPtr options) {
    return (int)FileOutputFromImageKey(System.Runtime.InteropServices.Marshal.PtrToStringUni(filename), image_key, (options == IntPtr.Zero) ? null : new HOutputHandlerOptions(options, false));
  }

  private string SwigDirectorGetOutputTypesString() {
    return GetOutputTypesString();
  }

  private int SwigDirectorGetOutputStyle() {
    return (int)GetOutputStyle();
  }

  private string SwigDirectorGetOutputDefaultHSRA() {
    return GetOutputDefaultHSRA();
  }

  public delegate string SwigDelegateHOutputHandler_0();
  public delegate void SwigDelegateHOutputHandler_1();
  public delegate int SwigDelegateHOutputHandler_2(IntPtr filename, MVO_POINTER_SIZED_INT key, IntPtr options);
  public delegate int SwigDelegateHOutputHandler_3(IntPtr filename, MVO_POINTER_SIZED_INT image_key, IntPtr options);
  public delegate string SwigDelegateHOutputHandler_4();
  public delegate int SwigDelegateHOutputHandler_5();
  public delegate string SwigDelegateHOutputHandler_6();

  private SwigDelegateHOutputHandler_0 swigDelegate0;
  private SwigDelegateHOutputHandler_1 swigDelegate1;
  private SwigDelegateHOutputHandler_2 swigDelegate2;
  private SwigDelegateHOutputHandler_3 swigDelegate3;
  private SwigDelegateHOutputHandler_4 swigDelegate4;
  private SwigDelegateHOutputHandler_5 swigDelegate5;
  private SwigDelegateHOutputHandler_6 swigDelegate6;

  private static Type[] swigMethodTypes0 = new Type[] {  };
  private static Type[] swigMethodTypes1 = new Type[] {  };
  private static Type[] swigMethodTypes2 = new Type[] { typeof(string), typeof(MVO_POINTER_SIZED_INT), typeof(HOutputHandlerOptions) };
  private static Type[] swigMethodTypes3 = new Type[] { typeof(string), typeof(MVO_POINTER_SIZED_INT), typeof(HOutputHandlerOptions) };
  private static Type[] swigMethodTypes4 = new Type[] {  };
  private static Type[] swigMethodTypes5 = new Type[] {  };
  private static Type[] swigMethodTypes6 = new Type[] {  };
}
