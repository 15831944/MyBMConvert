/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HPixelRGB : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HPixelRGB(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HPixelRGB obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HPixelRGB() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HPixelRGB(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public HPixelRGB(byte R, byte G, byte B) : this(HCSMVOPINVOKE.new_HPixelRGB__SWIG_0(R, G, B), true) {
  }

  public HPixelRGB(byte R, byte G) : this(HCSMVOPINVOKE.new_HPixelRGB__SWIG_1(R, G), true) {
  }

  public HPixelRGB(byte R) : this(HCSMVOPINVOKE.new_HPixelRGB__SWIG_2(R), true) {
  }

  public HPixelRGB() : this(HCSMVOPINVOKE.new_HPixelRGB__SWIG_3(), true) {
  }

  public HPixelRGB(HPixelRGB p) : this(HCSMVOPINVOKE.new_HPixelRGB__SWIG_4(HPixelRGB.getCPtr(p)), true) {
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
  }

  public byte r() {
    byte ret = HCSMVOPINVOKE.HPixelRGB_r__SWIG_0(swigCPtr);
    return ret;
  }

  public byte g() {
    byte ret = HCSMVOPINVOKE.HPixelRGB_g__SWIG_0(swigCPtr);
    return ret;
  }

  public byte b() {
    byte ret = HCSMVOPINVOKE.HPixelRGB_b__SWIG_0(swigCPtr);
    return ret;
  }

  public void r(byte R) {
    HCSMVOPINVOKE.HPixelRGB_r__SWIG_1(swigCPtr, R);
  }

  public void g(byte G) {
    HCSMVOPINVOKE.HPixelRGB_g__SWIG_1(swigCPtr, G);
  }

  public void b(byte B) {
    HCSMVOPINVOKE.HPixelRGB_b__SWIG_1(swigCPtr, B);
  }

  public void Set(byte R, byte G, byte B) {
    HCSMVOPINVOKE.HPixelRGB_Set(swigCPtr, R, G, B);
  }

  public void Setf(float R, float G, float B) {
    HCSMVOPINVOKE.HPixelRGB_Setf(swigCPtr, R, G, B);
  }

}
