/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HOutputHandlerOptions : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HOutputHandlerOptions(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HOutputHandlerOptions obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HOutputHandlerOptions() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HOutputHandlerOptions(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public HOutputHandlerOptions() : this(HCSMVOPINVOKE.new_HOutputHandlerOptions__SWIG_0(), true) {
  }

  public virtual string GetHType() {
    string ret = HCSMVOPINVOKE.HOutputHandlerOptions_GetHType(swigCPtr);
    return ret;
  }

  public virtual bool PopulateOptions() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_PopulateOptions(swigCPtr);
    return ret;
  }

  public HOutputHandlerOptions(HOutputHandlerOptions o) : this(HCSMVOPINVOKE.new_HOutputHandlerOptions__SWIG_1(HOutputHandlerOptions.getCPtr(o)), true) {
  }

  public void Init(HOutputHandlerOptions o) {
    HCSMVOPINVOKE.HOutputHandlerOptions_Init(swigCPtr, HOutputHandlerOptions.getCPtr(o));
  }

  public HBaseView m_pHBaseView {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_pHBaseView_set(swigCPtr, HBaseView.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HOutputHandlerOptions_m_pHBaseView_get(swigCPtr);
      HBaseView ret = (cPtr == IntPtr.Zero) ? null : new HBaseView(cPtr, false);
      return ret;
    } 
  }

  public HBaseView View() {
    IntPtr cPtr = HCSMVOPINVOKE.HOutputHandlerOptions_View__SWIG_0(swigCPtr);
    HBaseView ret = (cPtr == IntPtr.Zero) ? null : new HBaseView(cPtr, false);
    return ret;
  }

  public void View(HBaseView v) {
    HCSMVOPINVOKE.HOutputHandlerOptions_View__SWIG_1(swigCPtr, HBaseView.getCPtr(v));
  }

  public HBaseModel m_pHBaseModel {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_pHBaseModel_set(swigCPtr, HBaseModel.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HOutputHandlerOptions_m_pHBaseModel_get(swigCPtr);
      HBaseModel ret = (cPtr == IntPtr.Zero) ? null : new HBaseModel(cPtr, false);
      return ret;
    } 
  }

  public HBaseModel Model() {
    IntPtr cPtr = HCSMVOPINVOKE.HOutputHandlerOptions_Model__SWIG_0(swigCPtr);
    HBaseModel ret = (cPtr == IntPtr.Zero) ? null : new HBaseModel(cPtr, false);
    return ret;
  }

  public void Model(HBaseModel m) {
    HCSMVOPINVOKE.HOutputHandlerOptions_Model__SWIG_1(swigCPtr, HBaseModel.getCPtr(m));
  }

  public HCamera m_pCamera {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_pCamera_set(swigCPtr, HCamera.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HOutputHandlerOptions_m_pCamera_get(swigCPtr);
      HCamera ret = (cPtr == IntPtr.Zero) ? null : new HCamera(cPtr, false);
      return ret;
    } 
  }

  public HCamera Camera() {
    IntPtr cPtr = HCSMVOPINVOKE.HOutputHandlerOptions_Camera__SWIG_0(swigCPtr);
    HCamera ret = (cPtr == IntPtr.Zero) ? null : new HCamera(cPtr, false);
    return ret;
  }

  public void Camera(HCamera c) {
    HCSMVOPINVOKE.HOutputHandlerOptions_Camera__SWIG_1(swigCPtr, HCamera.getCPtr(c));
  }

  public MVO_POINTER_SIZED_INT m_Key {
	set { HCSMVOPINVOKE.HOutputHandlerOptions_m_Key_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HOutputHandlerOptions_m_Key_get(swigCPtr); } 
  }

  public MVO_POINTER_SIZED_INT Key() {return HCSMVOPINVOKE.HOutputHandlerOptions_Key__SWIG_0(swigCPtr);}

  public void Key(MVO_POINTER_SIZED_INT k) {
    HCSMVOPINVOKE.HOutputHandlerOptions_Key__SWIG_1(swigCPtr, k);
  }

  public string m_pHSRAOptions {
	set { HCSMVOPINVOKE.HOutputHandlerOptions_m_pHSRAOptions_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HOutputHandlerOptions_m_pHSRAOptions_get(swigCPtr); } 
  }

  public string HSRAOptions() {
    string ret = HCSMVOPINVOKE.HOutputHandlerOptions_HSRAOptions__SWIG_0(swigCPtr);
    return ret;
  }

  public void HSRAOptions(string tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_HSRAOptions__SWIG_1(swigCPtr, tf);
  }

  public HPoint m_pWindowColor {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_pWindowColor_set(swigCPtr, HPoint.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HOutputHandlerOptions_m_pWindowColor_get(swigCPtr);
      HPoint ret = (cPtr == IntPtr.Zero) ? null : new HPoint(cPtr, false);
      return ret;
    } 
  }

  public HPoint WindowColor() {
    IntPtr cPtr = HCSMVOPINVOKE.HOutputHandlerOptions_WindowColor__SWIG_0(swigCPtr);
    HPoint ret = (cPtr == IntPtr.Zero) ? null : new HPoint(cPtr, false);
    return ret;
  }

  public void WindowColor(HPoint tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_WindowColor__SWIG_1(swigCPtr, HPoint.getCPtr(tf));
  }

  public bool m_bUseWindowColor {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bUseWindowColor_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bUseWindowColor_get(swigCPtr);
      return ret;
    } 
  }

  public bool UseWindowColor() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_UseWindowColor__SWIG_0(swigCPtr);
    return ret;
  }

  public void UseWindowColor(bool tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_UseWindowColor__SWIG_1(swigCPtr, tf);
  }

  public float m_Window_Width {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_Window_Width_set(swigCPtr, value);
    } 
    get {
      float ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_Window_Width_get(swigCPtr);
      return ret;
    } 
  }

  public float WindowWidth() {
    float ret = HCSMVOPINVOKE.HOutputHandlerOptions_WindowWidth__SWIG_0(swigCPtr);
    return ret;
  }

  public void WindowWidth(float f) {
    HCSMVOPINVOKE.HOutputHandlerOptions_WindowWidth__SWIG_1(swigCPtr, f);
  }

  public float m_Window_Height {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_Window_Height_set(swigCPtr, value);
    } 
    get {
      float ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_Window_Height_get(swigCPtr);
      return ret;
    } 
  }

  public float WindowHeight() {
    float ret = HCSMVOPINVOKE.HOutputHandlerOptions_WindowHeight__SWIG_0(swigCPtr);
    return ret;
  }

  public void WindowHeight(float f) {
    HCSMVOPINVOKE.HOutputHandlerOptions_WindowHeight__SWIG_1(swigCPtr, f);
  }

  public float m_Paper_Width {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_Paper_Width_set(swigCPtr, value);
    } 
    get {
      float ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_Paper_Width_get(swigCPtr);
      return ret;
    } 
  }

  public float PaperWidth() {
    float ret = HCSMVOPINVOKE.HOutputHandlerOptions_PaperWidth__SWIG_0(swigCPtr);
    return ret;
  }

  public void PaperWidth(float f) {
    HCSMVOPINVOKE.HOutputHandlerOptions_PaperWidth__SWIG_1(swigCPtr, f);
  }

  public float m_Paper_Height {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_Paper_Height_set(swigCPtr, value);
    } 
    get {
      float ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_Paper_Height_get(swigCPtr);
      return ret;
    } 
  }

  public float PaperHeight() {
    float ret = HCSMVOPINVOKE.HOutputHandlerOptions_PaperHeight__SWIG_0(swigCPtr);
    return ret;
  }

  public void PaperHeight(float f) {
    HCSMVOPINVOKE.HOutputHandlerOptions_PaperHeight__SWIG_1(swigCPtr, f);
  }

  public bool m_ForceGrayscale {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_ForceGrayscale_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_ForceGrayscale_get(swigCPtr);
      return ret;
    } 
  }

  public bool ForceGrayscale() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_ForceGrayscale__SWIG_0(swigCPtr);
    return ret;
  }

  public void ForceGrayscale(bool tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_ForceGrayscale__SWIG_1(swigCPtr, tf);
  }

  public uint m_lineFuseThreshold {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_lineFuseThreshold_set(swigCPtr, value);
    } 
    get {
      uint ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_lineFuseThreshold_get(swigCPtr);
      return ret;
    } 
  }

  public uint LineFuseThreshold() {
    uint ret = HCSMVOPINVOKE.HOutputHandlerOptions_LineFuseThreshold__SWIG_0(swigCPtr);
    return ret;
  }

  public void LineFuseThreshold(uint tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_LineFuseThreshold__SWIG_1(swigCPtr, tf);
  }

  public bool m_bFastPrint {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bFastPrint_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bFastPrint_get(swigCPtr);
      return ret;
    } 
  }

  public bool FastPrint() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_FastPrint__SWIG_0(swigCPtr);
    return ret;
  }

  public void FastPrint(bool tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_FastPrint__SWIG_1(swigCPtr, tf);
  }

  public bool m_bConserveMemory {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bConserveMemory_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bConserveMemory_get(swigCPtr);
      return ret;
    } 
  }

  public bool ConserveMemory() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_ConserveMemory__SWIG_0(swigCPtr);
    return ret;
  }

  public void ConserveMemory(bool tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_ConserveMemory__SWIG_1(swigCPtr, tf);
  }

  public bool m_bWriteAnimations {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bWriteAnimations_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bWriteAnimations_get(swigCPtr);
      return ret;
    } 
  }

  public bool WriteAnimations() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_WriteAnimations__SWIG_0(swigCPtr);
    return ret;
  }

  public void WriteAnimations(bool tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_WriteAnimations__SWIG_1(swigCPtr, tf);
  }

  public bool m_bWindowFrame {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bWindowFrame_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bWindowFrame_get(swigCPtr);
      return ret;
    } 
  }

  public bool WindowFrame() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_WindowFrame__SWIG_0(swigCPtr);
    return ret;
  }

  public void WindowFrame(bool tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_WindowFrame__SWIG_1(swigCPtr, tf);
  }

  public bool m_bUseSubscreen {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bUseSubscreen_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bUseSubscreen_get(swigCPtr);
      return ret;
    } 
  }

  public bool UseSubscreen() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_UseSubscreen__SWIG_0(swigCPtr);
    return ret;
  }

  public void UseSubscreen(bool tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_UseSubscreen__SWIG_1(swigCPtr, tf);
  }

  public int m_Image_Dpi {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_Image_Dpi_set(swigCPtr, value);
    } 
    get {
      int ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_Image_Dpi_get(swigCPtr);
      return ret;
    } 
  }

  public int ImageDpi() {
    int ret = HCSMVOPINVOKE.HOutputHandlerOptions_ImageDpi__SWIG_0(swigCPtr);
    return ret;
  }

  public void ImageDpi(int dpi) {
    HCSMVOPINVOKE.HOutputHandlerOptions_ImageDpi__SWIG_1(swigCPtr, dpi);
  }

  public int m_Paper_Dpi {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_Paper_Dpi_set(swigCPtr, value);
    } 
    get {
      int ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_Paper_Dpi_get(swigCPtr);
      return ret;
    } 
  }

  public int PaperDpi() {
    int ret = HCSMVOPINVOKE.HOutputHandlerOptions_PaperDpi__SWIG_0(swigCPtr);
    return ret;
  }

  public void PaperDpi(int dpi) {
    HCSMVOPINVOKE.HOutputHandlerOptions_PaperDpi__SWIG_1(swigCPtr, dpi);
  }

  public IntPtr m_pExtendedData {
	set { HCSMVOPINVOKE.HOutputHandlerOptions_m_pExtendedData_set(swigCPtr, value); } 
	get { return new IntPtr((int)HCSMVOPINVOKE.HOutputHandlerOptions_m_pExtendedData_get(swigCPtr)); } 
  }

  public IntPtr ExtendedData() {return new IntPtr((int)HCSMVOPINVOKE.HOutputHandlerOptions_ExtendedData__SWIG_0(swigCPtr));}

  public void ExtendedData(IntPtr vp) {
    HCSMVOPINVOKE.HOutputHandlerOptions_ExtendedData__SWIG_1(swigCPtr, vp);
  }

  public bool ActivateOnPageOpen() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_ActivateOnPageOpen__SWIG_0(swigCPtr);
    return ret;
  }

  public void ActivateOnPageOpen(bool onoff) {
    HCSMVOPINVOKE.HOutputHandlerOptions_ActivateOnPageOpen__SWIG_1(swigCPtr, onoff);
  }

  public float AnnotLeft() {
    float ret = HCSMVOPINVOKE.HOutputHandlerOptions_AnnotLeft__SWIG_0(swigCPtr);
    return ret;
  }

  public void AnnotLeft(float f) {
    HCSMVOPINVOKE.HOutputHandlerOptions_AnnotLeft__SWIG_1(swigCPtr, f);
  }

  public float AnnotRight() {
    float ret = HCSMVOPINVOKE.HOutputHandlerOptions_AnnotRight__SWIG_0(swigCPtr);
    return ret;
  }

  public void AnnotRight(float f) {
    HCSMVOPINVOKE.HOutputHandlerOptions_AnnotRight__SWIG_1(swigCPtr, f);
  }

  public float AnnotBottom() {
    float ret = HCSMVOPINVOKE.HOutputHandlerOptions_AnnotBottom__SWIG_0(swigCPtr);
    return ret;
  }

  public void AnnotBottom(float f) {
    HCSMVOPINVOKE.HOutputHandlerOptions_AnnotBottom__SWIG_1(swigCPtr, f);
  }

  public float AnnotTop() {
    float ret = HCSMVOPINVOKE.HOutputHandlerOptions_AnnotTop__SWIG_0(swigCPtr);
    return ret;
  }

  public void AnnotTop(float f) {
    HCSMVOPINVOKE.HOutputHandlerOptions_AnnotTop__SWIG_1(swigCPtr, f);
  }

  public string m_license {
	set { HCSMVOPINVOKE.HOutputHandlerOptions_m_license_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HOutputHandlerOptions_m_license_get(swigCPtr); } 
  }

  public int m_antialiasLevel {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_antialiasLevel_set(swigCPtr, value);
    } 
    get {
      int ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_antialiasLevel_get(swigCPtr);
      return ret;
    } 
  }

  public int m_jpeg_quality {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_jpeg_quality_set(swigCPtr, value);
    } 
    get {
      int ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_jpeg_quality_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_imageOutputBufferSize {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_imageOutputBufferSize_set(swigCPtr, value);
    } 
    get {
      uint ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_imageOutputBufferSize_get(swigCPtr);
      return ret;
    } 
  }

  public int m_Version {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_Version_set(swigCPtr, value);
    } 
    get {
      int ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_Version_get(swigCPtr);
      return ret;
    } 
  }

  public int Version() {
    int ret = HCSMVOPINVOKE.HOutputHandlerOptions_Version__SWIG_0(swigCPtr);
    return ret;
  }

  public void Version(int v) {
    HCSMVOPINVOKE.HOutputHandlerOptions_Version__SWIG_1(swigCPtr, v);
  }

  public H_OUTPUT_TYPE m_OutputType {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_OutputType_set(swigCPtr, (int)value);
    } 
    get {
      H_OUTPUT_TYPE ret = (H_OUTPUT_TYPE)HCSMVOPINVOKE.HOutputHandlerOptions_m_OutputType_get(swigCPtr);
      return ret;
    } 
  }

  public H_OUTPUT_TYPE OutputType() {
    H_OUTPUT_TYPE ret = (H_OUTPUT_TYPE)HCSMVOPINVOKE.HOutputHandlerOptions_OutputType__SWIG_0(swigCPtr);
    return ret;
  }

  public void OutputType(H_OUTPUT_TYPE ot) {
    HCSMVOPINVOKE.HOutputHandlerOptions_OutputType__SWIG_1(swigCPtr, (int)ot);
  }

  public bool m_b3dOutput {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_b3dOutput_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_b3dOutput_get(swigCPtr);
      return ret;
    } 
  }

  public bool Output3d() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_Output3d__SWIG_0(swigCPtr);
    return ret;
  }

  public void Output3d(bool tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_Output3d__SWIG_1(swigCPtr, tf);
  }

  public bool m_bAscii {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bAscii_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bAscii_get(swigCPtr);
      return ret;
    } 
  }

  public bool Ascii() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_Ascii__SWIG_0(swigCPtr);
    return ret;
  }

  public void Ascii(bool tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_Ascii__SWIG_1(swigCPtr, tf);
  }

  public bool m_bStlNormals {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bStlNormals_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bStlNormals_get(swigCPtr);
      return ret;
    } 
  }

  public bool StlNormals() {
    bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_StlNormals__SWIG_0(swigCPtr);
    return ret;
  }

  public void StlNormals(bool tf) {
    HCSMVOPINVOKE.HOutputHandlerOptions_StlNormals__SWIG_1(swigCPtr, tf);
  }

  public double m_ratio_cm_to_internal_units {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_ratio_cm_to_internal_units_set(swigCPtr, value);
    } 
    get {
      double ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_ratio_cm_to_internal_units_get(swigCPtr);
      return ret;
    } 
  }

  public double PrintToScale() {
    double ret = HCSMVOPINVOKE.HOutputHandlerOptions_PrintToScale__SWIG_0(swigCPtr);
    return ret;
  }

  public void PrintToScale(double r) {
    HCSMVOPINVOKE.HOutputHandlerOptions_PrintToScale__SWIG_1(swigCPtr, r);
  }

  public SWIGTYPE_p_float m_PageMargins {
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HOutputHandlerOptions_m_PageMargins_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public HBhvBehaviorManager m_pBehaviorManager {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_pBehaviorManager_set(swigCPtr, HBhvBehaviorManager.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HOutputHandlerOptions_m_pBehaviorManager_get(swigCPtr);
      HBhvBehaviorManager ret = (cPtr == IntPtr.Zero) ? null : new HBhvBehaviorManager(cPtr, false);
      return ret;
    } 
  }

  public string m_pDWFModelName {
	set { HCSMVOPINVOKE.HOutputHandlerOptions_m_pDWFModelName_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HOutputHandlerOptions_m_pDWFModelName_get(swigCPtr); } 
  }

  public string m_pPDFResourceDirectory {
	set { HCSMVOPINVOKE.HOutputHandlerOptions_m_pPDFResourceDirectory_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HOutputHandlerOptions_m_pPDFResourceDirectory_get(swigCPtr); } 
  }

  public IntPtr m_pPRCAsmModelFile {
	set { HCSMVOPINVOKE.HOutputHandlerOptions_m_pPRCAsmModelFile_set(swigCPtr, value); } 
	get { return new IntPtr((int)HCSMVOPINVOKE.HOutputHandlerOptions_m_pPRCAsmModelFile_get(swigCPtr)); } 
  }

  public bool m_bActivateOnPageOpen {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bActivateOnPageOpen_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bActivateOnPageOpen_get(swigCPtr);
      return ret;
    } 
  }

  public float m_fAnnotLeft {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_fAnnotLeft_set(swigCPtr, value);
    } 
    get {
      float ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_fAnnotLeft_get(swigCPtr);
      return ret;
    } 
  }

  public float m_fAnnotRight {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_fAnnotRight_set(swigCPtr, value);
    } 
    get {
      float ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_fAnnotRight_get(swigCPtr);
      return ret;
    } 
  }

  public float m_fAnnotBottom {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_fAnnotBottom_set(swigCPtr, value);
    } 
    get {
      float ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_fAnnotBottom_get(swigCPtr);
      return ret;
    } 
  }

  public float m_fAnnotTop {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_fAnnotTop_set(swigCPtr, value);
    } 
    get {
      float ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_fAnnotTop_get(swigCPtr);
      return ret;
    } 
  }

  public HPrcBrepCompression m_ePrcBrepCompression {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_ePrcBrepCompression_set(swigCPtr, (int)value);
    } 
    get {
      HPrcBrepCompression ret = (HPrcBrepCompression)HCSMVOPINVOKE.HOutputHandlerOptions_m_ePrcBrepCompression_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bPrcRemoveBRep {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bPrcRemoveBRep_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bPrcRemoveBRep_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bPrcRemoveAttributes {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bPrcRemoveAttributes_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bPrcRemoveAttributes_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bPrcUseNameUserData {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bPrcUseNameUserData_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bPrcUseNameUserData_get(swigCPtr);
      return ret;
    } 
  }

  public MVO_POINTER_SIZED_INT m_iPrcNameUserDataIndex {
	set { HCSMVOPINVOKE.HOutputHandlerOptions_m_iPrcNameUserDataIndex_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HOutputHandlerOptions_m_iPrcNameUserDataIndex_get(swigCPtr); } 
  }

  public bool m_bPrcCompressTessellation {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bPrcCompressTessellation_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bPrcCompressTessellation_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bAVIShowCompressionDialog {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bAVIShowCompressionDialog_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bAVIShowCompressionDialog_get(swigCPtr);
      return ret;
    } 
  }

  public string m_bAVICodec {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bAVICodec_set(swigCPtr, value);
    } 
    get {
      string ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bAVICodec_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bExporting2DDwf {
    set {
      HCSMVOPINVOKE.HOutputHandlerOptions_m_bExporting2DDwf_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HOutputHandlerOptions_m_bExporting2DDwf_get(swigCPtr);
      return ret;
    } 
  }

}
