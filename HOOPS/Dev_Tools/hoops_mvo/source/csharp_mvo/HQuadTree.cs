/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HQuadTree : HQuadTreeNode {
  private HandleRef swigCPtr;

  public HQuadTree(IntPtr cPtr, bool cMemoryOwn) : base(HCSMVOPINVOKE.HQuadTreeUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HQuadTree obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~HQuadTree() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HQuadTree(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public HQuadTree(float Left, float Bottom, float Right, float Top, int MaxDepth, bool AllowOverlap, bool CopyItems) : this(HCSMVOPINVOKE.new_HQuadTree__SWIG_0(Left, Bottom, Right, Top, MaxDepth, AllowOverlap, CopyItems), true) {
  }

  public HQuadTree(float Left, float Bottom, float Right, float Top, int MaxDepth, bool AllowOverlap) : this(HCSMVOPINVOKE.new_HQuadTree__SWIG_1(Left, Bottom, Right, Top, MaxDepth, AllowOverlap), true) {
  }

  public HQuadTree(float Left, float Bottom, float Right, float Top, int MaxDepth) : this(HCSMVOPINVOKE.new_HQuadTree__SWIG_2(Left, Bottom, Right, Top, MaxDepth), true) {
  }

  public HQuadTree(float Left, float Bottom, float Right, float Top) : this(HCSMVOPINVOKE.new_HQuadTree__SWIG_3(Left, Bottom, Right, Top), true) {
  }

  public HQuadTree(float Left, float Bottom, float Right) : this(HCSMVOPINVOKE.new_HQuadTree__SWIG_4(Left, Bottom, Right), true) {
  }

  public HQuadTree(float Left, float Bottom) : this(HCSMVOPINVOKE.new_HQuadTree__SWIG_5(Left, Bottom), true) {
  }

  public HQuadTree(float Left) : this(HCSMVOPINVOKE.new_HQuadTree__SWIG_6(Left), true) {
  }

  public HQuadTree() : this(HCSMVOPINVOKE.new_HQuadTree__SWIG_7(), true) {
  }

  public HQuadtreeInsertStatus Insert(HQuadTreeItem item) {
    HQuadtreeInsertStatus ret = (HQuadtreeInsertStatus)HCSMVOPINVOKE.HQuadTree_Insert(swigCPtr, HQuadTreeItem.getCPtr(item));
    return ret;
  }

}
