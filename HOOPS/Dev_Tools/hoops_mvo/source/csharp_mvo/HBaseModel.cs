/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HBaseModel : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HBaseModel(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HBaseModel obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HBaseModel() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HBaseModel(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public HBaseModel(string model) : this(HCSMVOPINVOKE.new_HBaseModel__SWIG_0(model), true) {
    SwigDirectorConnect();
  }

  public HBaseModel() : this(HCSMVOPINVOKE.new_HBaseModel__SWIG_1(), true) {
    SwigDirectorConnect();
  }

  public virtual void Init() {
    if (this.GetType() == typeof(HBaseModel)) HCSMVOPINVOKE.HBaseModel_Init(swigCPtr); else HCSMVOPINVOKE.HBaseModel_InitSwigExplicitHBaseModel(swigCPtr);
  }

  public virtual void Flush() {
    if (this.GetType() == typeof(HBaseModel)) HCSMVOPINVOKE.HBaseModel_Flush(swigCPtr); else HCSMVOPINVOKE.HBaseModel_FlushSwigExplicitHBaseModel(swigCPtr);
  }

  public bool GetFileLoadComplete() {
    bool ret = HCSMVOPINVOKE.HBaseModel_GetFileLoadComplete(swigCPtr);
    return ret;
  }

  public void SetFileLoadComplete(bool value, HBaseView pHView) {
    HCSMVOPINVOKE.HBaseModel_SetFileLoadComplete__SWIG_0(swigCPtr, value, HBaseView.getCPtr(pHView));
  }

  public void SetFileLoadComplete(bool value) {
    HCSMVOPINVOKE.HBaseModel_SetFileLoadComplete__SWIG_1(swigCPtr, value);
  }

  public bool GetObjectCheck() {
    bool ret = HCSMVOPINVOKE.HBaseModel_GetObjectCheck(swigCPtr);
    return ret;
  }

  public void SetObjectCheck(bool value) {
    HCSMVOPINVOKE.HBaseModel_SetObjectCheck(swigCPtr, value);
  }

  public void SetStaticModel(bool value) {
    HCSMVOPINVOKE.HBaseModel_SetStaticModel(swigCPtr, value);
  }

  public bool GetStaticModel() {
    bool ret = HCSMVOPINVOKE.HBaseModel_GetStaticModel(swigCPtr);
    return ret;
  }

  public bool GetStaticModelOn() {
    bool ret = HCSMVOPINVOKE.HBaseModel_GetStaticModelOn(swigCPtr);
    return ret;
  }

  public void SetLMVModel(bool value) {
    HCSMVOPINVOKE.HBaseModel_SetLMVModel(swigCPtr, value);
  }

  public bool GetLMVModel() {
    bool ret = HCSMVOPINVOKE.HBaseModel_GetLMVModel(swigCPtr);
    return ret;
  }

  public bool GetFirstFitComplete() {
    bool ret = HCSMVOPINVOKE.HBaseModel_GetFirstFitComplete(swigCPtr);
    return ret;
  }

  public void SetFirstFitComplete(bool value) {
    HCSMVOPINVOKE.HBaseModel_SetFirstFitComplete(swigCPtr, value);
  }

  public virtual HFileIOResult Read(string FileName, HBaseView pHView, bool clean_include, HInputHandlerOptions options) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_Read__SWIG_0(swigCPtr, FileName, HBaseView.getCPtr(pHView), clean_include, HInputHandlerOptions.getCPtr(options)) : HCSMVOPINVOKE.HBaseModel_ReadSwigExplicitHBaseModel__SWIG_0(swigCPtr, FileName, HBaseView.getCPtr(pHView), clean_include, HInputHandlerOptions.getCPtr(options)));
    return ret;
  }

  public virtual HFileIOResult Read(string FileName, HBaseView pHView, bool clean_include) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_Read__SWIG_1(swigCPtr, FileName, HBaseView.getCPtr(pHView), clean_include) : HCSMVOPINVOKE.HBaseModel_ReadSwigExplicitHBaseModel__SWIG_1(swigCPtr, FileName, HBaseView.getCPtr(pHView), clean_include));
    return ret;
  }

  public virtual HFileIOResult Read(string FileName, HBaseView pHView) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_Read__SWIG_2(swigCPtr, FileName, HBaseView.getCPtr(pHView)) : HCSMVOPINVOKE.HBaseModel_ReadSwigExplicitHBaseModel__SWIG_2(swigCPtr, FileName, HBaseView.getCPtr(pHView)));
    return ret;
  }

  public virtual HFileIOResult Read(string FileName) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_Read__SWIG_3(swigCPtr, FileName) : HCSMVOPINVOKE.HBaseModel_ReadSwigExplicitHBaseModel__SWIG_3(swigCPtr, FileName));
    return ret;
  }

  public virtual HFileIOResult WriteWithOptions(string FileName, HBaseView pHView, HOutputHandlerOptions options) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_WriteWithOptions__SWIG_0(swigCPtr, FileName, HBaseView.getCPtr(pHView), HOutputHandlerOptions.getCPtr(options)) : HCSMVOPINVOKE.HBaseModel_WriteWithOptionsSwigExplicitHBaseModel__SWIG_0(swigCPtr, FileName, HBaseView.getCPtr(pHView), HOutputHandlerOptions.getCPtr(options)));
    return ret;
  }

  public virtual HFileIOResult WriteWithOptions(string FileName, HBaseView pHView) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_WriteWithOptions__SWIG_1(swigCPtr, FileName, HBaseView.getCPtr(pHView)) : HCSMVOPINVOKE.HBaseModel_WriteWithOptionsSwigExplicitHBaseModel__SWIG_1(swigCPtr, FileName, HBaseView.getCPtr(pHView)));
    return ret;
  }

  public virtual HFileIOResult WriteWithOptions(string FileName) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_WriteWithOptions__SWIG_2(swigCPtr, FileName) : HCSMVOPINVOKE.HBaseModel_WriteWithOptionsSwigExplicitHBaseModel__SWIG_2(swigCPtr, FileName));
    return ret;
  }

  public virtual HFileIOResult Write(string FileName, HBaseView pHView, float width, float height) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_Write__SWIG_0(swigCPtr, FileName, HBaseView.getCPtr(pHView), width, height) : HCSMVOPINVOKE.HBaseModel_WriteSwigExplicitHBaseModel__SWIG_0(swigCPtr, FileName, HBaseView.getCPtr(pHView), width, height));
    return ret;
  }

  public virtual HFileIOResult Write(string FileName, HBaseView pHView, float width) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_Write__SWIG_1(swigCPtr, FileName, HBaseView.getCPtr(pHView), width) : HCSMVOPINVOKE.HBaseModel_WriteSwigExplicitHBaseModel__SWIG_1(swigCPtr, FileName, HBaseView.getCPtr(pHView), width));
    return ret;
  }

  public virtual HFileIOResult Write(string FileName, HBaseView pHView) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_Write__SWIG_2(swigCPtr, FileName, HBaseView.getCPtr(pHView)) : HCSMVOPINVOKE.HBaseModel_WriteSwigExplicitHBaseModel__SWIG_2(swigCPtr, FileName, HBaseView.getCPtr(pHView)));
    return ret;
  }

  public virtual HFileIOResult Write(string FileName) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_Write__SWIG_3(swigCPtr, FileName) : HCSMVOPINVOKE.HBaseModel_WriteSwigExplicitHBaseModel__SWIG_3(swigCPtr, FileName));
    return ret;
  }

  public HModelInfo GetHModelInfo() {
    IntPtr cPtr = HCSMVOPINVOKE.HBaseModel_GetHModelInfo(swigCPtr);
    HModelInfo ret = (cPtr == IntPtr.Zero) ? null : new HModelInfo(cPtr, false);
    return ret;
  }

  public virtual HStreamFileToolkit GetStreamFileTK() {
    IntPtr cPtr = ((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_GetStreamFileTK(swigCPtr) : HCSMVOPINVOKE.HBaseModel_GetStreamFileTKSwigExplicitHBaseModel(swigCPtr));
    HStreamFileToolkit ret = (cPtr == IntPtr.Zero) ? null : new HStreamFileToolkit(cPtr, false);
    return ret;
  }

  public virtual MVO_POINTER_SIZED_INT GetModelKey() {return ((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_GetModelKey(swigCPtr) : HCSMVOPINVOKE.HBaseModel_GetModelKeySwigExplicitHBaseModel(swigCPtr));}

  public virtual MVO_POINTER_SIZED_INT GetModelIncludeKey() {return ((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_GetModelIncludeKey(swigCPtr) : HCSMVOPINVOKE.HBaseModel_GetModelIncludeKeySwigExplicitHBaseModel(swigCPtr));}

  public virtual MVO_POINTER_SIZED_INT GetBBoxKey() {return ((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_GetBBoxKey(swigCPtr) : HCSMVOPINVOKE.HBaseModel_GetBBoxKeySwigExplicitHBaseModel(swigCPtr));}

  public virtual bool IsBRepGeometry() {
    bool ret = ((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_IsBRepGeometry(swigCPtr) : HCSMVOPINVOKE.HBaseModel_IsBRepGeometrySwigExplicitHBaseModel(swigCPtr));
    return ret;
  }

  public virtual void SetBRepGeometry(bool brep) {
    if (this.GetType() == typeof(HBaseModel)) HCSMVOPINVOKE.HBaseModel_SetBRepGeometry(swigCPtr, brep); else HCSMVOPINVOKE.HBaseModel_SetBRepGeometrySwigExplicitHBaseModel(swigCPtr, brep);
  }

  public virtual bool IsFEAGeometry() {
    bool ret = ((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_IsFEAGeometry(swigCPtr) : HCSMVOPINVOKE.HBaseModel_IsFEAGeometrySwigExplicitHBaseModel(swigCPtr));
    return ret;
  }

  public virtual void SetFEAGeometry(bool fea) {
    if (this.GetType() == typeof(HBaseModel)) HCSMVOPINVOKE.HBaseModel_SetFEAGeometry(swigCPtr, fea); else HCSMVOPINVOKE.HBaseModel_SetFEAGeometrySwigExplicitHBaseModel(swigCPtr, fea);
  }

  public virtual bool IsVectorGeometry() {
    bool ret = ((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_IsVectorGeometry(swigCPtr) : HCSMVOPINVOKE.HBaseModel_IsVectorGeometrySwigExplicitHBaseModel(swigCPtr));
    return ret;
  }

  public virtual void SetVectorGeometry(bool vector) {
    if (this.GetType() == typeof(HBaseModel)) HCSMVOPINVOKE.HBaseModel_SetVectorGeometry(swigCPtr, vector); else HCSMVOPINVOKE.HBaseModel_SetVectorGeometrySwigExplicitHBaseModel(swigCPtr, vector);
  }

  public virtual void CleanIncludes() {
    if (this.GetType() == typeof(HBaseModel)) HCSMVOPINVOKE.HBaseModel_CleanIncludes(swigCPtr); else HCSMVOPINVOKE.HBaseModel_CleanIncludesSwigExplicitHBaseModel(swigCPtr);
  }

  public virtual void DeleteIncludedSegments() {
    if (this.GetType() == typeof(HBaseModel)) HCSMVOPINVOKE.HBaseModel_DeleteIncludedSegments(swigCPtr); else HCSMVOPINVOKE.HBaseModel_DeleteIncludedSegmentsSwigExplicitHBaseModel(swigCPtr);
  }

  public virtual HBhvBehaviorManager GetBhvBehaviorManager() {
    IntPtr cPtr = ((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_GetBhvBehaviorManager(swigCPtr) : HCSMVOPINVOKE.HBaseModel_GetBhvBehaviorManagerSwigExplicitHBaseModel(swigCPtr));
    HBhvBehaviorManager ret = (cPtr == IntPtr.Zero) ? null : new HBhvBehaviorManager(cPtr, false);
    return ret;
  }

  public void SetBhvBehaviorManager(HBhvBehaviorManager BehaviorManager) {
    HCSMVOPINVOKE.HBaseModel_SetBhvBehaviorManager(swigCPtr, HBhvBehaviorManager.getCPtr(BehaviorManager));
  }

  public HEventManager GetEventManager() {
    IntPtr cPtr = HCSMVOPINVOKE.HBaseModel_GetEventManager(swigCPtr);
    HEventManager ret = (cPtr == IntPtr.Zero) ? null : new HEventManager(cPtr, false);
    return ret;
  }

  public void Update(bool antialias, bool forceUpdate) {
    HCSMVOPINVOKE.HBaseModel_Update__SWIG_0(swigCPtr, antialias, forceUpdate);
  }

  public void Update(bool antialias) {
    HCSMVOPINVOKE.HBaseModel_Update__SWIG_1(swigCPtr, antialias);
  }

  public void Update() {
    HCSMVOPINVOKE.HBaseModel_Update__SWIG_2(swigCPtr);
  }

  public void MakeAnimationSnapshot(int tick) {
    HCSMVOPINVOKE.HBaseModel_MakeAnimationSnapshot(swigCPtr, tick);
  }

  public virtual HFileIOResult WriteWithAnimation(string FileName, HBaseView pHView, float width, float height) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_WriteWithAnimation__SWIG_0(swigCPtr, FileName, HBaseView.getCPtr(pHView), width, height) : HCSMVOPINVOKE.HBaseModel_WriteWithAnimationSwigExplicitHBaseModel__SWIG_0(swigCPtr, FileName, HBaseView.getCPtr(pHView), width, height));
    return ret;
  }

  public virtual HFileIOResult WriteWithAnimation(string FileName, HBaseView pHView, float width) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_WriteWithAnimation__SWIG_1(swigCPtr, FileName, HBaseView.getCPtr(pHView), width) : HCSMVOPINVOKE.HBaseModel_WriteWithAnimationSwigExplicitHBaseModel__SWIG_1(swigCPtr, FileName, HBaseView.getCPtr(pHView), width));
    return ret;
  }

  public virtual HFileIOResult WriteWithAnimation(string FileName, HBaseView pHView) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_WriteWithAnimation__SWIG_2(swigCPtr, FileName, HBaseView.getCPtr(pHView)) : HCSMVOPINVOKE.HBaseModel_WriteWithAnimationSwigExplicitHBaseModel__SWIG_2(swigCPtr, FileName, HBaseView.getCPtr(pHView)));
    return ret;
  }

  public virtual HFileIOResult WriteWithAnimation(string FileName) {
    HFileIOResult ret = (HFileIOResult)((this.GetType() == typeof(HBaseModel)) ? HCSMVOPINVOKE.HBaseModel_WriteWithAnimation__SWIG_3(swigCPtr, FileName) : HCSMVOPINVOKE.HBaseModel_WriteWithAnimationSwigExplicitHBaseModel__SWIG_3(swigCPtr, FileName));
    return ret;
  }

  public virtual void CreateIncludeSegment() {
    if (this.GetType() == typeof(HBaseModel)) HCSMVOPINVOKE.HBaseModel_CreateIncludeSegment(swigCPtr); else HCSMVOPINVOKE.HBaseModel_CreateIncludeSegmentSwigExplicitHBaseModel(swigCPtr);
  }

  public TK_Dispatch_XML GetDispatchXML() {
    IntPtr cPtr = HCSMVOPINVOKE.HBaseModel_GetDispatchXML(swigCPtr);
    TK_Dispatch_XML ret = (cPtr == IntPtr.Zero) ? null : new TK_Dispatch_XML(cPtr, false);
    return ret;
  }

  protected MVO_POINTER_SIZED_INT m_ModelKey {
	set { HCSMVOPINVOKE.HBaseModel_m_ModelKey_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HBaseModel_m_ModelKey_get(swigCPtr); } 
  }

  protected MVO_POINTER_SIZED_INT m_ModelIncludeKey {
	set { HCSMVOPINVOKE.HBaseModel_m_ModelIncludeKey_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HBaseModel_m_ModelIncludeKey_get(swigCPtr); } 
  }

  protected MVO_POINTER_SIZED_INT m_BBoxKey {
	set { HCSMVOPINVOKE.HBaseModel_m_BBoxKey_set(swigCPtr, value); } 
	get { return HCSMVOPINVOKE.HBaseModel_m_BBoxKey_get(swigCPtr); } 
  }

  protected HStreamFileToolkit m_pHFile {
    set {
      HCSMVOPINVOKE.HBaseModel_m_pHFile_set(swigCPtr, HStreamFileToolkit.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HBaseModel_m_pHFile_get(swigCPtr);
      HStreamFileToolkit ret = (cPtr == IntPtr.Zero) ? null : new HStreamFileToolkit(cPtr, false);
      return ret;
    } 
  }

  protected HModelInfo m_pModelInfo {
    set {
      HCSMVOPINVOKE.HBaseModel_m_pModelInfo_set(swigCPtr, HModelInfo.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HBaseModel_m_pModelInfo_get(swigCPtr);
      HModelInfo ret = (cPtr == IntPtr.Zero) ? null : new HModelInfo(cPtr, false);
      return ret;
    } 
  }

  protected bool m_bBRepGeometry {
    set {
      HCSMVOPINVOKE.HBaseModel_m_bBRepGeometry_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HBaseModel_m_bBRepGeometry_get(swigCPtr);
      return ret;
    } 
  }

  protected bool m_bFEAGeometry {
    set {
      HCSMVOPINVOKE.HBaseModel_m_bFEAGeometry_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HBaseModel_m_bFEAGeometry_get(swigCPtr);
      return ret;
    } 
  }

  protected bool m_bVectorGeometry {
    set {
      HCSMVOPINVOKE.HBaseModel_m_bVectorGeometry_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HBaseModel_m_bVectorGeometry_get(swigCPtr);
      return ret;
    } 
  }

  protected bool m_bNeedsStencilBuffer {
    set {
      HCSMVOPINVOKE.HBaseModel_m_bNeedsStencilBuffer_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HBaseModel_m_bNeedsStencilBuffer_get(swigCPtr);
      return ret;
    } 
  }

  protected bool m_bFileLoadComplete {
    set {
      HCSMVOPINVOKE.HBaseModel_m_bFileLoadComplete_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HBaseModel_m_bFileLoadComplete_get(swigCPtr);
      return ret;
    } 
  }

  protected bool m_bObjectCheck {
    set {
      HCSMVOPINVOKE.HBaseModel_m_bObjectCheck_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HBaseModel_m_bObjectCheck_get(swigCPtr);
      return ret;
    } 
  }

  protected bool m_bFirstFitComplete {
    set {
      HCSMVOPINVOKE.HBaseModel_m_bFirstFitComplete_set(swigCPtr, value);
    } 
    get {
      bool ret = HCSMVOPINVOKE.HBaseModel_m_bFirstFitComplete_get(swigCPtr);
      return ret;
    } 
  }

  protected HBhvBehaviorManager m_pBhvBehaviorManager {
    set {
      HCSMVOPINVOKE.HBaseModel_m_pBhvBehaviorManager_set(swigCPtr, HBhvBehaviorManager.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HBaseModel_m_pBhvBehaviorManager_get(swigCPtr);
      HBhvBehaviorManager ret = (cPtr == IntPtr.Zero) ? null : new HBhvBehaviorManager(cPtr, false);
      return ret;
    } 
  }

  protected HEventManager m_pEventManager {
    set {
      HCSMVOPINVOKE.HBaseModel_m_pEventManager_set(swigCPtr, HEventManager.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSMVOPINVOKE.HBaseModel_m_pEventManager_get(swigCPtr);
      HEventManager ret = (cPtr == IntPtr.Zero) ? null : new HEventManager(cPtr, false);
      return ret;
    } 
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("Init", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateHBaseModel_0(SwigDirectorInit);
    if (SwigDerivedClassHasMethod("Flush", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateHBaseModel_1(SwigDirectorFlush);
    if (SwigDerivedClassHasMethod("Read", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateHBaseModel_2(SwigDirectorRead__SWIG_0);
    if (SwigDerivedClassHasMethod("Read", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateHBaseModel_3(SwigDirectorRead__SWIG_1);
    if (SwigDerivedClassHasMethod("Read", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateHBaseModel_4(SwigDirectorRead__SWIG_2);
    if (SwigDerivedClassHasMethod("Read", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateHBaseModel_5(SwigDirectorRead__SWIG_3);
    if (SwigDerivedClassHasMethod("Read", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateHBaseModel_6(SwigDirectorRead__SWIG_4);
    if (SwigDerivedClassHasMethod("Read", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateHBaseModel_7(SwigDirectorRead__SWIG_5);
    if (SwigDerivedClassHasMethod("Read", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateHBaseModel_8(SwigDirectorRead__SWIG_6);
    if (SwigDerivedClassHasMethod("Read", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateHBaseModel_9(SwigDirectorRead__SWIG_7);
    if (SwigDerivedClassHasMethod("WriteWithOptions", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateHBaseModel_10(SwigDirectorWriteWithOptions__SWIG_0);
    if (SwigDerivedClassHasMethod("WriteWithOptions", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateHBaseModel_11(SwigDirectorWriteWithOptions__SWIG_1);
    if (SwigDerivedClassHasMethod("WriteWithOptions", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateHBaseModel_12(SwigDirectorWriteWithOptions__SWIG_2);
    if (SwigDerivedClassHasMethod("WriteWithOptions", swigMethodTypes13))
      swigDelegate13 = new SwigDelegateHBaseModel_13(SwigDirectorWriteWithOptions__SWIG_3);
    if (SwigDerivedClassHasMethod("WriteWithOptions", swigMethodTypes14))
      swigDelegate14 = new SwigDelegateHBaseModel_14(SwigDirectorWriteWithOptions__SWIG_4);
    if (SwigDerivedClassHasMethod("WriteWithOptions", swigMethodTypes15))
      swigDelegate15 = new SwigDelegateHBaseModel_15(SwigDirectorWriteWithOptions__SWIG_5);
    if (SwigDerivedClassHasMethod("Write", swigMethodTypes16))
      swigDelegate16 = new SwigDelegateHBaseModel_16(SwigDirectorWrite__SWIG_0);
    if (SwigDerivedClassHasMethod("Write", swigMethodTypes17))
      swigDelegate17 = new SwigDelegateHBaseModel_17(SwigDirectorWrite__SWIG_1);
    if (SwigDerivedClassHasMethod("Write", swigMethodTypes18))
      swigDelegate18 = new SwigDelegateHBaseModel_18(SwigDirectorWrite__SWIG_2);
    if (SwigDerivedClassHasMethod("Write", swigMethodTypes19))
      swigDelegate19 = new SwigDelegateHBaseModel_19(SwigDirectorWrite__SWIG_3);
    if (SwigDerivedClassHasMethod("Write", swigMethodTypes20))
      swigDelegate20 = new SwigDelegateHBaseModel_20(SwigDirectorWrite__SWIG_4);
    if (SwigDerivedClassHasMethod("Write", swigMethodTypes21))
      swigDelegate21 = new SwigDelegateHBaseModel_21(SwigDirectorWrite__SWIG_5);
    if (SwigDerivedClassHasMethod("Write", swigMethodTypes22))
      swigDelegate22 = new SwigDelegateHBaseModel_22(SwigDirectorWrite__SWIG_6);
    if (SwigDerivedClassHasMethod("Write", swigMethodTypes23))
      swigDelegate23 = new SwigDelegateHBaseModel_23(SwigDirectorWrite__SWIG_7);
    if (SwigDerivedClassHasMethod("GetStreamFileTK", swigMethodTypes24))
      swigDelegate24 = new SwigDelegateHBaseModel_24(SwigDirectorGetStreamFileTK);
    if (SwigDerivedClassHasMethod("GetModelKey", swigMethodTypes25))
      swigDelegate25 = new SwigDelegateHBaseModel_25(SwigDirectorGetModelKey);
    if (SwigDerivedClassHasMethod("GetModelIncludeKey", swigMethodTypes26))
      swigDelegate26 = new SwigDelegateHBaseModel_26(SwigDirectorGetModelIncludeKey);
    if (SwigDerivedClassHasMethod("GetBBoxKey", swigMethodTypes27))
      swigDelegate27 = new SwigDelegateHBaseModel_27(SwigDirectorGetBBoxKey);
    if (SwigDerivedClassHasMethod("IsBRepGeometry", swigMethodTypes28))
      swigDelegate28 = new SwigDelegateHBaseModel_28(SwigDirectorIsBRepGeometry);
    if (SwigDerivedClassHasMethod("SetBRepGeometry", swigMethodTypes29))
      swigDelegate29 = new SwigDelegateHBaseModel_29(SwigDirectorSetBRepGeometry);
    if (SwigDerivedClassHasMethod("IsFEAGeometry", swigMethodTypes30))
      swigDelegate30 = new SwigDelegateHBaseModel_30(SwigDirectorIsFEAGeometry);
    if (SwigDerivedClassHasMethod("SetFEAGeometry", swigMethodTypes31))
      swigDelegate31 = new SwigDelegateHBaseModel_31(SwigDirectorSetFEAGeometry);
    if (SwigDerivedClassHasMethod("IsVectorGeometry", swigMethodTypes32))
      swigDelegate32 = new SwigDelegateHBaseModel_32(SwigDirectorIsVectorGeometry);
    if (SwigDerivedClassHasMethod("SetVectorGeometry", swigMethodTypes33))
      swigDelegate33 = new SwigDelegateHBaseModel_33(SwigDirectorSetVectorGeometry);
    if (SwigDerivedClassHasMethod("CleanIncludes", swigMethodTypes34))
      swigDelegate34 = new SwigDelegateHBaseModel_34(SwigDirectorCleanIncludes);
    if (SwigDerivedClassHasMethod("DeleteIncludedSegments", swigMethodTypes35))
      swigDelegate35 = new SwigDelegateHBaseModel_35(SwigDirectorDeleteIncludedSegments);
    if (SwigDerivedClassHasMethod("GetBhvBehaviorManager", swigMethodTypes36))
      swigDelegate36 = new SwigDelegateHBaseModel_36(SwigDirectorGetBhvBehaviorManager);
    if (SwigDerivedClassHasMethod("WriteWithAnimation", swigMethodTypes37))
      swigDelegate37 = new SwigDelegateHBaseModel_37(SwigDirectorWriteWithAnimation__SWIG_0);
    if (SwigDerivedClassHasMethod("WriteWithAnimation", swigMethodTypes38))
      swigDelegate38 = new SwigDelegateHBaseModel_38(SwigDirectorWriteWithAnimation__SWIG_1);
    if (SwigDerivedClassHasMethod("WriteWithAnimation", swigMethodTypes39))
      swigDelegate39 = new SwigDelegateHBaseModel_39(SwigDirectorWriteWithAnimation__SWIG_2);
    if (SwigDerivedClassHasMethod("WriteWithAnimation", swigMethodTypes40))
      swigDelegate40 = new SwigDelegateHBaseModel_40(SwigDirectorWriteWithAnimation__SWIG_3);
    if (SwigDerivedClassHasMethod("WriteWithAnimation", swigMethodTypes41))
      swigDelegate41 = new SwigDelegateHBaseModel_41(SwigDirectorWriteWithAnimation__SWIG_4);
    if (SwigDerivedClassHasMethod("WriteWithAnimation", swigMethodTypes42))
      swigDelegate42 = new SwigDelegateHBaseModel_42(SwigDirectorWriteWithAnimation__SWIG_5);
    if (SwigDerivedClassHasMethod("WriteWithAnimation", swigMethodTypes43))
      swigDelegate43 = new SwigDelegateHBaseModel_43(SwigDirectorWriteWithAnimation__SWIG_6);
    if (SwigDerivedClassHasMethod("WriteWithAnimation", swigMethodTypes44))
      swigDelegate44 = new SwigDelegateHBaseModel_44(SwigDirectorWriteWithAnimation__SWIG_7);
    if (SwigDerivedClassHasMethod("CreateIncludeSegment", swigMethodTypes45))
      swigDelegate45 = new SwigDelegateHBaseModel_45(SwigDirectorCreateIncludeSegment);
    HCSMVOPINVOKE.HBaseModel_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25, swigDelegate26, swigDelegate27, swigDelegate28, swigDelegate29, swigDelegate30, swigDelegate31, swigDelegate32, swigDelegate33, swigDelegate34, swigDelegate35, swigDelegate36, swigDelegate37, swigDelegate38, swigDelegate39, swigDelegate40, swigDelegate41, swigDelegate42, swigDelegate43, swigDelegate44, swigDelegate45);
  }

  private bool SwigDerivedClassHasMethod(string methodName, Type[] methodTypes) {
    System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(HBaseModel));
    return hasDerivedMethod;
  }

  private void SwigDirectorInit() {
    Init();
  }

  private void SwigDirectorFlush() {
    Flush();
  }

  private int SwigDirectorRead__SWIG_0(IntPtr FileName, IntPtr pHView, bool clean_include, IntPtr options) {
    return (int)Read(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName), (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), clean_include, (options == IntPtr.Zero) ? null : new HInputHandlerOptions(options, false));
  }

  private int SwigDirectorRead__SWIG_1(IntPtr FileName, IntPtr pHView, bool clean_include) {
    return (int)Read(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName), (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), clean_include);
  }

  private int SwigDirectorRead__SWIG_2(IntPtr FileName, IntPtr pHView) {
    return (int)Read(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName), (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false));
  }

  private int SwigDirectorRead__SWIG_3(IntPtr FileName) {
    return (int)Read(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName));
  }

  private int SwigDirectorRead__SWIG_4(string FileName, IntPtr pHView, bool clean_include, IntPtr options) {
    return (int)Read(FileName, (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), clean_include, (options == IntPtr.Zero) ? null : new HInputHandlerOptions(options, false));
  }

  private int SwigDirectorRead__SWIG_5(string FileName, IntPtr pHView, bool clean_include) {
    return (int)Read(FileName, (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), clean_include);
  }

  private int SwigDirectorRead__SWIG_6(string FileName, IntPtr pHView) {
    return (int)Read(FileName, (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false));
  }

  private int SwigDirectorRead__SWIG_7(string FileName) {
    return (int)Read(FileName);
  }

  private int SwigDirectorWriteWithOptions__SWIG_0(IntPtr FileName, IntPtr pHView, IntPtr options) {
    return (int)WriteWithOptions(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName), (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), (options == IntPtr.Zero) ? null : new HOutputHandlerOptions(options, false));
  }

  private int SwigDirectorWriteWithOptions__SWIG_1(IntPtr FileName, IntPtr pHView) {
    return (int)WriteWithOptions(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName), (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false));
  }

  private int SwigDirectorWriteWithOptions__SWIG_2(IntPtr FileName) {
    return (int)WriteWithOptions(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName));
  }

  private int SwigDirectorWriteWithOptions__SWIG_3(string FileName, IntPtr pHView, IntPtr options) {
    return (int)WriteWithOptions(FileName, (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), (options == IntPtr.Zero) ? null : new HOutputHandlerOptions(options, false));
  }

  private int SwigDirectorWriteWithOptions__SWIG_4(string FileName, IntPtr pHView) {
    return (int)WriteWithOptions(FileName, (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false));
  }

  private int SwigDirectorWriteWithOptions__SWIG_5(string FileName) {
    return (int)WriteWithOptions(FileName);
  }

  private int SwigDirectorWrite__SWIG_0(IntPtr FileName, IntPtr pHView, float width, float height) {
    return (int)Write(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName), (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), width, height);
  }

  private int SwigDirectorWrite__SWIG_1(IntPtr FileName, IntPtr pHView, float width) {
    return (int)Write(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName), (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), width);
  }

  private int SwigDirectorWrite__SWIG_2(IntPtr FileName, IntPtr pHView) {
    return (int)Write(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName), (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false));
  }

  private int SwigDirectorWrite__SWIG_3(IntPtr FileName) {
    return (int)Write(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName));
  }

  private int SwigDirectorWrite__SWIG_4(string FileName, IntPtr pHView, float width, float height) {
    return (int)Write(FileName, (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), width, height);
  }

  private int SwigDirectorWrite__SWIG_5(string FileName, IntPtr pHView, float width) {
    return (int)Write(FileName, (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), width);
  }

  private int SwigDirectorWrite__SWIG_6(string FileName, IntPtr pHView) {
    return (int)Write(FileName, (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false));
  }

  private int SwigDirectorWrite__SWIG_7(string FileName) {
    return (int)Write(FileName);
  }

  private IntPtr SwigDirectorGetStreamFileTK() {
    return HStreamFileToolkit.getCPtr(GetStreamFileTK()).Handle;
  }

  private MVO_POINTER_SIZED_INT SwigDirectorGetModelKey() {
    return GetModelKey();
  }

  private MVO_POINTER_SIZED_INT SwigDirectorGetModelIncludeKey() {
    return GetModelIncludeKey();
  }

  private MVO_POINTER_SIZED_INT SwigDirectorGetBBoxKey() {
    return GetBBoxKey();
  }

  private bool SwigDirectorIsBRepGeometry() {
    return IsBRepGeometry();
  }

  private void SwigDirectorSetBRepGeometry(bool brep) {
    SetBRepGeometry(brep);
  }

  private bool SwigDirectorIsFEAGeometry() {
    return IsFEAGeometry();
  }

  private void SwigDirectorSetFEAGeometry(bool fea) {
    SetFEAGeometry(fea);
  }

  private bool SwigDirectorIsVectorGeometry() {
    return IsVectorGeometry();
  }

  private void SwigDirectorSetVectorGeometry(bool vector) {
    SetVectorGeometry(vector);
  }

  private void SwigDirectorCleanIncludes() {
    CleanIncludes();
  }

  private void SwigDirectorDeleteIncludedSegments() {
    DeleteIncludedSegments();
  }

  private IntPtr SwigDirectorGetBhvBehaviorManager() {
    return HBhvBehaviorManager.getCPtr(GetBhvBehaviorManager()).Handle;
  }

  private int SwigDirectorWriteWithAnimation__SWIG_0(IntPtr FileName, IntPtr pHView, float width, float height) {
    return (int)WriteWithAnimation(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName), (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), width, height);
  }

  private int SwigDirectorWriteWithAnimation__SWIG_1(IntPtr FileName, IntPtr pHView, float width) {
    return (int)WriteWithAnimation(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName), (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), width);
  }

  private int SwigDirectorWriteWithAnimation__SWIG_2(IntPtr FileName, IntPtr pHView) {
    return (int)WriteWithAnimation(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName), (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false));
  }

  private int SwigDirectorWriteWithAnimation__SWIG_3(IntPtr FileName) {
    return (int)WriteWithAnimation(System.Runtime.InteropServices.Marshal.PtrToStringUni(FileName));
  }

  private int SwigDirectorWriteWithAnimation__SWIG_4(string FileName, IntPtr pHView, float width, float height) {
    return (int)WriteWithAnimation(FileName, (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), width, height);
  }

  private int SwigDirectorWriteWithAnimation__SWIG_5(string FileName, IntPtr pHView, float width) {
    return (int)WriteWithAnimation(FileName, (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false), width);
  }

  private int SwigDirectorWriteWithAnimation__SWIG_6(string FileName, IntPtr pHView) {
    return (int)WriteWithAnimation(FileName, (pHView == IntPtr.Zero) ? null : new HBaseView(pHView, false));
  }

  private int SwigDirectorWriteWithAnimation__SWIG_7(string FileName) {
    return (int)WriteWithAnimation(FileName);
  }

  private void SwigDirectorCreateIncludeSegment() {
    CreateIncludeSegment();
  }

  public delegate void SwigDelegateHBaseModel_0();
  public delegate void SwigDelegateHBaseModel_1();
  public delegate int SwigDelegateHBaseModel_2(IntPtr FileName, IntPtr pHView, bool clean_include, IntPtr options);
  public delegate int SwigDelegateHBaseModel_3(IntPtr FileName, IntPtr pHView, bool clean_include);
  public delegate int SwigDelegateHBaseModel_4(IntPtr FileName, IntPtr pHView);
  public delegate int SwigDelegateHBaseModel_5(IntPtr FileName);
  public delegate int SwigDelegateHBaseModel_6(string FileName, IntPtr pHView, bool clean_include, IntPtr options);
  public delegate int SwigDelegateHBaseModel_7(string FileName, IntPtr pHView, bool clean_include);
  public delegate int SwigDelegateHBaseModel_8(string FileName, IntPtr pHView);
  public delegate int SwigDelegateHBaseModel_9(string FileName);
  public delegate int SwigDelegateHBaseModel_10(IntPtr FileName, IntPtr pHView, IntPtr options);
  public delegate int SwigDelegateHBaseModel_11(IntPtr FileName, IntPtr pHView);
  public delegate int SwigDelegateHBaseModel_12(IntPtr FileName);
  public delegate int SwigDelegateHBaseModel_13(string FileName, IntPtr pHView, IntPtr options);
  public delegate int SwigDelegateHBaseModel_14(string FileName, IntPtr pHView);
  public delegate int SwigDelegateHBaseModel_15(string FileName);
  public delegate int SwigDelegateHBaseModel_16(IntPtr FileName, IntPtr pHView, float width, float height);
  public delegate int SwigDelegateHBaseModel_17(IntPtr FileName, IntPtr pHView, float width);
  public delegate int SwigDelegateHBaseModel_18(IntPtr FileName, IntPtr pHView);
  public delegate int SwigDelegateHBaseModel_19(IntPtr FileName);
  public delegate int SwigDelegateHBaseModel_20(string FileName, IntPtr pHView, float width, float height);
  public delegate int SwigDelegateHBaseModel_21(string FileName, IntPtr pHView, float width);
  public delegate int SwigDelegateHBaseModel_22(string FileName, IntPtr pHView);
  public delegate int SwigDelegateHBaseModel_23(string FileName);
  public delegate IntPtr SwigDelegateHBaseModel_24();
  public delegate MVO_POINTER_SIZED_INT SwigDelegateHBaseModel_25();
  public delegate MVO_POINTER_SIZED_INT SwigDelegateHBaseModel_26();
  public delegate MVO_POINTER_SIZED_INT SwigDelegateHBaseModel_27();
  public delegate bool SwigDelegateHBaseModel_28();
  public delegate void SwigDelegateHBaseModel_29(bool brep);
  public delegate bool SwigDelegateHBaseModel_30();
  public delegate void SwigDelegateHBaseModel_31(bool fea);
  public delegate bool SwigDelegateHBaseModel_32();
  public delegate void SwigDelegateHBaseModel_33(bool vector);
  public delegate void SwigDelegateHBaseModel_34();
  public delegate void SwigDelegateHBaseModel_35();
  public delegate IntPtr SwigDelegateHBaseModel_36();
  public delegate int SwigDelegateHBaseModel_37(IntPtr FileName, IntPtr pHView, float width, float height);
  public delegate int SwigDelegateHBaseModel_38(IntPtr FileName, IntPtr pHView, float width);
  public delegate int SwigDelegateHBaseModel_39(IntPtr FileName, IntPtr pHView);
  public delegate int SwigDelegateHBaseModel_40(IntPtr FileName);
  public delegate int SwigDelegateHBaseModel_41(string FileName, IntPtr pHView, float width, float height);
  public delegate int SwigDelegateHBaseModel_42(string FileName, IntPtr pHView, float width);
  public delegate int SwigDelegateHBaseModel_43(string FileName, IntPtr pHView);
  public delegate int SwigDelegateHBaseModel_44(string FileName);
  public delegate void SwigDelegateHBaseModel_45();

  private SwigDelegateHBaseModel_0 swigDelegate0;
  private SwigDelegateHBaseModel_1 swigDelegate1;
  private SwigDelegateHBaseModel_2 swigDelegate2;
  private SwigDelegateHBaseModel_3 swigDelegate3;
  private SwigDelegateHBaseModel_4 swigDelegate4;
  private SwigDelegateHBaseModel_5 swigDelegate5;
  private SwigDelegateHBaseModel_6 swigDelegate6;
  private SwigDelegateHBaseModel_7 swigDelegate7;
  private SwigDelegateHBaseModel_8 swigDelegate8;
  private SwigDelegateHBaseModel_9 swigDelegate9;
  private SwigDelegateHBaseModel_10 swigDelegate10;
  private SwigDelegateHBaseModel_11 swigDelegate11;
  private SwigDelegateHBaseModel_12 swigDelegate12;
  private SwigDelegateHBaseModel_13 swigDelegate13;
  private SwigDelegateHBaseModel_14 swigDelegate14;
  private SwigDelegateHBaseModel_15 swigDelegate15;
  private SwigDelegateHBaseModel_16 swigDelegate16;
  private SwigDelegateHBaseModel_17 swigDelegate17;
  private SwigDelegateHBaseModel_18 swigDelegate18;
  private SwigDelegateHBaseModel_19 swigDelegate19;
  private SwigDelegateHBaseModel_20 swigDelegate20;
  private SwigDelegateHBaseModel_21 swigDelegate21;
  private SwigDelegateHBaseModel_22 swigDelegate22;
  private SwigDelegateHBaseModel_23 swigDelegate23;
  private SwigDelegateHBaseModel_24 swigDelegate24;
  private SwigDelegateHBaseModel_25 swigDelegate25;
  private SwigDelegateHBaseModel_26 swigDelegate26;
  private SwigDelegateHBaseModel_27 swigDelegate27;
  private SwigDelegateHBaseModel_28 swigDelegate28;
  private SwigDelegateHBaseModel_29 swigDelegate29;
  private SwigDelegateHBaseModel_30 swigDelegate30;
  private SwigDelegateHBaseModel_31 swigDelegate31;
  private SwigDelegateHBaseModel_32 swigDelegate32;
  private SwigDelegateHBaseModel_33 swigDelegate33;
  private SwigDelegateHBaseModel_34 swigDelegate34;
  private SwigDelegateHBaseModel_35 swigDelegate35;
  private SwigDelegateHBaseModel_36 swigDelegate36;
  private SwigDelegateHBaseModel_37 swigDelegate37;
  private SwigDelegateHBaseModel_38 swigDelegate38;
  private SwigDelegateHBaseModel_39 swigDelegate39;
  private SwigDelegateHBaseModel_40 swigDelegate40;
  private SwigDelegateHBaseModel_41 swigDelegate41;
  private SwigDelegateHBaseModel_42 swigDelegate42;
  private SwigDelegateHBaseModel_43 swigDelegate43;
  private SwigDelegateHBaseModel_44 swigDelegate44;
  private SwigDelegateHBaseModel_45 swigDelegate45;

  private static Type[] swigMethodTypes0 = new Type[] {  };
  private static Type[] swigMethodTypes1 = new Type[] {  };
  private static Type[] swigMethodTypes2 = new Type[] { typeof(string), typeof(HBaseView), typeof(bool), typeof(HInputHandlerOptions) };
  private static Type[] swigMethodTypes3 = new Type[] { typeof(string), typeof(HBaseView), typeof(bool) };
  private static Type[] swigMethodTypes4 = new Type[] { typeof(string), typeof(HBaseView) };
  private static Type[] swigMethodTypes5 = new Type[] { typeof(string) };
  private static Type[] swigMethodTypes6 = new Type[] { typeof(string), typeof(HBaseView), typeof(bool), typeof(HInputHandlerOptions) };
  private static Type[] swigMethodTypes7 = new Type[] { typeof(string), typeof(HBaseView), typeof(bool) };
  private static Type[] swigMethodTypes8 = new Type[] { typeof(string), typeof(HBaseView) };
  private static Type[] swigMethodTypes9 = new Type[] { typeof(string) };
  private static Type[] swigMethodTypes10 = new Type[] { typeof(string), typeof(HBaseView), typeof(HOutputHandlerOptions) };
  private static Type[] swigMethodTypes11 = new Type[] { typeof(string), typeof(HBaseView) };
  private static Type[] swigMethodTypes12 = new Type[] { typeof(string) };
  private static Type[] swigMethodTypes13 = new Type[] { typeof(string), typeof(HBaseView), typeof(HOutputHandlerOptions) };
  private static Type[] swigMethodTypes14 = new Type[] { typeof(string), typeof(HBaseView) };
  private static Type[] swigMethodTypes15 = new Type[] { typeof(string) };
  private static Type[] swigMethodTypes16 = new Type[] { typeof(string), typeof(HBaseView), typeof(float), typeof(float) };
  private static Type[] swigMethodTypes17 = new Type[] { typeof(string), typeof(HBaseView), typeof(float) };
  private static Type[] swigMethodTypes18 = new Type[] { typeof(string), typeof(HBaseView) };
  private static Type[] swigMethodTypes19 = new Type[] { typeof(string) };
  private static Type[] swigMethodTypes20 = new Type[] { typeof(string), typeof(HBaseView), typeof(float), typeof(float) };
  private static Type[] swigMethodTypes21 = new Type[] { typeof(string), typeof(HBaseView), typeof(float) };
  private static Type[] swigMethodTypes22 = new Type[] { typeof(string), typeof(HBaseView) };
  private static Type[] swigMethodTypes23 = new Type[] { typeof(string) };
  private static Type[] swigMethodTypes24 = new Type[] {  };
  private static Type[] swigMethodTypes25 = new Type[] {  };
  private static Type[] swigMethodTypes26 = new Type[] {  };
  private static Type[] swigMethodTypes27 = new Type[] {  };
  private static Type[] swigMethodTypes28 = new Type[] {  };
  private static Type[] swigMethodTypes29 = new Type[] { typeof(bool) };
  private static Type[] swigMethodTypes30 = new Type[] {  };
  private static Type[] swigMethodTypes31 = new Type[] { typeof(bool) };
  private static Type[] swigMethodTypes32 = new Type[] {  };
  private static Type[] swigMethodTypes33 = new Type[] { typeof(bool) };
  private static Type[] swigMethodTypes34 = new Type[] {  };
  private static Type[] swigMethodTypes35 = new Type[] {  };
  private static Type[] swigMethodTypes36 = new Type[] {  };
  private static Type[] swigMethodTypes37 = new Type[] { typeof(string), typeof(HBaseView), typeof(float), typeof(float) };
  private static Type[] swigMethodTypes38 = new Type[] { typeof(string), typeof(HBaseView), typeof(float) };
  private static Type[] swigMethodTypes39 = new Type[] { typeof(string), typeof(HBaseView) };
  private static Type[] swigMethodTypes40 = new Type[] { typeof(string) };
  private static Type[] swigMethodTypes41 = new Type[] { typeof(string), typeof(HBaseView), typeof(float), typeof(float) };
  private static Type[] swigMethodTypes42 = new Type[] { typeof(string), typeof(HBaseView), typeof(float) };
  private static Type[] swigMethodTypes43 = new Type[] { typeof(string), typeof(HBaseView) };
  private static Type[] swigMethodTypes44 = new Type[] { typeof(string) };
  private static Type[] swigMethodTypes45 = new Type[] {  };
}
