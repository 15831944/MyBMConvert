/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HOpCameraOrbitTurntable : HBaseOperator {
  private HandleRef swigCPtr;

  public HOpCameraOrbitTurntable(IntPtr cPtr, bool cMemoryOwn) : base(HCSMVOPINVOKE.HOpCameraOrbitTurntableUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HOpCameraOrbitTurntable obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~HOpCameraOrbitTurntable() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HOpCameraOrbitTurntable(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public HOpCameraOrbitTurntable(HBaseView view, int DoRepeat, int DoCapture) : this(HCSMVOPINVOKE.new_HOpCameraOrbitTurntable__SWIG_0(HBaseView.getCPtr(view), DoRepeat, DoCapture), true) {
    SwigDirectorConnect();
  }

  public HOpCameraOrbitTurntable(HBaseView view, int DoRepeat) : this(HCSMVOPINVOKE.new_HOpCameraOrbitTurntable__SWIG_1(HBaseView.getCPtr(view), DoRepeat), true) {
    SwigDirectorConnect();
  }

  public HOpCameraOrbitTurntable(HBaseView view) : this(HCSMVOPINVOKE.new_HOpCameraOrbitTurntable__SWIG_2(HBaseView.getCPtr(view)), true) {
    SwigDirectorConnect();
  }

  public override string GetName() {
    string ret = ((this.GetType() == typeof(HOpCameraOrbitTurntable)) ? HCSMVOPINVOKE.HOpCameraOrbitTurntable_GetName(swigCPtr) : HCSMVOPINVOKE.HOpCameraOrbitTurntable_GetNameSwigExplicitHOpCameraOrbitTurntable(swigCPtr));
    return ret;
  }

  public override int OnLButtonDown(HEventInfo hevent) {
    int ret = ((this.GetType() == typeof(HOpCameraOrbitTurntable)) ? HCSMVOPINVOKE.HOpCameraOrbitTurntable_OnLButtonDown(swigCPtr, HEventInfo.getCPtr(hevent)) : HCSMVOPINVOKE.HOpCameraOrbitTurntable_OnLButtonDownSwigExplicitHOpCameraOrbitTurntable(swigCPtr, HEventInfo.getCPtr(hevent)));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override int OnLButtonDownAndMove(HEventInfo hevent) {
    int ret = ((this.GetType() == typeof(HOpCameraOrbitTurntable)) ? HCSMVOPINVOKE.HOpCameraOrbitTurntable_OnLButtonDownAndMove(swigCPtr, HEventInfo.getCPtr(hevent)) : HCSMVOPINVOKE.HOpCameraOrbitTurntable_OnLButtonDownAndMoveSwigExplicitHOpCameraOrbitTurntable(swigCPtr, HEventInfo.getCPtr(hevent)));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override int OnLButtonUp(HEventInfo hevent) {
    int ret = ((this.GetType() == typeof(HOpCameraOrbitTurntable)) ? HCSMVOPINVOKE.HOpCameraOrbitTurntable_OnLButtonUp(swigCPtr, HEventInfo.getCPtr(hevent)) : HCSMVOPINVOKE.HOpCameraOrbitTurntable_OnLButtonUpSwigExplicitHOpCameraOrbitTurntable(swigCPtr, HEventInfo.getCPtr(hevent)));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override int OnMouseWheel(HEventInfo hevent) {
    int ret = ((this.GetType() == typeof(HOpCameraOrbitTurntable)) ? HCSMVOPINVOKE.HOpCameraOrbitTurntable_OnMouseWheel(swigCPtr, HEventInfo.getCPtr(hevent)) : HCSMVOPINVOKE.HOpCameraOrbitTurntable_OnMouseWheelSwigExplicitHOpCameraOrbitTurntable(swigCPtr, HEventInfo.getCPtr(hevent)));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetLightFollowsCamera(bool follow) {
    HCSMVOPINVOKE.HOpCameraOrbitTurntable_SetLightFollowsCamera(swigCPtr, follow);
  }

  public bool GetLightFollowsCamera() {
    bool ret = HCSMVOPINVOKE.HOpCameraOrbitTurntable_GetLightFollowsCamera(swigCPtr);
    return ret;
  }

  public void SetCenter(HPoint center) {
    HCSMVOPINVOKE.HOpCameraOrbitTurntable_SetCenter(swigCPtr, HPoint.getCPtr(center));
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
  }

  public void UnSetCenter() {
    HCSMVOPINVOKE.HOpCameraOrbitTurntable_UnSetCenter(swigCPtr);
  }

  public override HBaseOperator Clone() {
    IntPtr cPtr = ((this.GetType() == typeof(HOpCameraOrbitTurntable)) ? HCSMVOPINVOKE.HOpCameraOrbitTurntable_Clone(swigCPtr) : HCSMVOPINVOKE.HOpCameraOrbitTurntable_CloneSwigExplicitHOpCameraOrbitTurntable(swigCPtr));
    HBaseOperator ret = (cPtr == IntPtr.Zero) ? null : new HBaseOperator(cPtr, false);
    return ret;
  }

  protected void RotateAroundAxis(HPoint axis, float rf) {
    HCSMVOPINVOKE.HOpCameraOrbitTurntable_RotateAroundAxis(swigCPtr, HPoint.getCPtr(axis), rf);
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("CreateListenerManager", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateHOpCameraOrbitTurntable_0(SwigDirectorCreateListenerManager);
    if (SwigDerivedClassHasMethod("OnLButtonDown", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateHOpCameraOrbitTurntable_1(SwigDirectorOnLButtonDown);
    if (SwigDerivedClassHasMethod("OnMouseMove", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateHOpCameraOrbitTurntable_2(SwigDirectorOnMouseMove);
    if (SwigDerivedClassHasMethod("OnLButtonUp", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateHOpCameraOrbitTurntable_3(SwigDirectorOnLButtonUp);
    if (SwigDerivedClassHasMethod("OnLButtonDblClk", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateHOpCameraOrbitTurntable_4(SwigDirectorOnLButtonDblClk);
    if (SwigDerivedClassHasMethod("OnMButtonDown", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateHOpCameraOrbitTurntable_5(SwigDirectorOnMButtonDown);
    if (SwigDerivedClassHasMethod("OnMButtonUp", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateHOpCameraOrbitTurntable_6(SwigDirectorOnMButtonUp);
    if (SwigDerivedClassHasMethod("OnMButtonDblClk", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateHOpCameraOrbitTurntable_7(SwigDirectorOnMButtonDblClk);
    if (SwigDerivedClassHasMethod("OnRButtonDown", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateHOpCameraOrbitTurntable_8(SwigDirectorOnRButtonDown);
    if (SwigDerivedClassHasMethod("OnRButtonUp", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateHOpCameraOrbitTurntable_9(SwigDirectorOnRButtonUp);
    if (SwigDerivedClassHasMethod("OnRButtonDblClk", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateHOpCameraOrbitTurntable_10(SwigDirectorOnRButtonDblClk);
    if (SwigDerivedClassHasMethod("OnMouseWheel", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateHOpCameraOrbitTurntable_11(SwigDirectorOnMouseWheel);
    if (SwigDerivedClassHasMethod("OnKeyDown", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateHOpCameraOrbitTurntable_12(SwigDirectorOnKeyDown);
    if (SwigDerivedClassHasMethod("OnKeyUp", swigMethodTypes13))
      swigDelegate13 = new SwigDelegateHOpCameraOrbitTurntable_13(SwigDirectorOnKeyUp);
    if (SwigDerivedClassHasMethod("OnTouchesDown", swigMethodTypes14))
      swigDelegate14 = new SwigDelegateHOpCameraOrbitTurntable_14(SwigDirectorOnTouchesDown);
    if (SwigDerivedClassHasMethod("OnTouchesMove", swigMethodTypes15))
      swigDelegate15 = new SwigDelegateHOpCameraOrbitTurntable_15(SwigDirectorOnTouchesMove);
    if (SwigDerivedClassHasMethod("OnTouchesUp", swigMethodTypes16))
      swigDelegate16 = new SwigDelegateHOpCameraOrbitTurntable_16(SwigDirectorOnTouchesUp);
    if (SwigDerivedClassHasMethod("Clone", swigMethodTypes17))
      swigDelegate17 = new SwigDelegateHOpCameraOrbitTurntable_17(SwigDirectorClone);
    if (SwigDerivedClassHasMethod("OperatorStarted", swigMethodTypes18))
      swigDelegate18 = new SwigDelegateHOpCameraOrbitTurntable_18(SwigDirectorOperatorStarted);
    if (SwigDerivedClassHasMethod("GetName", swigMethodTypes19))
      swigDelegate19 = new SwigDelegateHOpCameraOrbitTurntable_19(SwigDirectorGetName);
    if (SwigDerivedClassHasMethod("OnLButtonDownAndMove", swigMethodTypes20))
      swigDelegate20 = new SwigDelegateHOpCameraOrbitTurntable_20(SwigDirectorOnLButtonDownAndMove);
    if (SwigDerivedClassHasMethod("OnMButtonDownAndMove", swigMethodTypes21))
      swigDelegate21 = new SwigDelegateHOpCameraOrbitTurntable_21(SwigDirectorOnMButtonDownAndMove);
    if (SwigDerivedClassHasMethod("OnRButtonDownAndMove", swigMethodTypes22))
      swigDelegate22 = new SwigDelegateHOpCameraOrbitTurntable_22(SwigDirectorOnRButtonDownAndMove);
    if (SwigDerivedClassHasMethod("OnLRButtonDownAndMove", swigMethodTypes23))
      swigDelegate23 = new SwigDelegateHOpCameraOrbitTurntable_23(SwigDirectorOnLRButtonDownAndMove);
    if (SwigDerivedClassHasMethod("OnNoButtonDownAndMove", swigMethodTypes24))
      swigDelegate24 = new SwigDelegateHOpCameraOrbitTurntable_24(SwigDirectorOnNoButtonDownAndMove);
    if (SwigDerivedClassHasMethod("OnTimer", swigMethodTypes25))
      swigDelegate25 = new SwigDelegateHOpCameraOrbitTurntable_25(SwigDirectorOnTimer);
    HCSMVOPINVOKE.HOpCameraOrbitTurntable_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25);
  }

  private bool SwigDerivedClassHasMethod(string methodName, Type[] methodTypes) {
    System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(HOpCameraOrbitTurntable));
    return hasDerivedMethod;
  }

  private IntPtr SwigDirectorCreateListenerManager() {
    return HEventListener.getCPtr(CreateListenerManager()).Handle;
  }

  private int SwigDirectorOnLButtonDown(IntPtr hevent) {
    return OnLButtonDown(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMouseMove(IntPtr hevent) {
    return OnMouseMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnLButtonUp(IntPtr hevent) {
    return OnLButtonUp(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnLButtonDblClk(IntPtr hevent) {
    return OnLButtonDblClk(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMButtonDown(IntPtr hevent) {
    return OnMButtonDown(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMButtonUp(IntPtr hevent) {
    return OnMButtonUp(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMButtonDblClk(IntPtr hevent) {
    return OnMButtonDblClk(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnRButtonDown(IntPtr hevent) {
    return OnRButtonDown(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnRButtonUp(IntPtr hevent) {
    return OnRButtonUp(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnRButtonDblClk(IntPtr hevent) {
    return OnRButtonDblClk(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMouseWheel(IntPtr hevent) {
    return OnMouseWheel(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnKeyDown(IntPtr hevent) {
    return OnKeyDown(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnKeyUp(IntPtr hevent) {
    return OnKeyUp(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnTouchesDown(IntPtr hevent) {
    return OnTouchesDown(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnTouchesMove(IntPtr hevent) {
    return OnTouchesMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnTouchesUp(IntPtr hevent) {
    return OnTouchesUp(new HEventInfo(hevent, false));
  }

  private IntPtr SwigDirectorClone() {
    return HBaseOperator.getCPtr(Clone()).Handle;
  }

  private bool SwigDirectorOperatorStarted() {
    return OperatorStarted();
  }

  private string SwigDirectorGetName() {
    return GetName();
  }

  private int SwigDirectorOnLButtonDownAndMove(IntPtr hevent) {
    return OnLButtonDownAndMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnMButtonDownAndMove(IntPtr hevent) {
    return OnMButtonDownAndMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnRButtonDownAndMove(IntPtr hevent) {
    return OnRButtonDownAndMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnLRButtonDownAndMove(IntPtr hevent) {
    return OnLRButtonDownAndMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnNoButtonDownAndMove(IntPtr hevent) {
    return OnNoButtonDownAndMove(new HEventInfo(hevent, false));
  }

  private int SwigDirectorOnTimer(IntPtr hevent) {
    return OnTimer(new HEventInfo(hevent, false));
  }

  public delegate IntPtr SwigDelegateHOpCameraOrbitTurntable_0();
  public delegate int SwigDelegateHOpCameraOrbitTurntable_1(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_2(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_3(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_4(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_5(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_6(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_7(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_8(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_9(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_10(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_11(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_12(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_13(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_14(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_15(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_16(IntPtr hevent);
  public delegate IntPtr SwigDelegateHOpCameraOrbitTurntable_17();
  public delegate bool SwigDelegateHOpCameraOrbitTurntable_18();
  public delegate string SwigDelegateHOpCameraOrbitTurntable_19();
  public delegate int SwigDelegateHOpCameraOrbitTurntable_20(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_21(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_22(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_23(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_24(IntPtr hevent);
  public delegate int SwigDelegateHOpCameraOrbitTurntable_25(IntPtr hevent);

  private SwigDelegateHOpCameraOrbitTurntable_0 swigDelegate0;
  private SwigDelegateHOpCameraOrbitTurntable_1 swigDelegate1;
  private SwigDelegateHOpCameraOrbitTurntable_2 swigDelegate2;
  private SwigDelegateHOpCameraOrbitTurntable_3 swigDelegate3;
  private SwigDelegateHOpCameraOrbitTurntable_4 swigDelegate4;
  private SwigDelegateHOpCameraOrbitTurntable_5 swigDelegate5;
  private SwigDelegateHOpCameraOrbitTurntable_6 swigDelegate6;
  private SwigDelegateHOpCameraOrbitTurntable_7 swigDelegate7;
  private SwigDelegateHOpCameraOrbitTurntable_8 swigDelegate8;
  private SwigDelegateHOpCameraOrbitTurntable_9 swigDelegate9;
  private SwigDelegateHOpCameraOrbitTurntable_10 swigDelegate10;
  private SwigDelegateHOpCameraOrbitTurntable_11 swigDelegate11;
  private SwigDelegateHOpCameraOrbitTurntable_12 swigDelegate12;
  private SwigDelegateHOpCameraOrbitTurntable_13 swigDelegate13;
  private SwigDelegateHOpCameraOrbitTurntable_14 swigDelegate14;
  private SwigDelegateHOpCameraOrbitTurntable_15 swigDelegate15;
  private SwigDelegateHOpCameraOrbitTurntable_16 swigDelegate16;
  private SwigDelegateHOpCameraOrbitTurntable_17 swigDelegate17;
  private SwigDelegateHOpCameraOrbitTurntable_18 swigDelegate18;
  private SwigDelegateHOpCameraOrbitTurntable_19 swigDelegate19;
  private SwigDelegateHOpCameraOrbitTurntable_20 swigDelegate20;
  private SwigDelegateHOpCameraOrbitTurntable_21 swigDelegate21;
  private SwigDelegateHOpCameraOrbitTurntable_22 swigDelegate22;
  private SwigDelegateHOpCameraOrbitTurntable_23 swigDelegate23;
  private SwigDelegateHOpCameraOrbitTurntable_24 swigDelegate24;
  private SwigDelegateHOpCameraOrbitTurntable_25 swigDelegate25;

  private static Type[] swigMethodTypes0 = new Type[] {  };
  private static Type[] swigMethodTypes1 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes2 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes3 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes4 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes5 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes6 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes7 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes8 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes9 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes10 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes11 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes12 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes13 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes14 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes15 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes16 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes17 = new Type[] {  };
  private static Type[] swigMethodTypes18 = new Type[] {  };
  private static Type[] swigMethodTypes19 = new Type[] {  };
  private static Type[] swigMethodTypes20 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes21 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes22 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes23 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes24 = new Type[] { typeof(HEventInfo) };
  private static Type[] swigMethodTypes25 = new Type[] { typeof(HEventInfo) };
}
