/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HModelInfo : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HModelInfo(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HModelInfo obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HModelInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HModelInfo(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public HModelInfo(MVO_POINTER_SIZED_INT segment_key) : this(HCSMVOPINVOKE.new_HModelInfo__SWIG_0(segment_key), true) {
  }

  public HModelInfo() : this(HCSMVOPINVOKE.new_HModelInfo__SWIG_1(), true) {
  }

  public virtual void ComputeModelInfo(MVO_POINTER_SIZED_INT segment_key, bool recurse) {
    HCSMVOPINVOKE.HModelInfo_ComputeModelInfo__SWIG_0(swigCPtr, segment_key, recurse);
  }

  public virtual void ComputeModelInfo(MVO_POINTER_SIZED_INT segment_key) {
    HCSMVOPINVOKE.HModelInfo_ComputeModelInfo__SWIG_1(swigCPtr, segment_key);
  }

  public virtual void ComputeModelInfo() {
    HCSMVOPINVOKE.HModelInfo_ComputeModelInfo__SWIG_2(swigCPtr);
  }

  public uint GetTotalFaces() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalFaces(swigCPtr);
    return ret;
  }

  public uint GetTotalVertices() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalVertices(swigCPtr);
    return ret;
  }

  public uint GetTotalTriangles() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalTriangles(swigCPtr);
    return ret;
  }

  public uint GetTotalTristrips() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalTristrips(swigCPtr);
    return ret;
  }

  public uint GetTotalSegments() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalSegments(swigCPtr);
    return ret;
  }

  public uint GetTotalCircle() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalCircle(swigCPtr);
    return ret;
  }

  public uint GetTotalCircularArc() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalCircularArc(swigCPtr);
    return ret;
  }

  public uint GetTotalCircularChord() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalCircularChord(swigCPtr);
    return ret;
  }

  public uint GetTotalCircularWedge() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalCircularWedge(swigCPtr);
    return ret;
  }

  public uint GetTotalEllipse() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalEllipse(swigCPtr);
    return ret;
  }

  public uint GetTotalEllipticalArc() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalEllipticalArc(swigCPtr);
    return ret;
  }

  public uint GetTotalGrid() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalGrid(swigCPtr);
    return ret;
  }

  public uint GetTotalImage() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalImage(swigCPtr);
    return ret;
  }

  public uint GetTotalIncludes() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalIncludes(swigCPtr);
    return ret;
  }

  public uint GetTotalIncluders() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalIncluders(swigCPtr);
    return ret;
  }

  public uint GetTotalLine() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalLine(swigCPtr);
    return ret;
  }

  public uint GetTotalMarker() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalMarker(swigCPtr);
    return ret;
  }

  public uint GetTotalMesh() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalMesh(swigCPtr);
    return ret;
  }

  public uint GetTotalPolygon() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalPolygon(swigCPtr);
    return ret;
  }

  public uint GetTotalPolyline() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalPolyline(swigCPtr);
    return ret;
  }

  public uint GetTotalShell() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalShell(swigCPtr);
    return ret;
  }

  public uint GetTotalStringCursor() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalStringCursor(swigCPtr);
    return ret;
  }

  public uint GetTotalText() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalText(swigCPtr);
    return ret;
  }

  public uint GetTotalMatrices() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalMatrices(swigCPtr);
    return ret;
  }

  public uint GetTotalSpotLight() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalSpotLight(swigCPtr);
    return ret;
  }

  public uint GetTotalDistantLight() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalDistantLight(swigCPtr);
    return ret;
  }

  public uint GetTotalLocalLight() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalLocalLight(swigCPtr);
    return ret;
  }

  public uint GetTotalCuttingPlane() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalCuttingPlane(swigCPtr);
    return ret;
  }

  public uint GetTotalCylinders() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalCylinders(swigCPtr);
    return ret;
  }

  public uint GetTotalPolyCylinders() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalPolyCylinders(swigCPtr);
    return ret;
  }

  public uint GetTotalSpheres() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalSpheres(swigCPtr);
    return ret;
  }

  public uint GetTotalNURBSCurves() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalNURBSCurves(swigCPtr);
    return ret;
  }

  public uint GetTotalNURBSSurfaces() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalNURBSSurfaces(swigCPtr);
    return ret;
  }

  public uint GetTotalReferences() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalReferences(swigCPtr);
    return ret;
  }

  public uint GetTotalInfiniteLines() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalInfiniteLines(swigCPtr);
    return ret;
  }

  public uint GetTotalInfiniteRays() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalInfiniteRays(swigCPtr);
    return ret;
  }

  public uint GetTotalOthers() {
    uint ret = HCSMVOPINVOKE.HModelInfo_GetTotalOthers(swigCPtr);
    return ret;
  }

}
