/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HRegionSelItem : HSmartSelItem {
  private HandleRef swigCPtr;

  public HRegionSelItem(IntPtr cPtr, bool cMemoryOwn) : base(HCSMVOPINVOKE.HRegionSelItemUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HRegionSelItem obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~HRegionSelItem() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HRegionSelItem(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public HRegionSelItem(HShellObject oShellObj, HSelectionSet selection_set, int incl_count, MVO_POINTER_SIZED_INT[] incl_keys, int region) : this(HCSMVOPINVOKE.new_HRegionSelItem(HShellObject.getCPtr(oShellObj), HSelectionSet.getCPtr(selection_set), incl_count, incl_keys, region), true) {
    if (HCSMVOPINVOKE.SWIGPendingException.Pending) throw HCSMVOPINVOKE.SWIGPendingException.Retrieve();
  }

  public override string GetName() {
    string ret = HCSMVOPINVOKE.HRegionSelItem_GetName(swigCPtr);
    return ret;
  }

  public virtual int GetRegion() {
    int ret = HCSMVOPINVOKE.HRegionSelItem_GetRegion(swigCPtr);
    return ret;
  }

  public override bool Equals(HSelectionItem i2) {
    bool ret = HCSMVOPINVOKE.HRegionSelItem_Equals(swigCPtr, HSelectionItem.getCPtr(i2));
    return ret;
  }

  public override bool Highlight() {
    bool ret = HCSMVOPINVOKE.HRegionSelItem_Highlight(swigCPtr);
    return ret;
  }

  public override bool UnHighlight() {
    bool ret = HCSMVOPINVOKE.HRegionSelItem_UnHighlight(swigCPtr);
    return ret;
  }

}
