/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using MVO_POINTER_SIZED_INT = System.Int64;
using MVO_POINTER_SIZED_UINT = System.UInt64;
using ID_Key = System.Int64;
#else
using MVO_POINTER_SIZED_INT = System.Int32;
using MVO_POINTER_SIZED_UINT = System.UInt32;
using ID_Key = System.Int32;
#endif


public class HConstFRSimpType : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HConstFRSimpType(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HConstFRSimpType obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  
  public void owns_memory(bool ownMemory) {
	swigCMemOwn = ownMemory;
  }

  ~HConstFRSimpType() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSMVOPINVOKE.delete_HConstFRSimpType(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public int m_SimpLevelMin {
    set {
      HCSMVOPINVOKE.HConstFRSimpType_m_SimpLevelMin_set(swigCPtr, value);
    } 
    get {
      int ret = HCSMVOPINVOKE.HConstFRSimpType_m_SimpLevelMin_get(swigCPtr);
      return ret;
    } 
  }

  public int m_SimpLevelMax {
    set {
      HCSMVOPINVOKE.HConstFRSimpType_m_SimpLevelMax_set(swigCPtr, value);
    } 
    get {
      int ret = HCSMVOPINVOKE.HConstFRSimpType_m_SimpLevelMax_get(swigCPtr);
      return ret;
    } 
  }

  public virtual void Reset(HConstantFrameRate pCfr) {
    HCSMVOPINVOKE.HConstFRSimpType_Reset(swigCPtr, HConstantFrameRate.getCPtr(pCfr));
  }

  public virtual void Set(HConstantFrameRate pCfr, int SimpLevel) {
    HCSMVOPINVOKE.HConstFRSimpType_Set(swigCPtr, HConstantFrameRate.getCPtr(pCfr), SimpLevel);
  }

  public virtual void Update(HConstantFrameRate pCfr, int SimpLevel) {
    HCSMVOPINVOKE.HConstFRSimpType_Update(swigCPtr, HConstantFrameRate.getCPtr(pCfr), SimpLevel);
  }

  public virtual ConstFRType GetFRType() {
    ConstFRType ret = (ConstFRType)HCSMVOPINVOKE.HConstFRSimpType_GetFRType(swigCPtr);
    return ret;
  }

  public int GetMinSimpLevel() {
    int ret = HCSMVOPINVOKE.HConstFRSimpType_GetMinSimpLevel(swigCPtr);
    return ret;
  }

  public int GetMaxSimpLevel() {
    int ret = HCSMVOPINVOKE.HConstFRSimpType_GetMaxSimpLevel(swigCPtr);
    return ret;
  }

  public static SWIGTYPE_p_p_HConstFRSimpType CreateList(int size) {
    IntPtr cPtr = HCSMVOPINVOKE.HConstFRSimpType_CreateList(size);
    SWIGTYPE_p_p_HConstFRSimpType ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_HConstFRSimpType(cPtr, false);
    return ret;
  }

}
