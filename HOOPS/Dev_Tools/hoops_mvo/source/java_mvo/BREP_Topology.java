/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class BREP_Topology {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public BREP_Topology(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(BREP_Topology obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJMVOJNI.delete_BREP_Topology(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setM_FaceHash(SWIGTYPE_p_vhash_s value) {
    HJMVOJNI.BREP_Topology_m_FaceHash_set(swigCPtr, this, SWIGTYPE_p_vhash_s.getCPtr(value));
  }

  public SWIGTYPE_p_vhash_s getM_FaceHash() {
    long cPtr = HJMVOJNI.BREP_Topology_m_FaceHash_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_vhash_s(cPtr, false);
  }

  public void setM_EdgeHash(SWIGTYPE_p_vhash_s value) {
    HJMVOJNI.BREP_Topology_m_EdgeHash_set(swigCPtr, this, SWIGTYPE_p_vhash_s.getCPtr(value));
  }

  public SWIGTYPE_p_vhash_s getM_EdgeHash() {
    long cPtr = HJMVOJNI.BREP_Topology_m_EdgeHash_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_vhash_s(cPtr, false);
  }

  public void setM_VertexHash(SWIGTYPE_p_vhash_s value) {
    HJMVOJNI.BREP_Topology_m_VertexHash_set(swigCPtr, this, SWIGTYPE_p_vhash_s.getCPtr(value));
  }

  public SWIGTYPE_p_vhash_s getM_VertexHash() {
    long cPtr = HJMVOJNI.BREP_Topology_m_VertexHash_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_vhash_s(cPtr, false);
  }

  public void setM_CurrentFace(BREP_Face value) {
    HJMVOJNI.BREP_Topology_m_CurrentFace_set(swigCPtr, this, BREP_Face.getCPtr(value), value);
  }

  public BREP_Face getM_CurrentFace() {
    long cPtr = HJMVOJNI.BREP_Topology_m_CurrentFace_get(swigCPtr, this);
    return (cPtr == 0) ? null : new BREP_Face(cPtr, false);
  }

  public BREP_Topology() {
    this(HJMVOJNI.new_BREP_Topology(), true);
  }

  public BREP_Face AddFace(long facekey) {
    long cPtr = HJMVOJNI.BREP_Topology_AddFace(swigCPtr, this, facekey);
    return (cPtr == 0) ? null : new BREP_Face(cPtr, false);
  }

  public BREP_Face GetFace(long facekey) {
    long cPtr = HJMVOJNI.BREP_Topology_GetFace(swigCPtr, this, facekey);
    return (cPtr == 0) ? null : new BREP_Face(cPtr, false);
  }

  public BREP_Edge FindEdge(long edgeid) {
    long cPtr = HJMVOJNI.BREP_Topology_FindEdge(swigCPtr, this, edgeid);
    return (cPtr == 0) ? null : new BREP_Edge(cPtr, false);
  }

  public BREP_Edge AddEdge(long edgeid, long edgekey) {
    long cPtr = HJMVOJNI.BREP_Topology_AddEdge(swigCPtr, this, edgeid, edgekey);
    return (cPtr == 0) ? null : new BREP_Edge(cPtr, false);
  }

  public long AddVertex(long vertexid, HPoint vpos) {return HJMVOJNI.BREP_Topology_AddVertex(swigCPtr, this, vertexid, HPoint.getCPtr(vpos), vpos);}

  public long FindVertex(long vertexid) {return HJMVOJNI.BREP_Topology_FindVertex(swigCPtr, this, vertexid);}

  public BREP_Face GetCurrentFace() {
    long cPtr = HJMVOJNI.BREP_Topology_GetCurrentFace(swigCPtr, this);
    return (cPtr == 0) ? null : new BREP_Face(cPtr, false);
  }

}
