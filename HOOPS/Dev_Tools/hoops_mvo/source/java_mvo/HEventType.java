/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public final class HEventType {
  public final static HEventType HE_NoEvent = new HEventType("HE_NoEvent");
  public final static HEventType HE_LButtonDown = new HEventType("HE_LButtonDown");
  public final static HEventType HE_LButtonUp = new HEventType("HE_LButtonUp");
  public final static HEventType HE_LButtonDblClk = new HEventType("HE_LButtonDblClk");
  public final static HEventType HE_MButtonDown = new HEventType("HE_MButtonDown");
  public final static HEventType HE_MButtonUp = new HEventType("HE_MButtonUp");
  public final static HEventType HE_MButtonDblClk = new HEventType("HE_MButtonDblClk");
  public final static HEventType HE_RButtonDown = new HEventType("HE_RButtonDown");
  public final static HEventType HE_RButtonUp = new HEventType("HE_RButtonUp");
  public final static HEventType HE_RButtonDblClk = new HEventType("HE_RButtonDblClk");
  public final static HEventType HE_MouseMove = new HEventType("HE_MouseMove");
  public final static HEventType HE_MouseWheel = new HEventType("HE_MouseWheel");
  public final static HEventType HE_MouseWheelUp = new HEventType("HE_MouseWheelUp");
  public final static HEventType HE_MouseWheelDown = new HEventType("HE_MouseWheelDown");
  public final static HEventType HE_Timer = new HEventType("HE_Timer");
  public final static HEventType HE_KeyDown = new HEventType("HE_KeyDown");
  public final static HEventType HE_KeyUp = new HEventType("HE_KeyUp");
  public final static HEventType HE_Selection = new HEventType("HE_Selection");
  public final static HEventType HE_JoyStickTranslate = new HEventType("HE_JoyStickTranslate");
  public final static HEventType HE_JoyStickRotate = new HEventType("HE_JoyStickRotate");
  public final static HEventType HE_JoyStickButton = new HEventType("HE_JoyStickButton");
  public final static HEventType HE_TouchesDown = new HEventType("HE_TouchesDown");
  public final static HEventType HE_TouchesUp = new HEventType("HE_TouchesUp");
  public final static HEventType HE_TouchesMove = new HEventType("HE_TouchesMove");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static HEventType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + HEventType.class + " with value " + swigValue);
  }

  private HEventType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private HEventType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private HEventType(String swigName, HEventType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static HEventType[] swigValues = { HE_NoEvent, HE_LButtonDown, HE_LButtonUp, HE_LButtonDblClk, HE_MButtonDown, HE_MButtonUp, HE_MButtonDblClk, HE_RButtonDown, HE_RButtonUp, HE_RButtonDblClk, HE_MouseMove, HE_MouseWheel, HE_MouseWheelUp, HE_MouseWheelDown, HE_Timer, HE_KeyDown, HE_KeyUp, HE_Selection, HE_JoyStickTranslate, HE_JoyStickRotate, HE_JoyStickButton, HE_TouchesDown, HE_TouchesUp, HE_TouchesMove };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

