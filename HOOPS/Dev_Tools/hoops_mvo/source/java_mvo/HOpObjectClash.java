/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class HOpObjectClash extends HOpObjectTranslate {
  private long swigCPtr;

  public HOpObjectClash(long cPtr, boolean cMemoryOwn) {
    super(HJMVOJNI.HOpObjectClash_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(HOpObjectClash obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJMVOJNI.delete_HOpObjectClash(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJMVOJNI.HOpObjectClash_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJMVOJNI.HOpObjectClash_change_ownership(this, swigCPtr, true);
  }

  protected int IntersectPolyline(long key1, float[] transformed_points1) {
    return HJMVOJNI.HOpObjectClash_IntersectPolyline(swigCPtr, this, key1, transformed_points1);
  }

  protected void ProcessSelectionResults(long current_shell, float[] transformed_points) {
    HJMVOJNI.HOpObjectClash_ProcessSelectionResults__SWIG_0(swigCPtr, this, current_shell, transformed_points);
  }

  protected void ProcessSelectionResults(long current_shell) {
    HJMVOJNI.HOpObjectClash_ProcessSelectionResults__SWIG_1(swigCPtr, this, current_shell);
  }

  protected void ProcessSelectionResults() {
    HJMVOJNI.HOpObjectClash_ProcessSelectionResults__SWIG_2(swigCPtr, this);
  }

  protected int TestEnclosure(long current_shell_key, float[] transformed_points) {
    return HJMVOJNI.HOpObjectClash_TestEnclosure(swigCPtr, this, current_shell_key, transformed_points);
  }

  protected int GetScreenVolume(long seg, HPoint min, HPoint max) {
    return HJMVOJNI.HOpObjectClash_GetScreenVolume(swigCPtr, this, seg, HPoint.getCPtr(min), min, HPoint.getCPtr(max), max);
  }

  protected int SelectByScreenVolume(HSmartSelItem sel_item) {
    return (getClass() == HOpObjectClash.class) ? HJMVOJNI.HOpObjectClash_SelectByScreenVolume(swigCPtr, this, HSmartSelItem.getCPtr(sel_item), sel_item) : HJMVOJNI.HOpObjectClash_SelectByScreenVolumeSwigExplicitHOpObjectClash(swigCPtr, this, HSmartSelItem.getCPtr(sel_item), sel_item);
  }

  protected int SelectByWorldVolume(HSmartSelItem sel_item) {
    return (getClass() == HOpObjectClash.class) ? HJMVOJNI.HOpObjectClash_SelectByWorldVolume(swigCPtr, this, HSmartSelItem.getCPtr(sel_item), sel_item) : HJMVOJNI.HOpObjectClash_SelectByWorldVolumeSwigExplicitHOpObjectClash(swigCPtr, this, HSmartSelItem.getCPtr(sel_item), sel_item);
  }

  protected int SelectByEnclosure(HSmartSelItem sel_item) {
    return (getClass() == HOpObjectClash.class) ? HJMVOJNI.HOpObjectClash_SelectByEnclosure(swigCPtr, this, HSmartSelItem.getCPtr(sel_item), sel_item) : HJMVOJNI.HOpObjectClash_SelectByEnclosureSwigExplicitHOpObjectClash(swigCPtr, this, HSmartSelItem.getCPtr(sel_item), sel_item);
  }

  protected int SelectByShell(HSmartSelItem sel_item) {
    return (getClass() == HOpObjectClash.class) ? HJMVOJNI.HOpObjectClash_SelectByShell(swigCPtr, this, HSmartSelItem.getCPtr(sel_item), sel_item) : HJMVOJNI.HOpObjectClash_SelectByShellSwigExplicitHOpObjectClash(swigCPtr, this, HSmartSelItem.getCPtr(sel_item), sel_item);
  }

  protected void SetSelectMode(int mode) {
    HJMVOJNI.HOpObjectClash_SetSelectMode(swigCPtr, this, mode);
  }

  protected int GetWorldVolume(long seg, HPoint min, HPoint max) {
    return HJMVOJNI.HOpObjectClash_GetWorldVolume(swigCPtr, this, seg, HPoint.getCPtr(min), min, HPoint.getCPtr(max), max);
  }

  protected void GrabSelectionSet() {
    HJMVOJNI.HOpObjectClash_GrabSelectionSet(swigCPtr, this);
  }

  protected void RestoreSelectionSet() {
    HJMVOJNI.HOpObjectClash_RestoreSelectionSet(swigCPtr, this);
  }

  protected void setM_save_spriting_mode(boolean value) {
    HJMVOJNI.HOpObjectClash_m_save_spriting_mode_set(swigCPtr, this, value);
  }

  protected boolean getM_save_spriting_mode() {
    return HJMVOJNI.HOpObjectClash_m_save_spriting_mode_get(swigCPtr, this);
  }

  protected void setM_pClashSelection(HSelectionSet value) {
    HJMVOJNI.HOpObjectClash_m_pClashSelection_set(swigCPtr, this, HSelectionSet.getCPtr(value), value);
  }

  protected HSelectionSet getM_pClashSelection() {
    long cPtr = HJMVOJNI.HOpObjectClash_m_pClashSelection_get(swigCPtr, this);
    return (cPtr == 0) ? null : new HSelectionSet(cPtr, false);
  }

  protected void setM_SelectMode(int value) {
    HJMVOJNI.HOpObjectClash_m_SelectMode_set(swigCPtr, this, value);
  }

  protected int getM_SelectMode() {
    return HJMVOJNI.HOpObjectClash_m_SelectMode_get(swigCPtr, this);
  }

  protected void setM_IntersectPolylinesVisible(int value) {
    HJMVOJNI.HOpObjectClash_m_IntersectPolylinesVisible_set(swigCPtr, this, value);
  }

  protected int getM_IntersectPolylinesVisible() {
    return HJMVOJNI.HOpObjectClash_m_IntersectPolylinesVisible_get(swigCPtr, this);
  }

  protected void setM_TempSegKey(long value) {
    HJMVOJNI.HOpObjectClash_m_TempSegKey_set(swigCPtr, this, value);
  }

  protected long getM_TempSegKey() {return HJMVOJNI.HOpObjectClash_m_TempSegKey_get(swigCPtr, this);}

  protected void ClashDetect(HEventInfo hevent) {
    HJMVOJNI.HOpObjectClash_ClashDetect(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public HOpObjectClash(HBaseView view, int doRepeat, int doCapture) {
    this(HJMVOJNI.new_HOpObjectClash__SWIG_0(HBaseView.getCPtr(view), view, doRepeat, doCapture), true);
    HJMVOJNI.HOpObjectClash_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public HOpObjectClash(HBaseView view, int doRepeat) {
    this(HJMVOJNI.new_HOpObjectClash__SWIG_1(HBaseView.getCPtr(view), view, doRepeat), true);
    HJMVOJNI.HOpObjectClash_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public HOpObjectClash(HBaseView view) {
    this(HJMVOJNI.new_HOpObjectClash__SWIG_2(HBaseView.getCPtr(view), view), true);
    HJMVOJNI.HOpObjectClash_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public String GetName() {
    return (getClass() == HOpObjectClash.class) ? HJMVOJNI.HOpObjectClash_GetName(swigCPtr, this) : HJMVOJNI.HOpObjectClash_GetNameSwigExplicitHOpObjectClash(swigCPtr, this);
  }

  public int OnLButtonDown(HEventInfo hevent) {
    return (getClass() == HOpObjectClash.class) ? HJMVOJNI.HOpObjectClash_OnLButtonDown(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpObjectClash_OnLButtonDownSwigExplicitHOpObjectClash(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public int OnLButtonDownAndMove(HEventInfo hevent) {
    return (getClass() == HOpObjectClash.class) ? HJMVOJNI.HOpObjectClash_OnLButtonDownAndMove(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpObjectClash_OnLButtonDownAndMoveSwigExplicitHOpObjectClash(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public int OnLButtonUp(HEventInfo hevent) {
    return (getClass() == HOpObjectClash.class) ? HJMVOJNI.HOpObjectClash_OnLButtonUp(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpObjectClash_OnLButtonUpSwigExplicitHOpObjectClash(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public int OnKeyDown(HEventInfo hevent) {
    return (getClass() == HOpObjectClash.class) ? HJMVOJNI.HOpObjectClash_OnKeyDown(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpObjectClash_OnKeyDownSwigExplicitHOpObjectClash(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public HBaseOperator Clone() {
    long cPtr = (getClass() == HOpObjectClash.class) ? HJMVOJNI.HOpObjectClash_Clone(swigCPtr, this) : HJMVOJNI.HOpObjectClash_CloneSwigExplicitHOpObjectClash(swigCPtr, this);
    return (cPtr == 0) ? null : new HBaseOperator(cPtr, false);
  }

}
