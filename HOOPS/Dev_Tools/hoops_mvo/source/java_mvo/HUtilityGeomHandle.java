/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class HUtilityGeomHandle {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public HUtilityGeomHandle(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(HUtilityGeomHandle obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJMVOJNI.delete_HUtilityGeomHandle(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static void RegisterCallbacks() {
    HJMVOJNI.HUtilityGeomHandle_RegisterCallbacks();
  }

  public long Insert(HPoint position, boolean edges, int level) {return HJMVOJNI.HUtilityGeomHandle_Insert__SWIG_0(swigCPtr, this, HPoint.getCPtr(position), position, edges, level);}

  public long Insert(HPoint position, boolean edges) {return HJMVOJNI.HUtilityGeomHandle_Insert__SWIG_1(swigCPtr, this, HPoint.getCPtr(position), position, edges);}

  public long Insert(HPoint position) {return HJMVOJNI.HUtilityGeomHandle_Insert__SWIG_2(swigCPtr, this, HPoint.getCPtr(position), position);}

  public void SetupGeomHandleSegment(boolean edges) {
    HJMVOJNI.HUtilityGeomHandle_SetupGeomHandleSegment(swigCPtr, this, edges);
  }

  public void ConstrainToPlane(long handlekey, HPoint p1, HPoint p2, HPoint p3, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToPlane__SWIG_0(swigCPtr, this, handlekey, HPoint.getCPtr(p1), p1, HPoint.getCPtr(p2), p2, HPoint.getCPtr(p3), p3, HBaseView.getCPtr(view), view);
  }

  public void ConstrainToPlane(long handlekey, HPoint p1, HPoint p2, HPoint p3) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToPlane__SWIG_1(swigCPtr, this, handlekey, HPoint.getCPtr(p1), p1, HPoint.getCPtr(p2), p2, HPoint.getCPtr(p3), p3);
  }

  public void ConstrainToViewplane(long handlekey, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToViewplane__SWIG_0(swigCPtr, this, handlekey, HBaseView.getCPtr(view), view);
  }

  public void ConstrainToViewplane(long handlekey) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToViewplane__SWIG_1(swigCPtr, this, handlekey);
  }

  public void ConstrainToRay(long handlekey, HPoint p1, HPoint p2, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToRay__SWIG_0(swigCPtr, this, handlekey, HPoint.getCPtr(p1), p1, HPoint.getCPtr(p2), p2, HBaseView.getCPtr(view), view);
  }

  public void ConstrainToRay(long handlekey, HPoint p1, HPoint p2) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToRay__SWIG_1(swigCPtr, this, handlekey, HPoint.getCPtr(p1), p1, HPoint.getCPtr(p2), p2);
  }

  public void ConstrainToRotationVector(long handlekey, HPoint p1, HPoint p2, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToRotationVector__SWIG_0(swigCPtr, this, handlekey, HPoint.getCPtr(p1), p1, HPoint.getCPtr(p2), p2, HBaseView.getCPtr(view), view);
  }

  public void ConstrainToRotationVector(long handlekey, HPoint p1, HPoint p2) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToRotationVector__SWIG_1(swigCPtr, this, handlekey, HPoint.getCPtr(p1), p1, HPoint.getCPtr(p2), p2);
  }

  public void ConstrainToScale(long handlekey, HPoint p1, HPoint p2, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToScale__SWIG_0(swigCPtr, this, handlekey, HPoint.getCPtr(p1), p1, HPoint.getCPtr(p2), p2, HBaseView.getCPtr(view), view);
  }

  public void ConstrainToScale(long handlekey, HPoint p1, HPoint p2) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToScale__SWIG_1(swigCPtr, this, handlekey, HPoint.getCPtr(p1), p1, HPoint.getCPtr(p2), p2);
  }

  public void ConstrainToOnOff(long handlekey, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToOnOff__SWIG_0(swigCPtr, this, handlekey, HBaseView.getCPtr(view), view);
  }

  public void ConstrainToOnOff(long handlekey) {
    HJMVOJNI.HUtilityGeomHandle_ConstrainToOnOff__SWIG_1(swigCPtr, this, handlekey);
  }

  public void Move(long handlekey, HPoint newposition, long camerakey, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_Move__SWIG_0(swigCPtr, this, handlekey, HPoint.getCPtr(newposition), newposition, camerakey, HBaseView.getCPtr(view), view);
  }

  public void Move(long handlekey, HPoint newposition, long camerakey) {
    HJMVOJNI.HUtilityGeomHandle_Move__SWIG_1(swigCPtr, this, handlekey, HPoint.getCPtr(newposition), newposition, camerakey);
  }

  public void ShowBasePosition(long handlekey, HPoint bp) {
    HJMVOJNI.HUtilityGeomHandle_ShowBasePosition(swigCPtr, this, handlekey, HPoint.getCPtr(bp), bp);
  }

  public void GetConstraintParameters(long handlekey) {
    HJMVOJNI.HUtilityGeomHandle_GetConstraintParameters(swigCPtr, this, handlekey);
  }

  public void Rotate(long handlekey, float rotangle) {
    HJMVOJNI.HUtilityGeomHandle_Rotate(swigCPtr, this, handlekey, rotangle);
  }

  public float CalculatePlaneZ(long handlekey, HPoint point) {
    return HJMVOJNI.HUtilityGeomHandle_CalculatePlaneZ(swigCPtr, this, handlekey, HPoint.getCPtr(point), point);
  }

  public void AdjustPositionToRay(long handlekey, HPoint C, HPoint A, HPoint B) {
    HJMVOJNI.HUtilityGeomHandle_AdjustPositionToRay(swigCPtr, this, handlekey, HPoint.getCPtr(C), C, HPoint.getCPtr(A), A, HPoint.getCPtr(B), B);
  }

  public void CalculatePositionOnPlane(long handlekey, HPoint p, float a, float b, float c, float d) {
    HJMVOJNI.HUtilityGeomHandle_CalculatePositionOnPlane(swigCPtr, this, handlekey, HPoint.getCPtr(p), p, a, b, c, d);
  }

  public void AdjustPointToRay(long geomhandlekey, HPoint p, long camerasegment, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_AdjustPointToRay(swigCPtr, this, geomhandlekey, HPoint.getCPtr(p), p, camerasegment, HBaseView.getCPtr(view), view);
  }

  public void AdjustPositionToPlane(long handlekey, HPoint p, float a, float b, float c, float d, long camerakey) {
    HJMVOJNI.HUtilityGeomHandle_AdjustPositionToPlane(swigCPtr, this, handlekey, HPoint.getCPtr(p), p, a, b, c, d, camerakey);
  }

  public static long IsGeomHandle(long key) {return HJMVOJNI.HUtilityGeomHandle_IsGeomHandle(key);}

  public static boolean ContainsGeomHandles(long key) {
    return HJMVOJNI.HUtilityGeomHandle_ContainsGeomHandles(key);
  }

  public void CalculateTransformedPosition(long handlekey, HPoint t, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_CalculateTransformedPosition(swigCPtr, this, handlekey, HPoint.getCPtr(t), t, HBaseView.getCPtr(view), view);
  }

  public HConstrainType GetConstraintType(long handlekey) {
    return HConstrainType.swigToEnum(HJMVOJNI.HUtilityGeomHandle_GetConstraintType(swigCPtr, this, handlekey));
  }

  public void ShowHandle(long handlekey, float sf, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_ShowHandle__SWIG_0(swigCPtr, this, handlekey, sf, HBaseView.getCPtr(view), view);
  }

  public void ShowHandle(long handlekey, float sf) {
    HJMVOJNI.HUtilityGeomHandle_ShowHandle__SWIG_1(swigCPtr, this, handlekey, sf);
  }

  public void ShowHandle(long handlekey) {
    HJMVOJNI.HUtilityGeomHandle_ShowHandle__SWIG_2(swigCPtr, this, handlekey);
  }

  public void ResetHandle(long handlekey, float scale, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_ResetHandle__SWIG_0(swigCPtr, this, handlekey, scale, HBaseView.getCPtr(view), view);
  }

  public void ResetHandle(long handlekey, float scale) {
    HJMVOJNI.HUtilityGeomHandle_ResetHandle__SWIG_1(swigCPtr, this, handlekey, scale);
  }

  public void ResetHandle(long handlekey) {
    HJMVOJNI.HUtilityGeomHandle_ResetHandle__SWIG_2(swigCPtr, this, handlekey);
  }

  public void Scale(long handlekey, float scalex, float scaley, float scalez) {
    HJMVOJNI.HUtilityGeomHandle_Scale(swigCPtr, this, handlekey, scalex, scaley, scalez);
  }

  public void TurnOff(long handlekey) {
    HJMVOJNI.HUtilityGeomHandle_TurnOff(swigCPtr, this, handlekey);
  }

  public HPoint GetRotationAxis(long handlekey) {
    long cPtr = HJMVOJNI.HUtilityGeomHandle_GetRotationAxis(swigCPtr, this, handlekey);
    return (cPtr == 0) ? null : new HPoint(cPtr, false);
  }

  public static void ClearAllHandles(HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_ClearAllHandles(HBaseView.getCPtr(view), view);
  }

  public static long SelectHandle(HBaseView view, HPoint pos) {return HJMVOJNI.HUtilityGeomHandle_SelectHandle(HBaseView.getCPtr(view), view, HPoint.getCPtr(pos), pos);}

  public static long SelectObject(HBaseView view, HPoint pos, long oldkey, boolean exclude, float proximity) {return HJMVOJNI.HUtilityGeomHandle_SelectObject__SWIG_0(HBaseView.getCPtr(view), view, HPoint.getCPtr(pos), pos, oldkey, exclude, proximity);}

  public static long SelectObject(HBaseView view, HPoint pos, long oldkey, boolean exclude) {return HJMVOJNI.HUtilityGeomHandle_SelectObject__SWIG_1(HBaseView.getCPtr(view), view, HPoint.getCPtr(pos), pos, oldkey, exclude);}

  public static void SetupObject(long key, HBaseView view, float boxzoom) {
    HJMVOJNI.HUtilityGeomHandle_SetupObject__SWIG_0(key, HBaseView.getCPtr(view), view, boxzoom);
  }

  public static void SetupObject(long key, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_SetupObject__SWIG_1(key, HBaseView.getCPtr(view), view);
  }

  public static void SetupTextObject(long key, HBaseView view, float boxzoom, float scale) {
    HJMVOJNI.HUtilityGeomHandle_SetupTextObject__SWIG_0(key, HBaseView.getCPtr(view), view, boxzoom, scale);
  }

  public static void SetupTextObject(long key, HBaseView view, float boxzoom) {
    HJMVOJNI.HUtilityGeomHandle_SetupTextObject__SWIG_1(key, HBaseView.getCPtr(view), view, boxzoom);
  }

  public static void SetupTextObject(long key, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_SetupTextObject__SWIG_2(key, HBaseView.getCPtr(view), view);
  }

  public static void SetupCuttingPlane(long key, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_SetupCuttingPlane(key, HBaseView.getCPtr(view), view);
  }

  public static long SetupManipulator(long startkey, HBaseView view, HPoint mp, boolean AddNonUniformScale, boolean AddScale, boolean AddPlane, boolean AddAxismove, boolean AddAxisrotate, boolean AddViewplaneMove) {return HJMVOJNI.HUtilityGeomHandle_SetupManipulator__SWIG_0(startkey, HBaseView.getCPtr(view), view, HPoint.getCPtr(mp), mp, AddNonUniformScale, AddScale, AddPlane, AddAxismove, AddAxisrotate, AddViewplaneMove);}

  public static long SetupManipulator(long startkey, HBaseView view, HPoint mp, boolean AddNonUniformScale, boolean AddScale, boolean AddPlane, boolean AddAxismove, boolean AddAxisrotate) {return HJMVOJNI.HUtilityGeomHandle_SetupManipulator__SWIG_1(startkey, HBaseView.getCPtr(view), view, HPoint.getCPtr(mp), mp, AddNonUniformScale, AddScale, AddPlane, AddAxismove, AddAxisrotate);}

  public static long SetupManipulator(long startkey, HBaseView view, HPoint mp, boolean AddNonUniformScale, boolean AddScale, boolean AddPlane, boolean AddAxismove) {return HJMVOJNI.HUtilityGeomHandle_SetupManipulator__SWIG_2(startkey, HBaseView.getCPtr(view), view, HPoint.getCPtr(mp), mp, AddNonUniformScale, AddScale, AddPlane, AddAxismove);}

  public static long SetupManipulator(long startkey, HBaseView view, HPoint mp, boolean AddNonUniformScale, boolean AddScale, boolean AddPlane) {return HJMVOJNI.HUtilityGeomHandle_SetupManipulator__SWIG_3(startkey, HBaseView.getCPtr(view), view, HPoint.getCPtr(mp), mp, AddNonUniformScale, AddScale, AddPlane);}

  public static long SetupManipulator(long startkey, HBaseView view, HPoint mp, boolean AddNonUniformScale, boolean AddScale) {return HJMVOJNI.HUtilityGeomHandle_SetupManipulator__SWIG_4(startkey, HBaseView.getCPtr(view), view, HPoint.getCPtr(mp), mp, AddNonUniformScale, AddScale);}

  public static long SetupManipulator(long startkey, HBaseView view, HPoint mp, boolean AddNonUniformScale) {return HJMVOJNI.HUtilityGeomHandle_SetupManipulator__SWIG_5(startkey, HBaseView.getCPtr(view), view, HPoint.getCPtr(mp), mp, AddNonUniformScale);}

  public static long SetupManipulator(long startkey, HBaseView view, HPoint mp) {return HJMVOJNI.HUtilityGeomHandle_SetupManipulator__SWIG_6(startkey, HBaseView.getCPtr(view), view, HPoint.getCPtr(mp), mp);}

  public static void SetupCuttingPlaneManipulator(long startkey, HBaseView view, HPoint midpoint, boolean omit_rotate) {
    HJMVOJNI.HUtilityGeomHandle_SetupCuttingPlaneManipulator__SWIG_0(startkey, HBaseView.getCPtr(view), view, HPoint.getCPtr(midpoint), midpoint, omit_rotate);
  }

  public static void SetupCuttingPlaneManipulator(long startkey, HBaseView view, HPoint midpoint) {
    HJMVOJNI.HUtilityGeomHandle_SetupCuttingPlaneManipulator__SWIG_1(startkey, HBaseView.getCPtr(view), view, HPoint.getCPtr(midpoint), midpoint);
  }

  public static void SetupCuttingPlaneManipulator(long startkey, HBaseView view) {
    HJMVOJNI.HUtilityGeomHandle_SetupCuttingPlaneManipulator__SWIG_2(startkey, HBaseView.getCPtr(view), view);
  }

  public static long GetMMSegment(long handlekey) {return HJMVOJNI.HUtilityGeomHandle_GetMMSegment(handlekey);}

  public static void GetCenterPoint(long objectkey, HPoint centerpoint) {
    HJMVOJNI.HUtilityGeomHandle_GetCenterPoint(objectkey, HPoint.getCPtr(centerpoint), centerpoint);
  }

  public static void SetVisibilityForAll(long startkey, String visibility) {
    HJMVOJNI.HUtilityGeomHandle_SetVisibilityForAll(startkey, visibility);
  }

  public HUtilityGeomHandle() {
    this(HJMVOJNI.new_HUtilityGeomHandle(), true);
  }

}
