/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class HUtility {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public HUtility(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(HUtility obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJMVOJNI.delete_HUtility(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static float getPI() {
    return HJMVOJNI.HUtility_PI_get();
  }

  public static float getEH_Epsilon() {
    return HJMVOJNI.HUtility_EH_Epsilon_get();
  }

  public static void Order(HPoint one, HPoint two) {
    HJMVOJNI.HUtility_Order(HPoint.getCPtr(one), one, HPoint.getCPtr(two), two);
  }

  public static void Find_Relative_Path(long from_seg_key, long to_seg_key, StringBuffer path) {
    HJMVOJNI.HUtility_Find_Relative_Path(from_seg_key, to_seg_key, path);
  }

  public static float GetTime() {
    return HJMVOJNI.HUtility_GetTime();
  }

  public static void ClampPointToWindow(HPoint point) {
    HJMVOJNI.HUtility_ClampPointToWindow(HPoint.getCPtr(point), point);
  }

  public static long InsertBox(HPoint max, HPoint min) {return HJMVOJNI.HUtility_InsertBox(HPoint.getCPtr(max), max, HPoint.getCPtr(min), min);}

  public static long InsertWireframeBox(HPoint max, HPoint min) {return HJMVOJNI.HUtility_InsertWireframeBox(HPoint.getCPtr(max), max, HPoint.getCPtr(min), min);}

  public static void GenerateCuboidPoints(HPoint max, HPoint min, HPoint points) {
    HJMVOJNI.HUtility_GenerateCuboidPoints(HPoint.getCPtr(max), max, HPoint.getCPtr(min), min, HPoint.getCPtr(points), points);
  }

  public static long InsertRectangle(String seg, float x0, float y0, float x1, float y1, float z, boolean fill) {return HJMVOJNI.HUtility_InsertRectangle__SWIG_0(seg, x0, y0, x1, y1, z, fill);}

  public static long InsertRectangle(String seg, float x0, float y0, float x1, float y1, float z) {return HJMVOJNI.HUtility_InsertRectangle__SWIG_1(seg, x0, y0, x1, y1, z);}

  public static long InsertRectangle(String seg, float x0, float y0, float x1, float y1) {return HJMVOJNI.HUtility_InsertRectangle__SWIG_2(seg, x0, y0, x1, y1);}

  public static void InsertArrow(float stick_length, float tip_length, float stick_radius, float arrow_radius, String text, String stick_color, String tip_color, int num_sides, float tip_falloff, boolean reverse) {
    HJMVOJNI.HUtility_InsertArrow__SWIG_0(stick_length, tip_length, stick_radius, arrow_radius, text, stick_color, tip_color, num_sides, tip_falloff, reverse);
  }

  public static void InsertArrow(float stick_length, float tip_length, float stick_radius, float arrow_radius, String text, String stick_color, String tip_color, int num_sides, float tip_falloff) {
    HJMVOJNI.HUtility_InsertArrow__SWIG_1(stick_length, tip_length, stick_radius, arrow_radius, text, stick_color, tip_color, num_sides, tip_falloff);
  }

  public static void InsertArrow(float stick_length, float tip_length, float stick_radius, float arrow_radius, String text, String stick_color, String tip_color, int num_sides) {
    HJMVOJNI.HUtility_InsertArrow__SWIG_2(stick_length, tip_length, stick_radius, arrow_radius, text, stick_color, tip_color, num_sides);
  }

  public static void InsertArrow(float stick_length, float tip_length, float stick_radius, float arrow_radius, String text, String stick_color, String tip_color) {
    HJMVOJNI.HUtility_InsertArrow__SWIG_3(stick_length, tip_length, stick_radius, arrow_radius, text, stick_color, tip_color);
  }

  public static void ComputeDoublePrecisionCrossProduct(double[] vector1, double[] vector2, double[] up) {
    HJMVOJNI.HUtility_ComputeDoublePrecisionCrossProduct(vector1, vector2, up);
  }

  public static double ComputeDoublePrecisionDotProduct(double[] vector1, double[] vector2) {
    return HJMVOJNI.HUtility_ComputeDoublePrecisionDotProduct(vector1, vector2);
  }

  public static double ComputeDoublePrecisionVectorLength(double[] vector1) {
    return HJMVOJNI.HUtility_ComputeDoublePrecisionVectorLength(vector1);
  }

  public static void GetViewplaneVectors(long segment_key, double[] view, double[] up) {
    HJMVOJNI.HUtility_GetViewplaneVectors(segment_key, view, up);
  }

  public static void NormalizeDoublePrecisionVector(double[] vector1) {
    HJMVOJNI.HUtility_NormalizeDoublePrecisionVector(vector1);
  }

  public static boolean PointsEqual(HPoint point1, HPoint point2) {
    return HJMVOJNI.HUtility_PointsEqual(HPoint.getCPtr(point1), point1, HPoint.getCPtr(point2), point2);
  }

  public static boolean CreateAxisCircle(HPoint center, float radius, int axis, boolean convert) {
    return HJMVOJNI.HUtility_CreateAxisCircle__SWIG_0(HPoint.getCPtr(center), center, radius, axis, convert);
  }

  public static boolean CreateAxisCircle(HPoint center, float radius, int axis) {
    return HJMVOJNI.HUtility_CreateAxisCircle__SWIG_1(HPoint.getCPtr(center), center, radius, axis);
  }

  public static void RotateToVector(HPoint start, HPoint end, boolean doTranslation) {
    HJMVOJNI.HUtility_RotateToVector__SWIG_0(HPoint.getCPtr(start), start, HPoint.getCPtr(end), end, doTranslation);
  }

  public static void RotateToVector(HPoint start, HPoint end) {
    HJMVOJNI.HUtility_RotateToVector__SWIG_1(HPoint.getCPtr(start), start, HPoint.getCPtr(end), end);
  }

  public static void SmoothTransition(HPoint co, HPoint to, HPoint uo, float fieldwidtho, float fieldheighto, HPoint cn, HPoint tn, HPoint un, float fieldwidthn, float fieldheightn, HBaseView view) {
    HJMVOJNI.HUtility_SmoothTransition__SWIG_0(HPoint.getCPtr(co), co, HPoint.getCPtr(to), to, HPoint.getCPtr(uo), uo, fieldwidtho, fieldheighto, HPoint.getCPtr(cn), cn, HPoint.getCPtr(tn), tn, HPoint.getCPtr(un), un, fieldwidthn, fieldheightn, HBaseView.getCPtr(view), view);
  }

  public static void SmoothTransition(HCamera old_camera, HCamera new_camera, HBaseView view) {
    HJMVOJNI.HUtility_SmoothTransition__SWIG_1(HCamera.getCPtr(old_camera), old_camera, HCamera.getCPtr(new_camera), new_camera, HBaseView.getCPtr(view), view);
  }

  public static boolean CamerasEqual(HCamera camera1, HCamera camera2) {
    return HJMVOJNI.HUtility_CamerasEqual(HCamera.getCPtr(camera1), camera1, HCamera.getCPtr(camera2), camera2);
  }

  public static void ComputeVectorToVectorRotationMatrix(float[] matrix, HPoint v1, HPoint v2) {
    HJMVOJNI.HUtility_ComputeVectorToVectorRotationMatrix(matrix, HPoint.getCPtr(v1), v1, HPoint.getCPtr(v2), v2);
  }

  public static boolean ExtractRGB(StringBuffer text, float[] r, float[] g, float[] b) {
    return HJMVOJNI.HUtility_ExtractRGB(text, r, g, b);
  }

  public static void TransitionQuaternion(float[] quat_old, float[] quat_new, float t, float[] qt) {
    HJMVOJNI.HUtility_TransitionQuaternion(quat_old, quat_new, t, qt);
  }

  public static void MatrixToQuaternion(float[] matrix, float[] quaternion) {
    HJMVOJNI.HUtility_MatrixToQuaternion(matrix, quaternion);
  }

  public static void QuaternionToMatrix(float[] quaternion, float[] matrix) {
    HJMVOJNI.HUtility_QuaternionToMatrix(quaternion, matrix);
  }

  public static void SmoothQuaternionTransition(HBaseView m_pView, StringBuffer old_seg, StringBuffer new_seg, int num_of_transitions) {
    HJMVOJNI.HUtility_SmoothQuaternionTransition(HBaseView.getCPtr(m_pView), m_pView, old_seg, new_seg, num_of_transitions);
  }

  public static void SmoothMatrixTransition(HBaseView m_pView, long seg_key, float[] new_matrix) {
    HJMVOJNI.HUtility_SmoothMatrixTransition(HBaseView.getCPtr(m_pView), m_pView, seg_key, new_matrix);
  }

  public static void MultiSmoothTransitions(HBaseView m_pView, int num_keys, long[] seg_key, float[] new_matrix, HCamera new_camera) {
    HJMVOJNI.HUtility_MultiSmoothTransitions__SWIG_0(HBaseView.getCPtr(m_pView), m_pView, num_keys, seg_key, new_matrix, HCamera.getCPtr(new_camera), new_camera);
  }

  public static void MultiSmoothTransitions(HBaseView m_pView, int num_keys, long[] seg_key, float[] new_matrix) {
    HJMVOJNI.HUtility_MultiSmoothTransitions__SWIG_1(HBaseView.getCPtr(m_pView), m_pView, num_keys, seg_key, new_matrix);
  }

  public static HPoint GetCentroid(long seg_key) {
    return new HPoint(HJMVOJNI.HUtility_GetCentroid(seg_key), true);
  }

  public static HPoint GetTransformedCentroid(long seg_key, float[] matrix) {
    return new HPoint(HJMVOJNI.HUtility_GetTransformedCentroid__SWIG_0(seg_key, matrix), true);
  }

  public static HPoint GetTransformedCentroid(long seg_key) {
    return new HPoint(HJMVOJNI.HUtility_GetTransformedCentroid__SWIG_1(seg_key), true);
  }

  public static void URIencode(String in_string, SWIGTYPE_p_MVO_POINTER_SIZED_UINT n, StringBuffer out_buffer) {
    HJMVOJNI.HUtility_URIencode(in_string, SWIGTYPE_p_MVO_POINTER_SIZED_UINT.getCPtr(n), out_buffer);
  }

  public static void URIdecode(String in_string, StringBuffer out_buffer, SWIGTYPE_p_MVO_POINTER_SIZED_UINT n) {
    HJMVOJNI.HUtility_URIdecode(in_string, out_buffer, SWIGTYPE_p_MVO_POINTER_SIZED_UINT.getCPtr(n));
  }

  public static void GetCameraFromMatrix(float[] matrix, HPoint target, HPoint position, HPoint up_vector, HPoint translation) {
    HJMVOJNI.HUtility_GetCameraFromMatrix(matrix, HPoint.getCPtr(target), target, HPoint.getCPtr(position), position, HPoint.getCPtr(up_vector), up_vector, HPoint.getCPtr(translation), translation);
  }

  public static void GetMatrixFromCamera(HPoint target, HPoint position, HPoint up_vector, HPoint translation, float[] matrix) {
    HJMVOJNI.HUtility_GetMatrixFromCamera(HPoint.getCPtr(target), target, HPoint.getCPtr(position), position, HPoint.getCPtr(up_vector), up_vector, HPoint.getCPtr(translation), translation, matrix);
  }

  public static void GetCameraFromGLFrustum(double left, double right, double bottom, double top, double near_z, double far_z, boolean perspective, HPoint pos, HPoint target, HPoint up, StringBuffer projection, double[] width, double[] height, double[] near_limit) {
    HJMVOJNI.HUtility_GetCameraFromGLFrustum(left, right, bottom, top, near_z, far_z, perspective, HPoint.getCPtr(pos), pos, HPoint.getCPtr(target), target, HPoint.getCPtr(up), up, projection, width, height, near_limit);
  }

  public static boolean PushAttribute(String attName) {
    return HJMVOJNI.HUtility_PushAttribute__SWIG_0(attName);
  }

  public static void PushAttribute(String attName, String attText) {
    HJMVOJNI.HUtility_PushAttribute__SWIG_1(attName, attText);
  }

  public static boolean PopAttribute(String attName) {
    return HJMVOJNI.HUtility_PopAttribute(attName);
  }

  public static boolean ModifyPushedAttribute(String attName, String newStyle) {
    return HJMVOJNI.HUtility_ModifyPushedAttribute(attName, newStyle);
  }

  public static boolean ShowPushedAttribute(String attName, HUserOptions attText) {
    return HJMVOJNI.HUtility_ShowPushedAttribute(attName, HUserOptions.getCPtr(attText), attText);
  }

  public static void Recursive_Merge_Shells(HShell total_info, HShell max_info, boolean do_recurse, boolean delete_orig_shells, boolean insert_null_lods) {
    HJMVOJNI.HUtility_Recursive_Merge_Shells__SWIG_0(HShell.getCPtr(total_info), total_info, HShell.getCPtr(max_info), max_info, do_recurse, delete_orig_shells, insert_null_lods);
  }

  public static void Recursive_Merge_Shells(HShell total_info, HShell max_info, boolean do_recurse, boolean delete_orig_shells) {
    HJMVOJNI.HUtility_Recursive_Merge_Shells__SWIG_1(HShell.getCPtr(total_info), total_info, HShell.getCPtr(max_info), max_info, do_recurse, delete_orig_shells);
  }

  public static void Recursive_Merge_Shells(HShell total_info, HShell max_info, boolean do_recurse) {
    HJMVOJNI.HUtility_Recursive_Merge_Shells__SWIG_2(HShell.getCPtr(total_info), total_info, HShell.getCPtr(max_info), max_info, do_recurse);
  }

  public static long Merge_Shells(boolean do_recurse, boolean delete_orig_shells, boolean optimize_shell, boolean generate_regions) {return HJMVOJNI.HUtility_Merge_Shells__SWIG_0(do_recurse, delete_orig_shells, optimize_shell, generate_regions);}

  public static long Merge_Shells(boolean do_recurse, boolean delete_orig_shells, boolean optimize_shell) {return HJMVOJNI.HUtility_Merge_Shells__SWIG_1(do_recurse, delete_orig_shells, optimize_shell);}

  public static long Merge_Shells(boolean do_recurse, boolean delete_orig_shells) {return HJMVOJNI.HUtility_Merge_Shells__SWIG_2(do_recurse, delete_orig_shells);}

  public static long Merge_Shells(boolean do_recurse) {return HJMVOJNI.HUtility_Merge_Shells__SWIG_3(do_recurse);}

  public static long Merge_Shells_Generate_Regions(int num_shells, long[] shell_keys, boolean delete_orig_shells) {return HJMVOJNI.HUtility_Merge_Shells_Generate_Regions__SWIG_0(num_shells, shell_keys, delete_orig_shells);}

  public static long Merge_Shells_Generate_Regions(int num_shells, long[] shell_keys) {return HJMVOJNI.HUtility_Merge_Shells_Generate_Regions__SWIG_1(num_shells, shell_keys);}

  public static void Generate_LODs(boolean do_recurse, boolean delete_orig_shells, boolean insert_null_lods, int n_lod_levels, float reduction_ratio) {
    HJMVOJNI.HUtility_Generate_LODs__SWIG_0(do_recurse, delete_orig_shells, insert_null_lods, n_lod_levels, reduction_ratio);
  }

  public static void Generate_LODs(boolean do_recurse, boolean delete_orig_shells, boolean insert_null_lods, int n_lod_levels) {
    HJMVOJNI.HUtility_Generate_LODs__SWIG_1(do_recurse, delete_orig_shells, insert_null_lods, n_lod_levels);
  }

  public static void Generate_LODs(boolean do_recurse, boolean delete_orig_shells, boolean insert_null_lods) {
    HJMVOJNI.HUtility_Generate_LODs__SWIG_2(do_recurse, delete_orig_shells, insert_null_lods);
  }

  public static void Generate_LODs(boolean do_recurse, boolean delete_orig_shells) {
    HJMVOJNI.HUtility_Generate_LODs__SWIG_3(do_recurse, delete_orig_shells);
  }

  public static void Generate_LODs(boolean do_recurse) {
    HJMVOJNI.HUtility_Generate_LODs__SWIG_4(do_recurse);
  }

  public static void Generate_LODs() {
    HJMVOJNI.HUtility_Generate_LODs__SWIG_5();
  }

  public static boolean Segment_Shell_Allocate(HShell total_info, HShell max_info, boolean do_recurse) {
    return HJMVOJNI.HUtility_Segment_Shell_Allocate(HShell.getCPtr(total_info), total_info, HShell.getCPtr(max_info), max_info, do_recurse);
  }

  public static void Shell_Search(HShell total_info, HShell max_info, boolean do_recurse) {
    HJMVOJNI.HUtility_Shell_Search(HShell.getCPtr(total_info), total_info, HShell.getCPtr(max_info), max_info, do_recurse);
  }

  public static void OptimizeSegmentTree(long old_seg_key, long[] new_seg_key, boolean transform_shells, boolean merge_shells, boolean create_shell_regions) {
    HJMVOJNI.HUtility_OptimizeSegmentTree__SWIG_0(old_seg_key, new_seg_key, transform_shells, merge_shells, create_shell_regions);
  }

  public static void OptimizeSegmentTree(long old_seg_key, long[] new_seg_key, boolean transform_shells, boolean merge_shells) {
    HJMVOJNI.HUtility_OptimizeSegmentTree__SWIG_1(old_seg_key, new_seg_key, transform_shells, merge_shells);
  }

  public static void OptimizeSegmentTree(long old_seg_key, long[] new_seg_key, boolean transform_shells) {
    HJMVOJNI.HUtility_OptimizeSegmentTree__SWIG_2(old_seg_key, new_seg_key, transform_shells);
  }

  public static void OptimizeSegmentTree(long old_seg_key, long[] new_seg_key) {
    HJMVOJNI.HUtility_OptimizeSegmentTree__SWIG_3(old_seg_key, new_seg_key);
  }

  public static void CountShellData(long shell_key, int[] faces, int[] vertices, int[] triangles, int[] tristrips) {
    HJMVOJNI.HUtility_CountShellData__SWIG_0(shell_key, faces, vertices, triangles, tristrips);
  }

  public static void CountShellData(long shell_key, int[] faces, int[] vertices, int[] triangles) {
    HJMVOJNI.HUtility_CountShellData__SWIG_1(shell_key, faces, vertices, triangles);
  }

  public static void FindFileNameExtension(String filename_in, StringBuffer ext_out, int size) {
    HJMVOJNI.HUtility_FindFileNameExtension__SWIG_0(filename_in, ext_out, size);
  }

  public static void FindFileNameExtension(String filename_in, StringBuffer ext_out) {
    HJMVOJNI.HUtility_FindFileNameExtension__SWIG_1(filename_in, ext_out);
  }

  public static void FindFileNameExtension(SWIGTYPE_p_wchar_t filename_in, SWIGTYPE_p_wchar_t ext_out, int size) {
    HJMVOJNI.HUtility_FindFileNameExtension__SWIG_2(SWIGTYPE_p_wchar_t.getCPtr(filename_in), SWIGTYPE_p_wchar_t.getCPtr(ext_out), size);
  }

  public static void FindFileNameExtension(SWIGTYPE_p_wchar_t filename_in, SWIGTYPE_p_wchar_t ext_out) {
    HJMVOJNI.HUtility_FindFileNameExtension__SWIG_3(SWIGTYPE_p_wchar_t.getCPtr(filename_in), SWIGTYPE_p_wchar_t.getCPtr(ext_out));
  }

  public static void FindUnicodeFileNameExtension(int[] filename_in, StringBuffer ext_out) {
    HJMVOJNI.HUtility_FindUnicodeFileNameExtension(filename_in, ext_out);
  }

  public static void FindFileNameAndDirectory(String filename_in, StringBuffer dir_out, StringBuffer filename_out) {
    HJMVOJNI.HUtility_FindFileNameAndDirectory__SWIG_0(filename_in, dir_out, filename_out);
  }

  public static void FindFileNameAndDirectory(SWIGTYPE_p_wchar_t filename_in, SWIGTYPE_p_wchar_t dir_out, SWIGTYPE_p_wchar_t filename_out) {
    HJMVOJNI.HUtility_FindFileNameAndDirectory__SWIG_1(SWIGTYPE_p_wchar_t.getCPtr(filename_in), SWIGTYPE_p_wchar_t.getCPtr(dir_out), SWIGTYPE_p_wchar_t.getCPtr(filename_out));
  }

  public static String extra_pointer_format() {
    return HJMVOJNI.HUtility_extra_pointer_format();
  }

  public static long CreateScaleIndependentSegment(String segname, boolean SetCallback) {return HJMVOJNI.HUtility_CreateScaleIndependentSegment__SWIG_0(segname, SetCallback);}

  public static long CreateScaleIndependentSegment(String segname) {return HJMVOJNI.HUtility_CreateScaleIndependentSegment__SWIG_1(segname);}

  public static long GetScaleIndependentGeomSegmentKey(long segkey) {return HJMVOJNI.HUtility_GetScaleIndependentGeomSegmentKey(segkey);}

  public static void SetScaleIndependentGeomPosition(long segkey, float x, float y, float z) {
    HJMVOJNI.HUtility_SetScaleIndependentGeomPosition(segkey, x, y, z);
  }

  public static void GetScaleIndependentGeomPosition(long segkey, float[] x, float[] y, float[] z) {
    HJMVOJNI.HUtility_GetScaleIndependentGeomPosition(segkey, x, y, z);
  }

  public static void RegisterCallbacks() {
    HJMVOJNI.HUtility_RegisterCallbacks();
  }

  public static boolean IsModelKey(long modelkey, long objectkey) {
    return HJMVOJNI.HUtility_IsModelKey(modelkey, objectkey);
  }

  public static long UserOptionExists(long key, String attrib, StringBuffer result) {return HJMVOJNI.HUtility_UserOptionExists(key, attrib, result);}

  public static void InsertRotatedArrow(float stick_length, float tip_length, float stick_radius, float tip_radius, float distance, int adelta, float rotang, String stick_color, String tip_color, int num_sides, float tip_falloff, boolean reverse) {
    HJMVOJNI.HUtility_InsertRotatedArrow(stick_length, tip_length, stick_radius, tip_radius, distance, adelta, rotang, stick_color, tip_color, num_sides, tip_falloff, reverse);
  }

  public static int CalculateKeyPath(long startkey, HBaseView view, long[] keyarray, int maxarray) {
    return HJMVOJNI.HUtility_CalculateKeyPath(startkey, HBaseView.getCPtr(view), view, keyarray, maxarray);
  }

  public static boolean SegmentExists(String segment) {
    return HJMVOJNI.HUtility_SegmentExists(segment);
  }

  public static void UnsetAttributes() {
    HJMVOJNI.HUtility_UnsetAttributes();
  }

  public static int IsChildOf(long owner, long child, long[] klist) {
    return HJMVOJNI.HUtility_IsChildOf__SWIG_0(owner, child, klist);
  }

  public static int IsChildOf(long owner, long child) {
    return HJMVOJNI.HUtility_IsChildOf__SWIG_1(owner, child);
  }

  public static boolean IsIdentityMatrix(float[] matrix) {
    return HJMVOJNI.HUtility_IsIdentityMatrix(matrix);
  }

  public static void ComputeShellNormal(long skey, HPoint tnormal) {
    HJMVOJNI.HUtility_ComputeShellNormal(skey, HPoint.getCPtr(tnormal), tnormal);
  }

  public static long SelectUnderCursor(HBaseView view, float x, float y, boolean doSelection, boolean DeSelect) {return HJMVOJNI.HUtility_SelectUnderCursor__SWIG_0(HBaseView.getCPtr(view), view, x, y, doSelection, DeSelect);}

  public static long SelectUnderCursor(HBaseView view, float x, float y, boolean doSelection) {return HJMVOJNI.HUtility_SelectUnderCursor__SWIG_1(HBaseView.getCPtr(view), view, x, y, doSelection);}

  public static long SelectUnderCursor(HBaseView view, float x, float y) {return HJMVOJNI.HUtility_SelectUnderCursor__SWIG_2(HBaseView.getCPtr(view), view, x, y);}

  public static long SmartSelectUnderCursor(HBaseView view, float x, float y, boolean doSelection, boolean DeSelect) {return HJMVOJNI.HUtility_SmartSelectUnderCursor__SWIG_0(HBaseView.getCPtr(view), view, x, y, doSelection, DeSelect);}

  public static long SmartSelectUnderCursor(HBaseView view, float x, float y, boolean doSelection) {return HJMVOJNI.HUtility_SmartSelectUnderCursor__SWIG_1(HBaseView.getCPtr(view), view, x, y, doSelection);}

  public static long SmartSelectUnderCursor(HBaseView view, float x, float y) {return HJMVOJNI.HUtility_SmartSelectUnderCursor__SWIG_2(HBaseView.getCPtr(view), view, x, y);}

  public static boolean ShowOneHeuristic(String type, StringBuffer res) {
    return HJMVOJNI.HUtility_ShowOneHeuristic__SWIG_0(type, res);
  }

  public static boolean ShowOneHeuristic(String type) {
    return HJMVOJNI.HUtility_ShowOneHeuristic__SWIG_1(type);
  }

  public static boolean ShowOneRenderingOption(String type, StringBuffer res) {
    return HJMVOJNI.HUtility_ShowOneRenderingOption__SWIG_0(type, res);
  }

  public static boolean ShowOneRenderingOption(String type) {
    return HJMVOJNI.HUtility_ShowOneRenderingOption__SWIG_1(type);
  }

  public static float EaseInEaseOut(float t, float a, float b, float c) {
    return HJMVOJNI.HUtility_EaseInEaseOut(t, a, b, c);
  }

  public static void UnwindIncludes(long[] key) {
    HJMVOJNI.HUtility_UnwindIncludes__SWIG_0(key);
  }

  public static void UnwindIncludes(long[] newkey, long[] keys, int count) {
    HJMVOJNI.HUtility_UnwindIncludes__SWIG_1(newkey, keys, count);
  }

  public static boolean SafeSetUserOption(String opt) {
    return HJMVOJNI.HUtility_SafeSetUserOption(opt);
  }

  public static boolean SafeShowUserOption(StringBuffer opt) {
    return HJMVOJNI.HUtility_SafeShowUserOption(opt);
  }

  public static void ProjectShell(long shellkey) {
    HJMVOJNI.HUtility_ProjectShell(shellkey);
  }

  public static long MergeShells(long shell1, long shell2) {return HJMVOJNI.HUtility_MergeShells(shell1, shell2);}

  public static void ShowModellingMatrix(float[] segment_modelling_matrix) {
    HJMVOJNI.HUtility_ShowModellingMatrix(segment_modelling_matrix);
  }

  public static void ConvertLocalPixelsToLocalWindow(HBaseView view, HPoint in_system, HPoint out_system) {
    HJMVOJNI.HUtility_ConvertLocalPixelsToLocalWindow__SWIG_0(HBaseView.getCPtr(view), view, HPoint.getCPtr(in_system), in_system, HPoint.getCPtr(out_system), out_system);
  }

  public static void ConvertLocalPixelsToLocalWindow(HBaseView view, HPoint in_system) {
    HJMVOJNI.HUtility_ConvertLocalPixelsToLocalWindow__SWIG_1(HBaseView.getCPtr(view), view, HPoint.getCPtr(in_system), in_system);
  }

  public static long GrabSegment(long key) {return HJMVOJNI.HUtility_GrabSegment(key);}

  public static void RenameSegment(long segkey, String newname) {
    HJMVOJNI.HUtility_RenameSegment(segkey, newname);
  }

  public static void InterpolateNormalAlongEdge(HPoint p1, HPoint n1, HPoint p2, HPoint n2, HPoint p3, HPoint n3) {
    HJMVOJNI.HUtility_InterpolateNormalAlongEdge(HPoint.getCPtr(p1), p1, HPoint.getCPtr(n1), n1, HPoint.getCPtr(p2), p2, HPoint.getCPtr(n2), n2, HPoint.getCPtr(p3), p3, HPoint.getCPtr(n3), n3);
  }

  public static void ShowNormals(long shellkey, float normallength) {
    HJMVOJNI.HUtility_ShowNormals(shellkey, normallength);
  }

  public static boolean IsSegmentKey(long key) {
    return HJMVOJNI.HUtility_IsSegmentKey(key);
  }

  public static int FindContents(long[] key) {
    return HJMVOJNI.HUtility_FindContents(key);
  }

  public static int CalculateMajorAxis(HBaseView view) {
    return HJMVOJNI.HUtility_CalculateMajorAxis(HBaseView.getCPtr(view), view);
  }

  public static long FindOneObject(String type, boolean l) {return HJMVOJNI.HUtility_FindOneObject__SWIG_0(type, l);}

  public static long FindOneObject(String type) {return HJMVOJNI.HUtility_FindOneObject__SWIG_1(type);}

  public static void CloseAllSegments(long endkey) {
    HJMVOJNI.HUtility_CloseAllSegments__SWIG_0(endkey);
  }

  public static void CloseAllSegments() {
    HJMVOJNI.HUtility_CloseAllSegments__SWIG_1();
  }

  public static void ReadjustTarget(HBaseView view) {
    HJMVOJNI.HUtility_ReadjustTarget(HBaseView.getCPtr(view), view);
  }

  public static boolean GetAllowAnimation(long key) {
    return HJMVOJNI.HUtility_GetAllowAnimation(key);
  }

  public static void SuppressAnimation() {
    HJMVOJNI.HUtility_SuppressAnimation();
  }

  public static int FindFaceByIndex(int findex, int[] flist, int flen) {
    return HJMVOJNI.HUtility_FindFaceByIndex(findex, flist, flen);
  }

  public static boolean ShowOneUserOption(String option, StringBuffer res) {
    return HJMVOJNI.HUtility_ShowOneUserOption(option, res);
  }

  public static long GetNextRenumberedKey(HBaseView view) {return HJMVOJNI.HUtility_GetNextRenumberedKey(HBaseView.getCPtr(view), view);}

  public static void NameSegments(long[] key, HBaseView view) {
    HJMVOJNI.HUtility_NameSegments(key, HBaseView.getCPtr(view), view);
  }

  public static void MoveToTemp(long movekey, long tempkey) {
    HJMVOJNI.HUtility_MoveToTemp(movekey, tempkey);
  }

  public static void ShowContentsWithPath(String entitytypes, SWIGTYPE_p_p_vlist_s ret_pathlist, boolean storePath, boolean includeIncludes, boolean filterIncludes) {
    HJMVOJNI.HUtility_ShowContentsWithPath__SWIG_0(entitytypes, SWIGTYPE_p_p_vlist_s.getCPtr(ret_pathlist), storePath, includeIncludes, filterIncludes);
  }

  public static void ShowContentsWithPath(String entitytypes, SWIGTYPE_p_p_vlist_s ret_pathlist, boolean storePath, boolean includeIncludes) {
    HJMVOJNI.HUtility_ShowContentsWithPath__SWIG_1(entitytypes, SWIGTYPE_p_p_vlist_s.getCPtr(ret_pathlist), storePath, includeIncludes);
  }

  public static void ShowContentsWithPath(String entitytypes, SWIGTYPE_p_p_vlist_s ret_pathlist, boolean storePath) {
    HJMVOJNI.HUtility_ShowContentsWithPath__SWIG_2(entitytypes, SWIGTYPE_p_p_vlist_s.getCPtr(ret_pathlist), storePath);
  }

  public static void ShowContentsWithPath(String entitytypes, SWIGTYPE_p_p_vlist_s ret_pathlist) {
    HJMVOJNI.HUtility_ShowContentsWithPath__SWIG_3(entitytypes, SWIGTYPE_p_p_vlist_s.getCPtr(ret_pathlist));
  }

  public static int ustrlen(int[] text) {
    return HJMVOJNI.HUtility_ustrlen(text);
  }

  public static boolean RLECompress(int in_len, short[] in_buf, int[] out_len, short[] out_buf) {
    return HJMVOJNI.HUtility_RLECompress(in_len, in_buf, out_len, out_buf);
  }

  public static boolean ZlibCompress(int in_len, short[] in_buf, int[] out_len, short[] out_buf) {
    return HJMVOJNI.HUtility_ZlibCompress(in_len, in_buf, out_len, out_buf);
  }

  public static boolean ZlibDecompress(int in_len, short[] in_buf, int[] out_len, short[] out_buf) {
    return HJMVOJNI.HUtility_ZlibDecompress(in_len, in_buf, out_len, out_buf);
  }

  public static boolean BuildIncludePath(long objectkey, long[] includelist, int ilength, long[] fullpath, int[] fplength, long matchkey) {
    return HJMVOJNI.HUtility_BuildIncludePath__SWIG_0(objectkey, includelist, ilength, fullpath, fplength, matchkey);
  }

  public static boolean BuildIncludePath(long objectkey, long[] includelist, int ilength, long[] fullpath, int[] fplength) {
    return HJMVOJNI.HUtility_BuildIncludePath__SWIG_1(objectkey, includelist, ilength, fullpath, fplength);
  }

  public static void BuildIncludePathFromSelection(HSmartSelItem sitem, int[] plen, long[] fullpath) {
    HJMVOJNI.HUtility_BuildIncludePathFromSelection(HSmartSelItem.getCPtr(sitem), sitem, plen, fullpath);
  }

  public static void MakeViewSnapshot(HBaseView view, int width, int height, SWIGTYPE_p_p_char data) {
    HJMVOJNI.HUtility_MakeViewSnapshot__SWIG_0(HBaseView.getCPtr(view), view, width, height, SWIGTYPE_p_p_char.getCPtr(data));
  }

  public static void MakeViewSnapshot(HBaseView view, long image_key) {
    HJMVOJNI.HUtility_MakeViewSnapshot__SWIG_1(HBaseView.getCPtr(view), view, image_key);
  }

  public static int ConstrainToVector(float[] matrix_in, HPoint vector, float[] matrix_out) {
    return HJMVOJNI.HUtility_ConstrainToVector(matrix_in, HPoint.getCPtr(vector), vector, matrix_out);
  }

  public static void Camera_To_Transform(HCamera camera, float[] pos, float[] projection_matrix, float[] complete_matrix) {
    HJMVOJNI.HUtility_Camera_To_Transform(HCamera.getCPtr(camera), camera, pos, projection_matrix, complete_matrix);
  }

  public static void LocalPixelsToWorld(HCamera camera, boolean righthanded, float xres, float yres, int xwpix, int ywpix, float[] result) {
    HJMVOJNI.HUtility_LocalPixelsToWorld(HCamera.getCPtr(camera), camera, righthanded, xres, yres, xwpix, ywpix, result);
  }

  public static float ComputeAngleBetweenVector(HPoint p1, HPoint p2) {
    return HJMVOJNI.HUtility_ComputeAngleBetweenVector(HPoint.getCPtr(p1), p1, HPoint.getCPtr(p2), p2);
  }

  public static int strlen16(int[] p16) {
    return HJMVOJNI.HUtility_strlen16(p16);
  }

  public static void CalculateBoundingInfo(long startkey, HPoint min, HPoint max, HPoint delta, HPoint mid) {
    HJMVOJNI.HUtility_CalculateBoundingInfo(startkey, HPoint.getCPtr(min), min, HPoint.getCPtr(max), max, HPoint.getCPtr(delta), delta, HPoint.getCPtr(mid), mid);
  }

  public static int ClipPolygonAgainstPlane(int vertexCount, HPoint[] vertex, float[] plane, HPoint[] result, boolean[] noCut) {
    return HJMVOJNI.HUtility_ClipPolygonAgainstPlane__SWIG_0(vertexCount, HPoint.cArrayUnwrap(vertex), plane, HPoint.cArrayUnwrap(result), noCut);
  }

  public static int ClipPolygonAgainstPlane(int vertexCount, HPoint[] vertex, float[] plane, HPoint[] result) {
    return HJMVOJNI.HUtility_ClipPolygonAgainstPlane__SWIG_1(vertexCount, HPoint.cArrayUnwrap(vertex), plane, HPoint.cArrayUnwrap(result));
  }

  public static HFileIOResult TwoPassPrint(String driver, HOutputHandlerOptions options) {
    return HFileIOResult.swigToEnum(HJMVOJNI.HUtility_TwoPassPrint(driver, HOutputHandlerOptions.getCPtr(options), options));
  }

  public static long OpenSegmentFromKey(long key, StringBuffer segment) {return HJMVOJNI.HUtility_OpenSegmentFromKey(key, segment);}

  public static boolean IsPointInsideAllEdges(float[] pt, float[] points1, int len, int[] face1, float[] plane1, float fudge) {
    return HJMVOJNI.HUtility_IsPointInsideAllEdges(pt, points1, len, face1, plane1, fudge);
  }

  public static void IntersectionLinePlane(HPoint p1, HPoint p2, HPlane p, HPoint res) {
    HJMVOJNI.HUtility_IntersectionLinePlane(HPoint.getCPtr(p1), p1, HPoint.getCPtr(p2), p2, HPlane.getCPtr(p), p, HPoint.getCPtr(res), res);
  }

  public static void DeleteManipulators(long key) {
    HJMVOJNI.HUtility_DeleteManipulators(key);
  }

  public static void MergePointsIntoShell(int num_shell_points, HPoint[] plist1, int num_shell_facelist, int[] flist1, int num_merge_points, HPoint[] merge_points, HPoint[] merge_vectors, float tolerance, boolean AddExtraPoints, int[] newpoints, int[] newpointslen) {
    HJMVOJNI.HUtility_MergePointsIntoShell(num_shell_points, HPoint.cArrayUnwrap(plist1), num_shell_facelist, flist1, num_merge_points, HPoint.cArrayUnwrap(merge_points), HPoint.cArrayUnwrap(merge_vectors), tolerance, AddExtraPoints, newpoints, newpointslen);
  }

  public static void SubdivideShells(long sskey, long startkey, long newkey, int numx, int numy, int numz, ShellToRegionMapper mapper, boolean DoCut, boolean DeleteOriginalShells, boolean breakShells) {
    HJMVOJNI.HUtility_SubdivideShells__SWIG_0(sskey, startkey, newkey, numx, numy, numz, ShellToRegionMapper.getCPtr(mapper), mapper, DoCut, DeleteOriginalShells, breakShells);
  }

  public static void SubdivideShells(long sskey, long startkey, long newkey, int numx, int numy, int numz, ShellToRegionMapper mapper, boolean DoCut, boolean DeleteOriginalShells) {
    HJMVOJNI.HUtility_SubdivideShells__SWIG_1(sskey, startkey, newkey, numx, numy, numz, ShellToRegionMapper.getCPtr(mapper), mapper, DoCut, DeleteOriginalShells);
  }

  public static void SubdivideShells(long sskey, long startkey, long newkey, int numx, int numy, int numz, ShellToRegionMapper mapper, boolean DoCut) {
    HJMVOJNI.HUtility_SubdivideShells__SWIG_2(sskey, startkey, newkey, numx, numy, numz, ShellToRegionMapper.getCPtr(mapper), mapper, DoCut);
  }

  public static void SubdivideShells(long sskey, long startkey, long newkey, int numx, int numy, int numz, ShellToRegionMapper mapper) {
    HJMVOJNI.HUtility_SubdivideShells__SWIG_3(sskey, startkey, newkey, numx, numy, numz, ShellToRegionMapper.getCPtr(mapper), mapper);
  }

  public static void SubdivideShells(long sskey, long startkey, long newkey, int numx, int numy, int numz) {
    HJMVOJNI.HUtility_SubdivideShells__SWIG_4(sskey, startkey, newkey, numx, numy, numz);
  }

  public static void MergePolylines() {
    HJMVOJNI.HUtility_MergePolylines();
  }

  public static void CreateZebraStripeTexture(int width, int height, int stripwidth, boolean horizontal, HPixelRGB colorstripes, HPixelRGB colorbackground) {
    HJMVOJNI.HUtility_CreateZebraStripeTexture(width, height, stripwidth, horizontal, HPixelRGB.getCPtr(colorstripes), colorstripes, HPixelRGB.getCPtr(colorbackground), colorbackground);
  }

  public static void ascii_to_unicode(String ascii, int[] unicode) {
    HJMVOJNI.HUtility_ascii_to_unicode(ascii, unicode);
  }

  public static void unicode_to_ascii(int[] unicode, StringBuffer ascii) {
    HJMVOJNI.HUtility_unicode_to_ascii(unicode, ascii);
  }

  public static void BatchRead(HBaseModel model, String directory, String extension) {
    HJMVOJNI.HUtility_BatchRead(HBaseModel.getCPtr(model), model, directory, extension);
  }

  public static void AdjustPositionToPlane(HBaseView view, HPoint position, HPoint point_in_plane) {
    HJMVOJNI.HUtility_AdjustPositionToPlane(HBaseView.getCPtr(view), view, HPoint.getCPtr(position), position, HPoint.getCPtr(point_in_plane), point_in_plane);
  }

  public static void CalculateCornerImagePosition(HBaseView view, int iwidth, int iheight, HWindowCorner corner, float[] posx, float[] posy) {
    HJMVOJNI.HUtility_CalculateCornerImagePosition(HBaseView.getCPtr(view), view, iwidth, iheight, corner.swigValue(), posx, posy);
  }

  public static void OptimizeModelByGrid(HBaseView view, ShellToRegionMapper mapper) {
    HJMVOJNI.HUtility_OptimizeModelByGrid(HBaseView.getCPtr(view), view, ShellToRegionMapper.getCPtr(mapper), mapper);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling, boolean[] DownSamplingSet, StringBuffer ParameterizationSource, StringBuffer InterpolationFilter, StringBuffer DecimationFilter, StringBuffer Layout, StringBuffer Tiling, boolean[] ValueScaleSet, boolean[] ValueScale, float[] ValueScaleMin, float[] ValueScaleMax, StringBuffer BlendingMode) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_0(texdef, Source, DownSampling, DownSamplingSet, ParameterizationSource, InterpolationFilter, DecimationFilter, Layout, Tiling, ValueScaleSet, ValueScale, ValueScaleMin, ValueScaleMax, BlendingMode);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling, boolean[] DownSamplingSet, StringBuffer ParameterizationSource, StringBuffer InterpolationFilter, StringBuffer DecimationFilter, StringBuffer Layout, StringBuffer Tiling, boolean[] ValueScaleSet, boolean[] ValueScale, float[] ValueScaleMin, float[] ValueScaleMax) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_1(texdef, Source, DownSampling, DownSamplingSet, ParameterizationSource, InterpolationFilter, DecimationFilter, Layout, Tiling, ValueScaleSet, ValueScale, ValueScaleMin, ValueScaleMax);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling, boolean[] DownSamplingSet, StringBuffer ParameterizationSource, StringBuffer InterpolationFilter, StringBuffer DecimationFilter, StringBuffer Layout, StringBuffer Tiling, boolean[] ValueScaleSet, boolean[] ValueScale, float[] ValueScaleMin) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_2(texdef, Source, DownSampling, DownSamplingSet, ParameterizationSource, InterpolationFilter, DecimationFilter, Layout, Tiling, ValueScaleSet, ValueScale, ValueScaleMin);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling, boolean[] DownSamplingSet, StringBuffer ParameterizationSource, StringBuffer InterpolationFilter, StringBuffer DecimationFilter, StringBuffer Layout, StringBuffer Tiling, boolean[] ValueScaleSet, boolean[] ValueScale) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_3(texdef, Source, DownSampling, DownSamplingSet, ParameterizationSource, InterpolationFilter, DecimationFilter, Layout, Tiling, ValueScaleSet, ValueScale);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling, boolean[] DownSamplingSet, StringBuffer ParameterizationSource, StringBuffer InterpolationFilter, StringBuffer DecimationFilter, StringBuffer Layout, StringBuffer Tiling, boolean[] ValueScaleSet) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_4(texdef, Source, DownSampling, DownSamplingSet, ParameterizationSource, InterpolationFilter, DecimationFilter, Layout, Tiling, ValueScaleSet);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling, boolean[] DownSamplingSet, StringBuffer ParameterizationSource, StringBuffer InterpolationFilter, StringBuffer DecimationFilter, StringBuffer Layout, StringBuffer Tiling) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_5(texdef, Source, DownSampling, DownSamplingSet, ParameterizationSource, InterpolationFilter, DecimationFilter, Layout, Tiling);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling, boolean[] DownSamplingSet, StringBuffer ParameterizationSource, StringBuffer InterpolationFilter, StringBuffer DecimationFilter, StringBuffer Layout) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_6(texdef, Source, DownSampling, DownSamplingSet, ParameterizationSource, InterpolationFilter, DecimationFilter, Layout);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling, boolean[] DownSamplingSet, StringBuffer ParameterizationSource, StringBuffer InterpolationFilter, StringBuffer DecimationFilter) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_7(texdef, Source, DownSampling, DownSamplingSet, ParameterizationSource, InterpolationFilter, DecimationFilter);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling, boolean[] DownSamplingSet, StringBuffer ParameterizationSource, StringBuffer InterpolationFilter) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_8(texdef, Source, DownSampling, DownSamplingSet, ParameterizationSource, InterpolationFilter);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling, boolean[] DownSamplingSet, StringBuffer ParameterizationSource) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_9(texdef, Source, DownSampling, DownSamplingSet, ParameterizationSource);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling, boolean[] DownSamplingSet) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_10(texdef, Source, DownSampling, DownSamplingSet);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source, boolean[] DownSampling) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_11(texdef, Source, DownSampling);
  }

  public static void DecipherTextureString(StringBuffer texdef, StringBuffer Source) {
    HJMVOJNI.HUtility_DecipherTextureString__SWIG_12(texdef, Source);
  }

  public HUtility() {
    this(HJMVOJNI.new_HUtility(), true);
  }

  public final static int X = HJMVOJNI.HUtility_X_get();
  public final static int Y = HJMVOJNI.HUtility_Y_get();
  public final static int Z = HJMVOJNI.HUtility_Z_get();
  public final static int W = HJMVOJNI.HUtility_W_get();

  public final static int XY = HJMVOJNI.HUtility_XY_get();
  public final static int XZ = HJMVOJNI.HUtility_XZ_get();
  public final static int YZ = HJMVOJNI.HUtility_YZ_get();

}
