/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class HImErrorHandler {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public HImErrorHandler(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(HImErrorHandler obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJMVOJNI.delete_HImErrorHandler(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public HImErrorHandler(boolean BlockByDefault) {
    this(HJMVOJNI.new_HImErrorHandler__SWIG_0(BlockByDefault), true);
  }

  public HImErrorHandler() {
    this(HJMVOJNI.new_HImErrorHandler__SWIG_1(), true);
  }

  public static void RegisterCallbacks() {
    HJMVOJNI.HImErrorHandler_RegisterCallbacks();
  }

  public static void Block(int cat, int spec, int sev) {
    HJMVOJNI.HImErrorHandler_Block(cat, spec, sev);
  }

  public static void Pass(int cat, int spec, int sev) {
    HJMVOJNI.HImErrorHandler_Pass(cat, spec, sev);
  }

  public void SetBlockByDefault(boolean bbd) {
    HJMVOJNI.HImErrorHandler_SetBlockByDefault(swigCPtr, this, bbd);
  }

  public static boolean BlockByDefault() {
    return HJMVOJNI.HImErrorHandler_BlockByDefault();
  }

  public static void CallbackEntryPoint(int category, int specific, int severity, int msgc, SWIGTYPE_p_p_char msgv, int stackc, SWIGTYPE_p_p_char stackv) {
    HJMVOJNI.HImErrorHandler_CallbackEntryPoint(category, specific, severity, msgc, SWIGTYPE_p_p_char.getCPtr(msgv), stackc, SWIGTYPE_p_p_char.getCPtr(stackv));
  }

}
