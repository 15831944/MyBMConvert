/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class HUtilityGeometryCreation {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public HUtilityGeometryCreation(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(HUtilityGeometryCreation obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJMVOJNI.delete_HUtilityGeometryCreation(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static boolean GeneratePointOnCircle(HPoint point, HPoint center, float radius, int axis, float angle, boolean convert) {
    return HJMVOJNI.HUtilityGeometryCreation_GeneratePointOnCircle__SWIG_0(HPoint.getCPtr(point), point, HPoint.getCPtr(center), center, radius, axis, angle, convert);
  }

  public static boolean GeneratePointOnCircle(HPoint point, HPoint center, float radius, int axis, float angle) {
    return HJMVOJNI.HUtilityGeometryCreation_GeneratePointOnCircle__SWIG_1(HPoint.getCPtr(point), point, HPoint.getCPtr(center), center, radius, axis, angle);
  }

  public static boolean GeneratePointsOnCircle(HPoint[] points, HPoint center, float radius, int axis, int numpoints, boolean convert) {
    return HJMVOJNI.HUtilityGeometryCreation_GeneratePointsOnCircle__SWIG_0(HPoint.cArrayUnwrap(points), HPoint.getCPtr(center), center, radius, axis, numpoints, convert);
  }

  public static boolean GeneratePointsOnCircle(HPoint[] points, HPoint center, float radius, int axis, int numpoints) {
    return HJMVOJNI.HUtilityGeometryCreation_GeneratePointsOnCircle__SWIG_1(HPoint.cArrayUnwrap(points), HPoint.getCPtr(center), center, radius, axis, numpoints);
  }

  public static boolean GeneratePointsOnCircularArc(HPoint[] points, HPoint center, float radius, int axis, int numpoints, boolean convert, float start_angle, float end_angle) {
    return HJMVOJNI.HUtilityGeometryCreation_GeneratePointsOnCircularArc(HPoint.cArrayUnwrap(points), HPoint.getCPtr(center), center, radius, axis, numpoints, convert, start_angle, end_angle);
  }

  public static long CreateWireframeCircleWithEllipse(HPoint x1, HPoint x2, HPoint x3) {return HJMVOJNI.HUtilityGeometryCreation_CreateWireframeCircleWithEllipse(HPoint.getCPtr(x1), x1, HPoint.getCPtr(x2), x2, HPoint.getCPtr(x3), x3);}

  public static long CreateSphere(String segment, HPoint center, float radius, int num_faces) {return HJMVOJNI.HUtilityGeometryCreation_CreateSphere__SWIG_0(segment, HPoint.getCPtr(center), center, radius, num_faces);}

  public static long CreateSphere(HPoint center, float radius, int numsides, HPoint axis, HPoint ref) {return HJMVOJNI.HUtilityGeometryCreation_CreateSphere__SWIG_1(HPoint.getCPtr(center), center, radius, numsides, HPoint.getCPtr(axis), axis, HPoint.getCPtr(ref), ref);}

  public static long CreateCone(HPoint center, float radius, float height, int numsides, HPoint axis, HPoint ref) {return HJMVOJNI.HUtilityGeometryCreation_CreateCone(HPoint.getCPtr(center), center, radius, height, numsides, HPoint.getCPtr(axis), axis, HPoint.getCPtr(ref), ref);}

  public static long CreateCylinder(HPoint center, float radius, float height, int numsides, HPoint axis, HPoint ref) {return HJMVOJNI.HUtilityGeometryCreation_CreateCylinder(HPoint.getCPtr(center), center, radius, height, numsides, HPoint.getCPtr(axis), axis, HPoint.getCPtr(ref), ref);}

  public static long CreateCuboid(HPoint max, HPoint min) {return HJMVOJNI.HUtilityGeometryCreation_CreateCuboid(HPoint.getCPtr(max), max, HPoint.getCPtr(min), min);}

  public static void SetupModellingMatrix(HPoint axis, HPoint ref, HPoint side, HPoint pos) {
    HJMVOJNI.HUtilityGeometryCreation_SetupModellingMatrix(HPoint.getCPtr(axis), axis, HPoint.getCPtr(ref), ref, HPoint.getCPtr(side), side, HPoint.getCPtr(pos), pos);
  }

  public static long CreateCuttingPlane(HBaseView view, String segmentname, boolean createplane) {return HJMVOJNI.HUtilityGeometryCreation_CreateCuttingPlane__SWIG_0(HBaseView.getCPtr(view), view, segmentname, createplane);}

  public static long CreateCuttingPlane(HBaseView view, String segmentname) {return HJMVOJNI.HUtilityGeometryCreation_CreateCuttingPlane__SWIG_1(HBaseView.getCPtr(view), view, segmentname);}

  public static long CreateCuttingPlane(HBaseView view) {return HJMVOJNI.HUtilityGeometryCreation_CreateCuttingPlane__SWIG_2(HBaseView.getCPtr(view), view);}

  public static void SetCuttingPlaneVisibilityForAll(long startkey, String visibility) {
    HJMVOJNI.HUtilityGeometryCreation_SetCuttingPlaneVisibilityForAll(startkey, visibility);
  }

  public static void AdjustCuttingPlaneRendering(HBaseView view) {
    HJMVOJNI.HUtilityGeometryCreation_AdjustCuttingPlaneRendering(HBaseView.getCPtr(view), view);
  }

  public static void AdjustSection(HBaseView view, long key) {
    HJMVOJNI.HUtilityGeometryCreation_AdjustSection(HBaseView.getCPtr(view), view, key);
  }

  public static void CreateThreeSidedSection(HBaseView view) {
    HJMVOJNI.HUtilityGeometryCreation_CreateThreeSidedSection(HBaseView.getCPtr(view), view);
  }

  public static void CreateTwoSidedSection(HBaseView view) {
    HJMVOJNI.HUtilityGeometryCreation_CreateTwoSidedSection(HBaseView.getCPtr(view), view);
  }

  public static void CreateSlice(HBaseView view, float relative_thickness) {
    HJMVOJNI.HUtilityGeometryCreation_CreateSlice__SWIG_0(HBaseView.getCPtr(view), view, relative_thickness);
  }

  public static void CreateSlice(HBaseView view) {
    HJMVOJNI.HUtilityGeometryCreation_CreateSlice__SWIG_1(HBaseView.getCPtr(view), view);
  }

  public static long CreateShellWithFaceSpecificVertexAttributes(float[] points, int face_list_length, int[] face_vertex_indices, float[] normals, int[] per_face_vertex_normal_indices, float[] color_values, int[] per_face_vertex_color_value_indices, float[] color_findices, int[] per_face_vertex_color_findex_indices, float[] params, int[] per_face_vertex_param_indices, int param_number, float crease_angle) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellWithFaceSpecificVertexAttributes__SWIG_0(points, face_list_length, face_vertex_indices, normals, per_face_vertex_normal_indices, color_values, per_face_vertex_color_value_indices, color_findices, per_face_vertex_color_findex_indices, params, per_face_vertex_param_indices, param_number, crease_angle);}

  public static long CreateShellWithFaceSpecificVertexAttributes(float[] points, int face_list_length, int[] face_vertex_indices, float[] normals, int[] per_face_vertex_normal_indices, float[] color_values, int[] per_face_vertex_color_value_indices, float[] color_findices, int[] per_face_vertex_color_findex_indices, float[] params, int[] per_face_vertex_param_indices, int param_number) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellWithFaceSpecificVertexAttributes__SWIG_1(points, face_list_length, face_vertex_indices, normals, per_face_vertex_normal_indices, color_values, per_face_vertex_color_value_indices, color_findices, per_face_vertex_color_findex_indices, params, per_face_vertex_param_indices, param_number);}

  public static long CreateShellWithFaceSpecificVertexAttributes(float[] points, int face_list_length, int[] face_vertex_indices, float[] normals, int[] per_face_vertex_normal_indices, float[] color_values, int[] per_face_vertex_color_value_indices, float[] color_findices, int[] per_face_vertex_color_findex_indices, float[] params, int[] per_face_vertex_param_indices) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellWithFaceSpecificVertexAttributes__SWIG_2(points, face_list_length, face_vertex_indices, normals, per_face_vertex_normal_indices, color_values, per_face_vertex_color_value_indices, color_findices, per_face_vertex_color_findex_indices, params, per_face_vertex_param_indices);}

  public static long CreateShellWithFaceSpecificVertexAttributes(float[] points, int face_list_length, int[] face_vertex_indices, float[] normals, int[] per_face_vertex_normal_indices, float[] color_values, int[] per_face_vertex_color_value_indices, float[] color_findices, int[] per_face_vertex_color_findex_indices, float[] params) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellWithFaceSpecificVertexAttributes__SWIG_3(points, face_list_length, face_vertex_indices, normals, per_face_vertex_normal_indices, color_values, per_face_vertex_color_value_indices, color_findices, per_face_vertex_color_findex_indices, params);}

  public static long CreateShellWithFaceSpecificVertexAttributes(float[] points, int face_list_length, int[] face_vertex_indices, float[] normals, int[] per_face_vertex_normal_indices, float[] color_values, int[] per_face_vertex_color_value_indices, float[] color_findices, int[] per_face_vertex_color_findex_indices) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellWithFaceSpecificVertexAttributes__SWIG_4(points, face_list_length, face_vertex_indices, normals, per_face_vertex_normal_indices, color_values, per_face_vertex_color_value_indices, color_findices, per_face_vertex_color_findex_indices);}

  public static long CreateShellWithFaceSpecificVertexAttributes(float[] points, int face_list_length, int[] face_vertex_indices, float[] normals, int[] per_face_vertex_normal_indices, float[] color_values, int[] per_face_vertex_color_value_indices, float[] color_findices) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellWithFaceSpecificVertexAttributes__SWIG_5(points, face_list_length, face_vertex_indices, normals, per_face_vertex_normal_indices, color_values, per_face_vertex_color_value_indices, color_findices);}

  public static long CreateShellWithFaceSpecificVertexAttributes(float[] points, int face_list_length, int[] face_vertex_indices, float[] normals, int[] per_face_vertex_normal_indices, float[] color_values, int[] per_face_vertex_color_value_indices) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellWithFaceSpecificVertexAttributes__SWIG_6(points, face_list_length, face_vertex_indices, normals, per_face_vertex_normal_indices, color_values, per_face_vertex_color_value_indices);}

  public static long CreateShellWithFaceSpecificVertexAttributes(float[] points, int face_list_length, int[] face_vertex_indices, float[] normals, int[] per_face_vertex_normal_indices, float[] color_values) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellWithFaceSpecificVertexAttributes__SWIG_7(points, face_list_length, face_vertex_indices, normals, per_face_vertex_normal_indices, color_values);}

  public static long CreateShellWithFaceSpecificVertexAttributes(float[] points, int face_list_length, int[] face_vertex_indices, float[] normals, int[] per_face_vertex_normal_indices) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellWithFaceSpecificVertexAttributes__SWIG_8(points, face_list_length, face_vertex_indices, normals, per_face_vertex_normal_indices);}

  public static long CreateShellWithFaceSpecificVertexAttributes(float[] points, int face_list_length, int[] face_vertex_indices, float[] normals) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellWithFaceSpecificVertexAttributes__SWIG_9(points, face_list_length, face_vertex_indices, normals);}

  public static long CreateShellWithFaceSpecificVertexAttributes(float[] points, int face_list_length, int[] face_vertex_indices) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellWithFaceSpecificVertexAttributes__SWIG_10(points, face_list_length, face_vertex_indices);}

  public static long GenerateFEAShell(long definingShell, boolean generateIsolines, String algorithm) {return HJMVOJNI.HUtilityGeometryCreation_GenerateFEAShell(definingShell, generateIsolines, algorithm);}

  public static long CreateSmoothedShell(int PointCount, HPoint[] Points, int FaceListLength, int[] FaceList, float creaseAngle) {return HJMVOJNI.HUtilityGeometryCreation_CreateSmoothedShell(PointCount, HPoint.cArrayUnwrap(Points), FaceListLength, FaceList, creaseAngle);}

  public static boolean ComputeFIndexDemoData(HShellVertexData pShellVertexData, int data_cycles) {
    return HJMVOJNI.HUtilityGeometryCreation_ComputeFIndexDemoData__SWIG_0(HShellVertexData.getCPtr(pShellVertexData), pShellVertexData, data_cycles);
  }

  public static boolean ComputeFIndexDemoData(HShellVertexData pShellVertexData) {
    return HJMVOJNI.HUtilityGeometryCreation_ComputeFIndexDemoData__SWIG_1(HShellVertexData.getCPtr(pShellVertexData), pShellVertexData);
  }

  public static long CreateBoolean(long target, long tool, int bool_type) {return HJMVOJNI.HUtilityGeometryCreation_CreateBoolean(target, tool, bool_type);}

  public static long CreateShellFromRotationalSweep(int nPoints, HPoint[] profile, float[] radii, float start_angle, float end_angle, int axis, boolean[] hard, int n_sides) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellFromRotationalSweep(nPoints, HPoint.cArrayUnwrap(profile), radii, start_angle, end_angle, axis, hard, n_sides);}

  public static long CreateShellFromPathSweep(int nProfilePoints, HPoint[] pOuterProfilePoints, HPoint[] pInnerProfilePoints, int nPathPoints, HPoint[] pSweepPathPoints, boolean bIsProfileClosed) {return HJMVOJNI.HUtilityGeometryCreation_CreateShellFromPathSweep(nProfilePoints, HPoint.cArrayUnwrap(pOuterProfilePoints), HPoint.cArrayUnwrap(pInnerProfilePoints), nPathPoints, HPoint.cArrayUnwrap(pSweepPathPoints), bIsProfileClosed);}

  public HUtilityGeometryCreation() {
    this(HJMVOJNI.new_HUtilityGeometryCreation(), true);
  }

}
