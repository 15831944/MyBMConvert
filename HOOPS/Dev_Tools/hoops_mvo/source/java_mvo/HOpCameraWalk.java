/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class HOpCameraWalk extends HBaseOperator {
  private long swigCPtr;

  public HOpCameraWalk(long cPtr, boolean cMemoryOwn) {
    super(HJMVOJNI.HOpCameraWalk_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(HOpCameraWalk obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJMVOJNI.delete_HOpCameraWalk(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJMVOJNI.HOpCameraWalk_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJMVOJNI.HOpCameraWalk_change_ownership(this, swigCPtr, true);
  }

  public HOpCameraWalk(HBaseView view, int DoRepeat, int DoCapture) {
    this(HJMVOJNI.new_HOpCameraWalk__SWIG_0(HBaseView.getCPtr(view), view, DoRepeat, DoCapture), true);
    HJMVOJNI.HOpCameraWalk_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public HOpCameraWalk(HBaseView view, int DoRepeat) {
    this(HJMVOJNI.new_HOpCameraWalk__SWIG_1(HBaseView.getCPtr(view), view, DoRepeat), true);
    HJMVOJNI.HOpCameraWalk_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public HOpCameraWalk(HBaseView view) {
    this(HJMVOJNI.new_HOpCameraWalk__SWIG_2(HBaseView.getCPtr(view), view), true);
    HJMVOJNI.HOpCameraWalk_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public String GetName() {
    return (getClass() == HOpCameraWalk.class) ? HJMVOJNI.HOpCameraWalk_GetName(swigCPtr, this) : HJMVOJNI.HOpCameraWalk_GetNameSwigExplicitHOpCameraWalk(swigCPtr, this);
  }

  public int OnLButtonDown(HEventInfo hevent) {
    return (getClass() == HOpCameraWalk.class) ? HJMVOJNI.HOpCameraWalk_OnLButtonDown(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpCameraWalk_OnLButtonDownSwigExplicitHOpCameraWalk(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public int OnLButtonDownAndMove(HEventInfo hevent) {
    return (getClass() == HOpCameraWalk.class) ? HJMVOJNI.HOpCameraWalk_OnLButtonDownAndMove(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpCameraWalk_OnLButtonDownAndMoveSwigExplicitHOpCameraWalk(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public int OnLButtonUp(HEventInfo hevent) {
    return (getClass() == HOpCameraWalk.class) ? HJMVOJNI.HOpCameraWalk_OnLButtonUp(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpCameraWalk_OnLButtonUpSwigExplicitHOpCameraWalk(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public void SetLightFollowsCamera(boolean follow) {
    HJMVOJNI.HOpCameraWalk_SetLightFollowsCamera(swigCPtr, this, follow);
  }

  public boolean GetLightFollowsCamera() {
    return HJMVOJNI.HOpCameraWalk_GetLightFollowsCamera(swigCPtr, this);
  }

  public int OnMouseWheel(HEventInfo hevent) {
    return (getClass() == HOpCameraWalk.class) ? HJMVOJNI.HOpCameraWalk_OnMouseWheel(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpCameraWalk_OnMouseWheelSwigExplicitHOpCameraWalk(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public int OnMButtonDown(HEventInfo hevent) {
    return (getClass() == HOpCameraWalk.class) ? HJMVOJNI.HOpCameraWalk_OnMButtonDown(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpCameraWalk_OnMButtonDownSwigExplicitHOpCameraWalk(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public int OnMButtonDownAndMove(HEventInfo hevent) {
    return (getClass() == HOpCameraWalk.class) ? HJMVOJNI.HOpCameraWalk_OnMButtonDownAndMove(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpCameraWalk_OnMButtonDownAndMoveSwigExplicitHOpCameraWalk(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public int OnMButtonUp(HEventInfo hevent) {
    return (getClass() == HOpCameraWalk.class) ? HJMVOJNI.HOpCameraWalk_OnMButtonUp(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpCameraWalk_OnMButtonUpSwigExplicitHOpCameraWalk(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public HBaseOperator Clone() {
    long cPtr = (getClass() == HOpCameraWalk.class) ? HJMVOJNI.HOpCameraWalk_Clone(swigCPtr, this) : HJMVOJNI.HOpCameraWalk_CloneSwigExplicitHOpCameraWalk(swigCPtr, this);
    return (cPtr == 0) ? null : new HBaseOperator(cPtr, false);
  }

  public void OnWalk(float requested_time, float actual_time) {
    HJMVOJNI.HOpCameraWalk_OnWalk(swigCPtr, this, requested_time, actual_time);
  }

  public void OnKeyWalk(float requested_time, float actual_time) {
    HJMVOJNI.HOpCameraWalk_OnKeyWalk(swigCPtr, this, requested_time, actual_time);
  }

  public void OnButtonWalk(String action, HButtonState buttonstate) {
    HJMVOJNI.HOpCameraWalk_OnButtonWalk(swigCPtr, this, action, buttonstate.swigValue());
  }

  public static boolean WalkTimerClbk(float request_time, float actual_time, long user_data) {
    return HJMVOJNI.HOpCameraWalk_WalkTimerClbk(request_time, actual_time, user_data);
  }

  public void ViewDeleted() {
    HJMVOJNI.HOpCameraWalk_ViewDeleted(swigCPtr, this);
  }

  public void SetKeyboardWalk(boolean kw) {
    HJMVOJNI.HOpCameraWalk_SetKeyboardWalk(swigCPtr, this, kw);
  }

  public void SetCollision(boolean c) {
    HJMVOJNI.HOpCameraWalk_SetCollision(swigCPtr, this, c);
  }

  public void SetSnapToFloor(boolean s) {
    HJMVOJNI.HOpCameraWalk_SetSnapToFloor(swigCPtr, this, s);
  }

  public void SetAvatarHeight(float ah) {
    HJMVOJNI.HOpCameraWalk_SetAvatarHeight(swigCPtr, this, ah);
  }

  public void SetStepHeightUp(float shu) {
    HJMVOJNI.HOpCameraWalk_SetStepHeightUp(swigCPtr, this, shu);
  }

  public void SetStepHeightDown(float shd) {
    HJMVOJNI.HOpCameraWalk_SetStepHeightDown(swigCPtr, this, shd);
  }

  public float GetAvatarHeight() {
    return HJMVOJNI.HOpCameraWalk_GetAvatarHeight(swigCPtr, this);
  }

  public void SetSpeed(float s) {
    HJMVOJNI.HOpCameraWalk_SetSpeed(swigCPtr, this, s);
  }

  public float GetSpeed() {
    return HJMVOJNI.HOpCameraWalk_GetSpeed(swigCPtr, this);
  }

  public static float CalculateExtents(HBaseView view) {
    return HJMVOJNI.HOpCameraWalk_CalculateExtents(HBaseView.getCPtr(view), view);
  }

  public int OnKeyDown(HEventInfo hevent) {
    return (getClass() == HOpCameraWalk.class) ? HJMVOJNI.HOpCameraWalk_OnKeyDown(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent) : HJMVOJNI.HOpCameraWalk_OnKeyDownSwigExplicitHOpCameraWalk(swigCPtr, this, HEventInfo.getCPtr(hevent), hevent);
  }

  public static int ImageAction(HImageRegion ii, long data, HButtonState keyup) {
    return HJMVOJNI.HOpCameraWalk_ImageAction(HImageRegion.getCPtr(ii), ii, data, keyup.swigValue());
  }

  public void ShowNavigationWindow(StringBuffer image_dir) {
    HJMVOJNI.HOpCameraWalk_ShowNavigationWindow__SWIG_0(swigCPtr, this, image_dir);
  }

  public void ShowNavigationWindow() {
    HJMVOJNI.HOpCameraWalk_ShowNavigationWindow__SWIG_1(swigCPtr, this);
  }

  public void RemoveNavigationWindow() {
    HJMVOJNI.HOpCameraWalk_RemoveNavigationWindow(swigCPtr, this);
  }

  public void FitControlsToCorner() {
    HJMVOJNI.HOpCameraWalk_FitControlsToCorner(swigCPtr, this);
  }

  protected void SnapToGround() {
    HJMVOJNI.HOpCameraWalk_SnapToGround(swigCPtr, this);
  }

  protected void AdjustCameraCollision(HCamera oldcamera, boolean noextrude) {
    HJMVOJNI.HOpCameraWalk_AdjustCameraCollision__SWIG_0(swigCPtr, this, HCamera.getCPtr(oldcamera), oldcamera, noextrude);
  }

  protected void AdjustCameraCollision(HCamera oldcamera) {
    HJMVOJNI.HOpCameraWalk_AdjustCameraCollision__SWIG_1(swigCPtr, this, HCamera.getCPtr(oldcamera), oldcamera);
  }

  protected void AdjustHeight(HCamera oldcamera) {
    HJMVOJNI.HOpCameraWalk_AdjustHeight(swigCPtr, this, HCamera.getCPtr(oldcamera), oldcamera);
  }

  protected static boolean signal_callback(int signal, long signal_data, long user_data) {
    return HJMVOJNI.HOpCameraWalk_signal_callback(signal, signal_data, user_data);
  }

  protected void ReadjustPosition() {
    HJMVOJNI.HOpCameraWalk_ReadjustPosition(swigCPtr, this);
  }

  protected void SetupControls(char forward, char backward, char strafe_left, char strafe_right, char up, char down) {
    HJMVOJNI.HOpCameraWalk_SetupControls(swigCPtr, this, forward, backward, strafe_left, strafe_right, up, down);
  }

}
