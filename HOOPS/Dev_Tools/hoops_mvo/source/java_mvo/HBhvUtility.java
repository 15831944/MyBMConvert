/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class HBhvUtility {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public HBhvUtility(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(HBhvUtility obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJMVOJNI.delete_HBhvUtility(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static void GetQuatPoint(HUtilityTextParser tp, HQuat quat) {
    HJMVOJNI.HBhvUtility_GetQuatPoint__SWIG_0(HUtilityTextParser.getCPtr(tp), tp, HQuat.getCPtr(quat), quat);
  }

  public static void GetMatrix(HUtilityTextParser tp, float[] matrix) {
    HJMVOJNI.HBhvUtility_GetMatrix__SWIG_0(HUtilityTextParser.getCPtr(tp), tp, matrix);
  }

  public static void GetQuatPoint(String text, HQuat quat) {
    HJMVOJNI.HBhvUtility_GetQuatPoint__SWIG_1(text, HQuat.getCPtr(quat), quat);
  }

  public static void GetMatrix(String text, float[] matrix) {
    HJMVOJNI.HBhvUtility_GetMatrix__SWIG_1(text, matrix);
  }

  public static void ConvertHSFtoMorph(String filename, HBaseModel model) {
    HJMVOJNI.HBhvUtility_ConvertHSFtoMorph(filename, HBaseModel.getCPtr(model), model);
  }

  public static void ConvertHSFtoSegSwitch(String filename, HBaseModel model) {
    HJMVOJNI.HBhvUtility_ConvertHSFtoSegSwitch(filename, HBaseModel.getCPtr(model), model);
  }

  public static void SetupAnimationReadFromHSF(HStreamFileToolkit mytool, HBaseModel model) {
    HJMVOJNI.HBhvUtility_SetupAnimationReadFromHSF(HStreamFileToolkit.getCPtr(mytool), mytool, HBaseModel.getCPtr(model), model);
  }

  public static void SetupAnimationWriteFromHSF(HStreamFileToolkit mytool, HBaseModel model) {
    HJMVOJNI.HBhvUtility_SetupAnimationWriteFromHSF(HStreamFileToolkit.getCPtr(mytool), mytool, HBaseModel.getCPtr(model), model);
  }

  public static void ShowModellingMatrix(float[] segment_modelling_matrix) {
    HJMVOJNI.HBhvUtility_ShowModellingMatrix(segment_modelling_matrix);
  }

  public static void MakeCameraKeyframe(HBaseView view, float timediff, boolean targetmode) {
    HJMVOJNI.HBhvUtility_MakeCameraKeyframe__SWIG_0(HBaseView.getCPtr(view), view, timediff, targetmode);
  }

  public static void MakeCameraKeyframe(HBaseView view, float timediff) {
    HJMVOJNI.HBhvUtility_MakeCameraKeyframe__SWIG_1(HBaseView.getCPtr(view), view, timediff);
  }

  public static HBhvAnimation AddAnimation(HBaseModel model, StringBuffer name, StringBuffer targetpath, HPoint pivot) {
    long cPtr = HJMVOJNI.HBhvUtility_AddAnimation(HBaseModel.getCPtr(model), model, name, targetpath, HPoint.getCPtr(pivot), pivot);
    return (cPtr == 0) ? null : new HBhvAnimation(cPtr, false);
  }

  public static void AddPosKeyframe(HBaseModel model, StringBuffer animname, int tick, HPoint pos, boolean linear) {
    HJMVOJNI.HBhvUtility_AddPosKeyframe(HBaseModel.getCPtr(model), model, animname, tick, HPoint.getCPtr(pos), pos, linear);
  }

  public static void AddRotKeyframe(HBaseModel model, StringBuffer animname, int tick, HQuat pos, boolean linear) {
    HJMVOJNI.HBhvUtility_AddRotKeyframe(HBaseModel.getCPtr(model), model, animname, tick, HQuat.getCPtr(pos), pos, linear);
  }

  public static void AddPosRotKeyframe(HBaseModel model, String animname, int tick, HPoint pivot, float[] matrix) {
    HJMVOJNI.HBhvUtility_AddPosRotKeyframe__SWIG_0(HBaseModel.getCPtr(model), model, animname, tick, HPoint.getCPtr(pivot), pivot, matrix);
  }

  public static void AddMatrixKeyframe(HBaseModel model, HBhvAnimation ani, int tick, float[] matrix) {
    HJMVOJNI.HBhvUtility_AddMatrixKeyframe(HBaseModel.getCPtr(model), model, HBhvAnimation.getCPtr(ani), ani, tick, matrix);
  }

  public static void AddPosRotKeyframe(HBaseModel model, StringBuffer animname, int tick, HPoint pos, boolean linear, HQuat quat, boolean linear2) {
    HJMVOJNI.HBhvUtility_AddPosRotKeyframe__SWIG_1(HBaseModel.getCPtr(model), model, animname, tick, HPoint.getCPtr(pos), pos, linear, HQuat.getCPtr(quat), quat, linear2);
  }

  public static void AddInstanceCreateKeyframe(HBaseModel model, StringBuffer animname, int tick, StringBuffer path, StringBuffer include_path, StringBuffer color) {
    HJMVOJNI.HBhvUtility_AddInstanceCreateKeyframe(HBaseModel.getCPtr(model), model, animname, tick, path, include_path, color);
  }

  public static void AddSegmentMoveKeyframe(HBaseModel model, HBhvAnimation anim, int tick, StringBuffer path) {
    HJMVOJNI.HBhvUtility_AddSegmentMoveKeyframe(HBaseModel.getCPtr(model), model, HBhvAnimation.getCPtr(anim), anim, tick, path);
  }

  public HBhvUtility() {
    this(HJMVOJNI.new_HBhvUtility(), true);
  }

}
