<?xml version="1.0"?>
<!-- edited with XMLSpy v2006 sp2 U (http://www.altova.com) by David Sachitano (Tech Soft 3D) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:element name="Animdef">
		<xs:annotation>
			<xs:documentation> This tag encloses all animation specific data. The "File" parameter can be used to load a default environment for the viewer/container. Using this approach the user can use a HSF to define the initial attribute settings within the scene. This could include color settings for geometry within the scene and the initial positioning of lights.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="TargetObject" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation> This tags defines an alias for a given animation target. It can either enclose one or multiple animation tags or be defined for later use.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Subtarget" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation> The subtarget tag can be part of the TargetObject tag and further specifies targets for the animation. Those could be individual faces/edges/vertices in a shell or individual shells inside a segment .</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:string">
											<xs:attribute name="Name" type="xs:string">
												<xs:annotation>
													<xs:documentation> Identifier of the subtarget object</xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="Type">
												<xs:annotation>
													<xs:documentation> String can be any one of the following : GEOMETRY, FACES, VERTICES, EDGES.</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
													<xs:restriction base="xs:string">
														<xs:enumeration value="GEOMETRY"/>
														<xs:enumeration value="FACES"/>
														<xs:enumeration value="VERTICES"/>
														<xs:enumeration value="EDGES"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="Pivot" type="xs:string" use="optional" default="[ 0 0 0 ]">
							<xs:annotation>
								<xs:documentation> Pivot point</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="Path" use="required">
							<xs:annotation>
								<xs:documentation> Segment path to target object</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string"/>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="Name" type="xs:string" use="optional" default="">
							<xs:annotation>
								<xs:documentation> Identifier of target object</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="Rotation" type="xs:string" use="optional">
							<xs:annotation>
								<xs:documentation> Rotational Components of modelling Matrix</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="Scale" type="xs:string" use="optional">
							<xs:annotation>
								<xs:documentation> Scale Components along the three axis</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="Collision" type="xs:integer"/>
					</xs:complexType>
				</xs:element>
				<xs:element ref="Animation" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="Sensor" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Condition" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Action" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation> The different action type strings have the following meaning:

        ACTIVATE continues an animation from it's current position
        DEACTIVATE stops an animation at its current position
        INFOTEXT displays text information (e.g. tooltip) at mouse position
        RESET stops an animation at it's current position and rewinds it
        RESTART restarts an animation
        LOADFILE loads a new (hsf) file and places it in the directory defined by the value
        parameter
        LOADURL loads a specific URL by opening a separate browser window

This collection of tags provide a simple means of triggering animation based on user input or other sensors. It is usually associated with visible geometry that the user can interact with. In a lot of cases this will be the same geometry that the animation is performed on. To chain multiple animations together ONANIMFINISHED with an animation as the target can be used.
Users can define their own action types/value combinations. All action types that are not recognized will have to be quietly disregarded by any parser. We recommend developers to prefix all user defined types with a "$". </xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="Target" type="xs:string">
													<xs:annotation>
														<xs:documentation> Animation Identifier, Object Identifier or Sensor identifier</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="Type" use="required">
													<xs:annotation>
														<xs:documentation> Action associated with the target.</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:enumeration value="ACTIVATE"/>
															<xs:enumeration value="DEACTIVATE"/>
															<xs:enumeration value="RESET"/>
															<xs:enumeration value="RESTART"/>
															<xs:enumeration value="LOADFILE"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
												<xs:attribute name="Value" type="xs:string">
													<xs:annotation>
														<xs:documentation> Additional parameters for the defined action</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="Delay" default="0">
													<xs:annotation>
														<xs:documentation> Delay time (in ticks) before action is activated</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction base="xs:integer"/>
													</xs:simpleType>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="Target" type="xs:string">
										<xs:annotation>
											<xs:documentation> Identifier of target object for this sensor (see below). Could be either an object or an animation (for ONANIMFINISHED), if no target is provided sensor can still be executed by other sensor</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="Event" default="ONLCLICK">
										<xs:annotation>
											<xs:documentation> event associated with the target</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="ONTICK"/>
												<xs:enumeration value="ONLCLICK"/>
												<xs:enumeration value="ONRCLICK"/>
												<xs:enumeration value="ONMOUSEOVER"/>
												<xs:enumeration value="ONCOLLISION"/>
												<xs:enumeration value="ONANIMFINISHED"/>
												<xs:enumeration value="ONSENSOR"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="Idle" default="1">
										<xs:annotation>
											<xs:documentation> Event is only executed if target object is idle (not in any animation)</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:integer">
												<xs:enumeration value="1"/>
												<xs:enumeration value="0"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="Name" type="xs:string" use="required">
							<xs:annotation>
								<xs:documentation> Identifier of the sensor object.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="Active" default="1">
							<xs:simpleType>
								<xs:restriction base="xs:integer">
									<xs:enumeration value="1"/>
									<xs:enumeration value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="Delay" type="xs:integer" default="0">
							<xs:annotation>
								<xs:documentation> Delay time (in ticks) before sensor is active</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attributeGroup ref="wholeAnimation"/>
		</xs:complexType>
	</xs:element>
	<xs:attributeGroup name="wholeAnimation">
		<xs:attribute name="Vendor" type="xs:string">
			<xs:annotation>
				<xs:documentation> Vendor information</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="File" type="xs:string">
			<xs:annotation>
				<xs:documentation>  Path/URL of file that serves as stage for this animation block</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Version" type="xs:string">
			<xs:annotation>
				<xs:documentation> Version number of the format specification</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TicksPerSecond" type="xs:integer">
			<xs:annotation>
				<xs:documentation> Number of individual “time-slices” per second that can be used to specify key frames
(tps). All time related values are expressed in ticks.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Name" type="xs:string">
			<xs:annotation>
				<xs:documentation> Identifier of the animation data</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Delay" type="xs:integer">
			<xs:annotation>
				<xs:documentation> Initial Execution delay for this animation block (in ticks)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:element name="Animation">
		<xs:annotation>
			<xs:documentation>By combining a timeline with one or more interpolators and a target the Animation tag defines a single animation. If the timeline contains more values than the interpolator the remaining timeline values are disregarded. If the timeline contains less values than the interpolator than the number of interpolator values must be a multiple of the timeline values.

Timeline values (s): 0, 0.2, 0.8, 1.2
Rotation Values (degree): 0, 90, 180
The animation will rotate from 0 to 180 degrees in 0.8 seconds and then stop or restart (according to the loop setting)

Timeline values (s): 0, 0.2, 0.8, 1.2
Rotation Values (degree): 0,20,40,60,80,100,120,140
The animation will go from 0 to 180 degrees in 1.2 seconds. It will be at 40 degrees in 0.2 seconds and at 20 degrees in 0.1 seconds.

Timeline values (s) : 0, 0.2, 0.8, 1.2
Rotation Values (degree): 0,20,40,60,80,100
Invalid!!

An animation can be declared either active or inactive at startup. If inactive it can later be activated by a sensor tag, through scripting or programmatically. An active animation will execute immediately after program initialization with the defined delay time

With the Loop parameter it is possible to allow an animation to be performed once or any number of times. Alternatively it can also go backwards after going through the complete timeline by setting RLoop to 1. This is useful for a swinging door or any kind of repetitive animation.

Apart from the delay time that is only executed once it is also possible to define an acceleration time and deceleration time which allows for a smooth acceleration when going from the first to the second (or second last to last) value of the interpolators. This is based on a simple predefined acceleration/deceleration curves.

This tag can also be nested allowing for sets of animations that logically belong together. All tags that appear inside an “Animation” tag are defined relative to that block. Sensor tags can access nested animation data by using a hierarchical naming scheme similar to the one used to access elements in the HOOPS segment structure. The same is true for target specifications. All parameters of the enclosing animation block will be inherited by the child animations.

it is possible to define an animation “instance” by specifying another animation with the “InstanceOf” Parameter. This facilitates the reuse of animations for different target objects. An example would be an animation block that defines various complex animations which should be applied to multiple objects simultaneously. An “instanced” animation can itself not instantiate another animation.
The “Target” Paremter for instanced animations will be ignored and replaced by the Target of the instanciating animation. Also the “CurrentTick” and “Active” Parameter do not apply for instanced animations.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Timeline">
					<xs:annotation>
						<xs:documentation> This tag defines a series of time values (expressed in ticks) used in conjunction with one or more interpolators. The actual time for one frame is determined by the "TicksPerSecond" parameter in the Animdef tag that encloses all animation data. The timeline array can be seen as linear interpolation of time over distance. By using modifiers on an individual timeline element it is possible to change this "velocity curve" and give it non-linear behavior. While it is common in animation to specify "acceleration and deceleration" as part of the "space-curve" definition this approach provides an alternative and more direct control over the "speed" of the animation.
See the "Interpolator" description for a more in-depth discussion of modifiers.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="Modifiers">
									<xs:annotation>
										<xs:documentation> Global Modifier list for this timeline Valid options are currently: (l)inear, (t)cb, (b)ezier (d)iscrete</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="l"/>
											<xs:enumeration value="t"/>
											<xs:enumeration value="b"/>
											<xs:enumeration value="d"/>
											<xs:enumeration value="linear"/>
											<xs:enumeration value="tcb"/>
											<xs:enumeration value="bezier"/>
											<xs:enumeration value="discrete"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<!-- <xs:choice> -->
				<xs:element name="PosInterpolator" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation> Positional values expressed either linear or spline based movement.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="Name" type="xs:string">
									<xs:annotation>
										<xs:documentation> Identifier of the Interpolator object</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="FollowPath" default="0">
									<xs:annotation>
										<xs:documentation> Adjusts the rotation of the object to follow the path of the keyframe values</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="1"/>
											<xs:enumeration value="0"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="PathVector" type="xs:string" default="[1 0 0]">
									<xs:annotation>
										<xs:documentation> Directional vector if FollowPath=1</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Modifiers">
									<xs:annotation>
										<xs:documentation> Default Modifiers that are implicitly applied to all keyframes</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value=""/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="QuatRotInterpolator" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation> Rotational Values expressed as quaternions (x, y, z, w). SLERP interpolation is used between the keyframes.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="Name" type="xs:string">
									<xs:annotation>
										<xs:documentation> Identifier of the Interpolator object</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Modifiers" type="xs:string">
									<xs:annotation>
										<xs:documentation> Default Modifiers that are implicitly applied to all keyframes</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="ScaleInterpolator" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation> Linear or non-linear scaling of objects</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="Name" type="xs:string">
									<xs:annotation>
										<xs:documentation> Identifier of the Interpolator object</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Modifiers" type="xs:string">
									<xs:annotation>
										<xs:documentation> Default Modifiers that are implicitly applied to all keyframes</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="SegSwitchInterpolator" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation> Transition between segments by turning visibility on/off. Simple but fast form of animation.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="Modifiers">
									<xs:annotation>
										<xs:documentation> Default Modifiers that are implicitly applied to all keyframes</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="discrete"/>
											<xs:enumeration value="*"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="Name" type="xs:string">
									<xs:annotation>
										<xs:documentation> Identifier of the Interpolator object</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="AxisRotInterpolator" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation> Rotational Values expressed as rotations around a common axis (in degrees). Swinging door, pendulum, etc...</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="Name" type="xs:string">
									<xs:annotation>
										<xs:documentation> Identifier of the Interpolator object</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Modifiers" type="xs:string">
									<xs:annotation>
										<xs:documentation> Default Modifiers that are implicitly applied to all keyframes</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="ColorInterpolator" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation> Color values expressed as rgb triplets.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="GeomType" type="xs:string">
									<xs:annotation>
										<xs:documentation> Further specifies the geometry type that the color applies to (faces, edges, lines, etc…)</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Type" default="diffuse">
									<xs:annotation>
										<xs:documentation> Further specifies the color component(diffuse, specular, transmission)</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="diffuse"/>
											<xs:enumeration value="specular"/>
											<xs:enumeration value="transmission"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="Name" type="xs:string">
									<xs:annotation>
										<xs:documentation> Identifier of the Interpolator object</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Modifiers" type="xs:string">
									<xs:annotation>
										<xs:documentation> Default Modifiers that are implicitly applied to all keyframes</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<!--	</xs:choice> -->
				<xs:element name="AttSwitchInterpolator" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation> Transition between attribute settings. All attributes of the segments referenced in the keyframe list will be applied to the target segment. Useful for switching rendering modes, visibility, etc.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="Name" type="xs:string">
									<xs:annotation>
										<xs:documentation> Identifier of the Interpolator object</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Modifiers" type="xs:string">
									<xs:annotation>
										<xs:documentation> Default Modifiers that are implicitly applied to all keyframes</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="VertexMorphInterpolator" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation> Transition between facetted objects with the same number of vertices. Linearly interpolates between vertex coordinates. Useful for non-rigid body animation. Note that object descriptor can currently only be a tag-id or a key. (TOB, TID, HKEY),</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="Name" type="xs:string">
									<xs:annotation>
										<xs:documentation> Identifier of the Interpolator object</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Modifiers">
									<xs:annotation>
										<xs:documentation> Default Modifiers that are implicitly applied to all keyframes</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="linear"/>
											<xs:enumeration value="discrete"/>
											<xs:enumeration value="*"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="ColorMorphInterpolator" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation> Transition between per vertex color attributes to model for example heat or stress proliferation on an object. The object descriptor must point to an array of color values that match the target object.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="Name" type="xs:string">
									<xs:annotation>
										<xs:documentation> Identifier of the Interpolator object</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Modifiers">
									<xs:annotation>
										<xs:documentation> Default Modifiers that are implicitly applied to all keyframes</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="linear"/>
											<xs:enumeration value="discrete"/>
											<xs:enumeration value="*"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="TrailInterpolator" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation> Positional values defining a trail drawn as line segments. The trail is created in a special subsegment (called "trail") of the segment pointed to by the target object of the parent animation.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="Name" type="xs:string">
									<xs:annotation>
										<xs:documentation> Identifier of the Interpolator object</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Color" type="xs:string" default="white">
									<xs:annotation>
										<xs:documentation> Color of the trail geometry</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Weight" type="xs:integer" default="1">
									<xs:annotation>
										<xs:documentation> Thickness of the trail</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Style" type="xs:string" default="----">
									<xs:annotation>
										<xs:documentation> Style of trail (see HOOPS documentation for available line styles)</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Type" default="forward">
									<xs:annotation>
										<xs:documentation> Path will either extend from target position to last keyframe (forward), from first keyframe to target position (backward) or from first keyframe to last keyframe (full)</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="forward"/>
											<xs:enumeration value="backward"/>
											<xs:enumeration value="full"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="Modifiers" default="linear">
									<xs:annotation>
										<xs:documentation> Default Modifiers that are implicitly applied to all keyframes</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="linear"/>
											<xs:enumeration value="tcb"/>
											<xs:enumeration value="bezier"/>
											<xs:enumeration value="discrete"/>
											<xs:enumeration value="absolute"/>
											<xs:enumeration value="relative"/>
											<xs:enumeration value="channels"/>
											<xs:enumeration value="*"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element ref="Animation" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="Target" type="xs:string"/>
			<xs:attribute name="Loop" type="xs:integer" default="1"/>
			<xs:attribute name="CurrentTick" type="xs:integer" default="0"/>
			<xs:attribute name="RLoop" default="0">
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:enumeration value="1"/>
						<xs:enumeration value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Active" default="1">
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:enumeration value="1"/>
						<xs:enumeration value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Accelerate" default="0">
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:enumeration value="1"/>
						<xs:enumeration value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Decelerate" default="0">
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:enumeration value="1"/>
						<xs:enumeration value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Name" type="xs:string"/>
			<xs:attribute name="Delay" type="xs:integer" default="0"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
