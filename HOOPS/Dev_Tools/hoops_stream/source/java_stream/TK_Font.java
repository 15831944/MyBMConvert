/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_Font extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected TK_Font(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_FontUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_Font obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_Font(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_Font_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_Font_change_ownership(this, swigCPtr, true);
  }

  protected void setM_name_length(int value) {
    HJSTREAMJNI.TK_Font_m_name_length_set(swigCPtr, this, value);
  }

  protected int getM_name_length() {
    return HJSTREAMJNI.TK_Font_m_name_length_get(swigCPtr, this);
  }

  protected void setM_lookup_length(int value) {
    HJSTREAMJNI.TK_Font_m_lookup_length_set(swigCPtr, this, value);
  }

  protected int getM_lookup_length() {
    return HJSTREAMJNI.TK_Font_m_lookup_length_get(swigCPtr, this);
  }

  protected void setM_length(int value) {
    HJSTREAMJNI.TK_Font_m_length_set(swigCPtr, this, value);
  }

  protected int getM_length() {
    return HJSTREAMJNI.TK_Font_m_length_get(swigCPtr, this);
  }

  protected void setM_type(short value) {
    HJSTREAMJNI.TK_Font_m_type_set(swigCPtr, this, value);
  }

  protected short getM_type() {
    return HJSTREAMJNI.TK_Font_m_type_get(swigCPtr, this);
  }

  protected void setM_encoding(short value) {
    HJSTREAMJNI.TK_Font_m_encoding_set(swigCPtr, this, value);
  }

  protected short getM_encoding() {
    return HJSTREAMJNI.TK_Font_m_encoding_get(swigCPtr, this);
  }

  protected void set_bytes(int size, String bytes) {
    HJSTREAMJNI.TK_Font_set_bytes__SWIG_0(swigCPtr, this, size, bytes);
  }

  protected void set_bytes(int size) {
    HJSTREAMJNI.TK_Font_set_bytes__SWIG_1(swigCPtr, this, size);
  }

  protected void set_name(String string) {
    HJSTREAMJNI.TK_Font_set_name__SWIG_0(swigCPtr, this, string);
  }

  protected void set_name(int length) {
    HJSTREAMJNI.TK_Font_set_name__SWIG_1(swigCPtr, this, length);
  }

  protected void set_lookup(String string) {
    HJSTREAMJNI.TK_Font_set_lookup__SWIG_0(swigCPtr, this, string);
  }

  protected void set_lookup(int length) {
    HJSTREAMJNI.TK_Font_set_lookup__SWIG_1(swigCPtr, this, length);
  }

  public TK_Font() {
    this(HJSTREAMJNI.new_TK_Font(), true);
    HJSTREAMJNI.TK_Font_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Font.class) ? HJSTREAMJNI.TK_Font_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Font_ReadSwigExplicitTK_Font(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Font.class) ? HJSTREAMJNI.TK_Font_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Font_WriteSwigExplicitTK_Font(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Clone(BStreamFileToolkit tk, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    return TK_Status.swigToEnum((getClass() == TK_Font.class) ? HJSTREAMJNI.TK_Font_Clone(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)) : HJSTREAMJNI.TK_Font_CloneSwigExplicitTK_Font(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Font_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Font_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public void Reset() {
    if (getClass() == TK_Font.class) HJSTREAMJNI.TK_Font_Reset(swigCPtr, this); else HJSTREAMJNI.TK_Font_ResetSwigExplicitTK_Font(swigCPtr, this);
  }

  public void SetType(int t) {
    HJSTREAMJNI.TK_Font_SetType(swigCPtr, this, t);
  }

  public int GetType() {
    return HJSTREAMJNI.TK_Font_GetType(swigCPtr, this);
  }

  public void SetBytes(int size, String bytes) {
    HJSTREAMJNI.TK_Font_SetBytes__SWIG_0(swigCPtr, this, size, bytes);
  }

  public void SetBytes(int size) {
    HJSTREAMJNI.TK_Font_SetBytes__SWIG_1(swigCPtr, this, size);
  }

  public int GetBytesCount() {
    return HJSTREAMJNI.TK_Font_GetBytesCount(swigCPtr, this);
  }

  public String GetBytes() {return HJSTREAMJNI.TK_Font_GetBytes__SWIG_0(swigCPtr, this);}

  public void SetName(String string) {
    HJSTREAMJNI.TK_Font_SetName__SWIG_0(swigCPtr, this, string);
  }

  public void SetName(int length) {
    HJSTREAMJNI.TK_Font_SetName__SWIG_1(swigCPtr, this, length);
  }

  public String GetName() {return HJSTREAMJNI.TK_Font_GetName__SWIG_0(swigCPtr, this);}

  public void SetLookup(String string) {
    HJSTREAMJNI.TK_Font_SetLookup__SWIG_0(swigCPtr, this, string);
  }

  public void SetLookup(int length) {
    HJSTREAMJNI.TK_Font_SetLookup__SWIG_1(swigCPtr, this, length);
  }

  public String GetLookup() {return HJSTREAMJNI.TK_Font_GetLookup__SWIG_0(swigCPtr, this);}

  public void SetEncoding(int e) {
    HJSTREAMJNI.TK_Font_SetEncoding(swigCPtr, this, e);
  }

  public int GetEncoding() {
    return HJSTREAMJNI.TK_Font_GetEncoding(swigCPtr, this);
  }

}
