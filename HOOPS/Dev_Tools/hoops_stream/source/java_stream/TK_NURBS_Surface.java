/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_NURBS_Surface extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected TK_NURBS_Surface(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_NURBS_SurfaceUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_NURBS_Surface obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_NURBS_Surface(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_NURBS_Surface_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_NURBS_Surface_change_ownership(this, swigCPtr, true);
  }

  protected void setM_optionals(short value) {
    HJSTREAMJNI.TK_NURBS_Surface_m_optionals_set(swigCPtr, this, value);
  }

  protected short getM_optionals() {
    return HJSTREAMJNI.TK_NURBS_Surface_m_optionals_get(swigCPtr, this);
  }

  protected void setM_degree(SWIGTYPE_p_unsigned_char value) {
    HJSTREAMJNI.TK_NURBS_Surface_m_degree_set(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(value));
  }

  protected SWIGTYPE_p_unsigned_char getM_degree() {
    long cPtr = HJSTREAMJNI.TK_NURBS_Surface_m_degree_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  protected void setM_size(SWIGTYPE_p_int value) {
    HJSTREAMJNI.TK_NURBS_Surface_m_size_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
  }

  protected SWIGTYPE_p_int getM_size() {
    long cPtr = HJSTREAMJNI.TK_NURBS_Surface_m_size_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  protected void setM_dcontrol_points(double[] value) {
    HJSTREAMJNI.TK_NURBS_Surface_m_dcontrol_points_set(swigCPtr, this, value);
  }

  protected double[] getM_dcontrol_points() {return HJSTREAMJNI.TK_NURBS_Surface_m_dcontrol_points_get(swigCPtr, this);}

  protected void setM_trims(HT_NURBS_Trim value) {
    HJSTREAMJNI.TK_NURBS_Surface_m_trims_set(swigCPtr, this, HT_NURBS_Trim.getCPtr(value), value);
  }

  protected HT_NURBS_Trim getM_trims() {
    long cPtr = HJSTREAMJNI.TK_NURBS_Surface_m_trims_get(swigCPtr, this);
    return (cPtr == 0) ? null : new HT_NURBS_Trim(cPtr, false);
  }

  protected void setM_current_trim(HT_NURBS_Trim value) {
    HJSTREAMJNI.TK_NURBS_Surface_m_current_trim_set(swigCPtr, this, HT_NURBS_Trim.getCPtr(value), value);
  }

  protected HT_NURBS_Trim getM_current_trim() {
    long cPtr = HJSTREAMJNI.TK_NURBS_Surface_m_current_trim_get(swigCPtr, this);
    return (cPtr == 0) ? null : new HT_NURBS_Trim(cPtr, false);
  }

  public TK_NURBS_Surface() {
    this(HJSTREAMJNI.new_TK_NURBS_Surface(), true);
    HJSTREAMJNI.TK_NURBS_Surface_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_NURBS_Surface.class) ? HJSTREAMJNI.TK_NURBS_Surface_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_NURBS_Surface_ReadSwigExplicitTK_NURBS_Surface(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_NURBS_Surface.class) ? HJSTREAMJNI.TK_NURBS_Surface_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_NURBS_Surface_WriteSwigExplicitTK_NURBS_Surface(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Clone(BStreamFileToolkit tk, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    return TK_Status.swigToEnum((getClass() == TK_NURBS_Surface.class) ? HJSTREAMJNI.TK_NURBS_Surface_Clone(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)) : HJSTREAMJNI.TK_NURBS_Surface_CloneSwigExplicitTK_NURBS_Surface(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_NURBS_Surface_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_NURBS_Surface_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public void Reset() {
    if (getClass() == TK_NURBS_Surface.class) HJSTREAMJNI.TK_NURBS_Surface_Reset(swigCPtr, this); else HJSTREAMJNI.TK_NURBS_Surface_ResetSwigExplicitTK_NURBS_Surface(swigCPtr, this);
  }

  public void SetSurface(int u_degree, int v_degree, int u_size, int v_size, float[] points, float[] weights, float[] u_knots, float[] v_knots) {
    HJSTREAMJNI.TK_NURBS_Surface_SetSurface__SWIG_0(swigCPtr, this, u_degree, v_degree, u_size, v_size, points, weights, u_knots, v_knots);
  }

  public void SetSurface(int u_degree, int v_degree, int u_size, int v_size, float[] points, float[] weights, float[] u_knots) {
    HJSTREAMJNI.TK_NURBS_Surface_SetSurface__SWIG_1(swigCPtr, this, u_degree, v_degree, u_size, v_size, points, weights, u_knots);
  }

  public void SetSurface(int u_degree, int v_degree, int u_size, int v_size, float[] points, float[] weights) {
    HJSTREAMJNI.TK_NURBS_Surface_SetSurface__SWIG_2(swigCPtr, this, u_degree, v_degree, u_size, v_size, points, weights);
  }

  public void SetSurface(int u_degree, int v_degree, int u_size, int v_size, float[] points) {
    HJSTREAMJNI.TK_NURBS_Surface_SetSurface__SWIG_3(swigCPtr, this, u_degree, v_degree, u_size, v_size, points);
  }

  public void SetSurface(int u_degree, int v_degree, int u_size, int v_size) {
    HJSTREAMJNI.TK_NURBS_Surface_SetSurface__SWIG_4(swigCPtr, this, u_degree, v_degree, u_size, v_size);
  }

  public void SetDSurface(int u_degree, int v_degree, int u_size, int v_size, double[] points, float[] weights, float[] u_knots, float[] v_knots) {
    HJSTREAMJNI.TK_NURBS_Surface_SetDSurface__SWIG_0(swigCPtr, this, u_degree, v_degree, u_size, v_size, points, weights, u_knots, v_knots);
  }

  public void SetDSurface(int u_degree, int v_degree, int u_size, int v_size, double[] points, float[] weights, float[] u_knots) {
    HJSTREAMJNI.TK_NURBS_Surface_SetDSurface__SWIG_1(swigCPtr, this, u_degree, v_degree, u_size, v_size, points, weights, u_knots);
  }

  public void SetDSurface(int u_degree, int v_degree, int u_size, int v_size, double[] points, float[] weights) {
    HJSTREAMJNI.TK_NURBS_Surface_SetDSurface__SWIG_2(swigCPtr, this, u_degree, v_degree, u_size, v_size, points, weights);
  }

  public void SetDSurface(int u_degree, int v_degree, int u_size, int v_size, double[] points) {
    HJSTREAMJNI.TK_NURBS_Surface_SetDSurface__SWIG_3(swigCPtr, this, u_degree, v_degree, u_size, v_size, points);
  }

  public void SetDSurface(int u_degree, int v_degree, int u_size, int v_size) {
    HJSTREAMJNI.TK_NURBS_Surface_SetDSurface__SWIG_4(swigCPtr, this, u_degree, v_degree, u_size, v_size);
  }

  public double[] GetDPoints() {return HJSTREAMJNI.TK_NURBS_Surface_GetDPoints__SWIG_0(swigCPtr, this);}

  public int GetUDegree() {
    return HJSTREAMJNI.TK_NURBS_Surface_GetUDegree(swigCPtr, this);
  }

  public int GetVDegree() {
    return HJSTREAMJNI.TK_NURBS_Surface_GetVDegree(swigCPtr, this);
  }

  public int GetUSize() {
    return HJSTREAMJNI.TK_NURBS_Surface_GetUSize(swigCPtr, this);
  }

  public int GetVSize() {
    return HJSTREAMJNI.TK_NURBS_Surface_GetVSize(swigCPtr, this);
  }

  public void SetOptions(int o) {
    HJSTREAMJNI.TK_NURBS_Surface_SetOptions(swigCPtr, this, o);
  }

  public int GetOptions() {
    return HJSTREAMJNI.TK_NURBS_Surface_GetOptions(swigCPtr, this);
  }

  public HT_NURBS_Trim NewTrim(int type) {
    long cPtr = HJSTREAMJNI.TK_NURBS_Surface_NewTrim__SWIG_0(swigCPtr, this, type);
    return (cPtr == 0) ? null : new HT_NURBS_Trim(cPtr, false);
  }

  public HT_NURBS_Trim NewTrim() {
    long cPtr = HJSTREAMJNI.TK_NURBS_Surface_NewTrim__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new HT_NURBS_Trim(cPtr, false);
  }

  public HT_NURBS_Trim GetTrims() {
    long cPtr = HJSTREAMJNI.TK_NURBS_Surface_GetTrims(swigCPtr, this);
    return (cPtr == 0) ? null : new HT_NURBS_Trim(cPtr, false);
  }

}
