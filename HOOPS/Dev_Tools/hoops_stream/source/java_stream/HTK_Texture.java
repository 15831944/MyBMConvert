/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class HTK_Texture extends TK_Texture {
  private long swigCPtr;

  protected HTK_Texture(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGHTK_TextureUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HTK_Texture obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_HTK_Texture(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.HTK_Texture_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.HTK_Texture_change_ownership(this, swigCPtr, true);
  }

  protected void setMh_stage(int value) {
    HJSTREAMJNI.HTK_Texture_mh_stage_set(swigCPtr, this, value);
  }

  protected int getMh_stage() {
    return HJSTREAMJNI.HTK_Texture_mh_stage_get(swigCPtr, this);
  }

  protected void setM_referee(BBaseOpcodeHandler value) {
    HJSTREAMJNI.HTK_Texture_m_referee_set(swigCPtr, this, BBaseOpcodeHandler.getCPtr(value), value);
  }

  protected BBaseOpcodeHandler getM_referee() {
    long cPtr = HJSTREAMJNI.HTK_Texture_m_referee_get(swigCPtr, this);
    return (cPtr == 0) ? null : new BBaseOpcodeHandler(cPtr, false);
  }

  protected void setM_key(int value) {
    HJSTREAMJNI.HTK_Texture_m_key_set(swigCPtr, this, value);
  }

  protected int getM_key() {return HJSTREAMJNI.HTK_Texture_m_key_get(swigCPtr, this);}

  public HTK_Texture() {
    this(HJSTREAMJNI.new_HTK_Texture(), true);
    HJSTREAMJNI.HTK_Texture_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == HTK_Texture.class) ? HJSTREAMJNI.HTK_Texture_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.HTK_Texture_WriteSwigExplicitHTK_Texture(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Execute(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == HTK_Texture.class) ? HJSTREAMJNI.HTK_Texture_Execute(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.HTK_Texture_ExecuteSwigExplicitHTK_Texture(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Interpret(BStreamFileToolkit tk, int key, int variant) {
    return TK_Status.swigToEnum((getClass() == HTK_Texture.class) ? HJSTREAMJNI.HTK_Texture_Interpret__SWIG_0(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, key, variant) : HJSTREAMJNI.HTK_Texture_InterpretSwigExplicitHTK_Texture__SWIG_0(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, key, variant));
  }

  public TK_Status Interpret(BStreamFileToolkit tk, int key) {
    return TK_Status.swigToEnum((getClass() == HTK_Texture.class) ? HJSTREAMJNI.HTK_Texture_Interpret__SWIG_1(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, key) : HJSTREAMJNI.HTK_Texture_InterpretSwigExplicitHTK_Texture__SWIG_1(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, key));
  }

  public TK_Status Interpret(BStreamFileToolkit tk, int key, String special) {
    return TK_Status.swigToEnum((getClass() == HTK_Texture.class) ? HJSTREAMJNI.HTK_Texture_Interpret__SWIG_2(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, key, special) : HJSTREAMJNI.HTK_Texture_InterpretSwigExplicitHTK_Texture__SWIG_2(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, key, special));
  }

  public void Reset() {
    if (getClass() == HTK_Texture.class) HJSTREAMJNI.HTK_Texture_Reset(swigCPtr, this); else HJSTREAMJNI.HTK_Texture_ResetSwigExplicitHTK_Texture(swigCPtr, this);
  }

  public TK_Status Clone(BStreamFileToolkit tk, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    return TK_Status.swigToEnum((getClass() == HTK_Texture.class) ? HJSTREAMJNI.HTK_Texture_Clone(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)) : HJSTREAMJNI.HTK_Texture_CloneSwigExplicitHTK_Texture(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)));
  }

}
