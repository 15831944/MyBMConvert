/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public final class TKO_Camera_Projection {
  public final static TKO_Camera_Projection TKO_Camera_Perspective_Bit = new TKO_Camera_Projection("TKO_Camera_Perspective_Bit", HJSTREAMJNI.TKO_Camera_Perspective_Bit_get());
  public final static TKO_Camera_Projection TKO_Camera_Stretched_Bit = new TKO_Camera_Projection("TKO_Camera_Stretched_Bit", HJSTREAMJNI.TKO_Camera_Stretched_Bit_get());
  public final static TKO_Camera_Projection TKO_Camera_Projection_Mask = new TKO_Camera_Projection("TKO_Camera_Projection_Mask", HJSTREAMJNI.TKO_Camera_Projection_Mask_get());
  public final static TKO_Camera_Projection TKO_Camera_Orthographic = new TKO_Camera_Projection("TKO_Camera_Orthographic", HJSTREAMJNI.TKO_Camera_Orthographic_get());
  public final static TKO_Camera_Projection TKO_Camera_Perspective = new TKO_Camera_Projection("TKO_Camera_Perspective", HJSTREAMJNI.TKO_Camera_Perspective_get());
  public final static TKO_Camera_Projection TKO_Camera_Stretched = new TKO_Camera_Projection("TKO_Camera_Stretched", HJSTREAMJNI.TKO_Camera_Stretched_get());
  public final static TKO_Camera_Projection TKO_Camera_Oblique_Y = new TKO_Camera_Projection("TKO_Camera_Oblique_Y", HJSTREAMJNI.TKO_Camera_Oblique_Y_get());
  public final static TKO_Camera_Projection TKO_Camera_Oblique_X = new TKO_Camera_Projection("TKO_Camera_Oblique_X", HJSTREAMJNI.TKO_Camera_Oblique_X_get());
  public final static TKO_Camera_Projection TKO_Camera_Oblique_Mask = new TKO_Camera_Projection("TKO_Camera_Oblique_Mask", HJSTREAMJNI.TKO_Camera_Oblique_Mask_get());
  public final static TKO_Camera_Projection TKO_Camera_Near_Limit = new TKO_Camera_Projection("TKO_Camera_Near_Limit", HJSTREAMJNI.TKO_Camera_Near_Limit_get());
  public final static TKO_Camera_Projection TKO_Camera_Thumbnail = new TKO_Camera_Projection("TKO_Camera_Thumbnail", HJSTREAMJNI.TKO_Camera_Thumbnail_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static TKO_Camera_Projection swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + TKO_Camera_Projection.class + " with value " + swigValue);
  }

  private TKO_Camera_Projection(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private TKO_Camera_Projection(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private TKO_Camera_Projection(String swigName, TKO_Camera_Projection swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static TKO_Camera_Projection[] swigValues = { TKO_Camera_Perspective_Bit, TKO_Camera_Stretched_Bit, TKO_Camera_Projection_Mask, TKO_Camera_Orthographic, TKO_Camera_Perspective, TKO_Camera_Stretched, TKO_Camera_Oblique_Y, TKO_Camera_Oblique_X, TKO_Camera_Oblique_Mask, TKO_Camera_Near_Limit, TKO_Camera_Thumbnail };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

