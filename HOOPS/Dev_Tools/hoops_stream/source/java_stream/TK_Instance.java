/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_Instance extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected TK_Instance(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_InstanceUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_Instance obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_Instance(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_Instance_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_Instance_change_ownership(this, swigCPtr, true);
  }

  protected void setM_from_index(int value) {
    HJSTREAMJNI.TK_Instance_m_from_index_set(swigCPtr, this, value);
  }

  protected int getM_from_index() {
    return HJSTREAMJNI.TK_Instance_m_from_index_get(swigCPtr, this);
  }

  protected void setM_from_variant(int value) {
    HJSTREAMJNI.TK_Instance_m_from_variant_set(swigCPtr, this, value);
  }

  protected int getM_from_variant() {
    return HJSTREAMJNI.TK_Instance_m_from_variant_get(swigCPtr, this);
  }

  protected void setM_to_index(int value) {
    HJSTREAMJNI.TK_Instance_m_to_index_set(swigCPtr, this, value);
  }

  protected int getM_to_index() {
    return HJSTREAMJNI.TK_Instance_m_to_index_get(swigCPtr, this);
  }

  protected void setM_to_variant(int value) {
    HJSTREAMJNI.TK_Instance_m_to_variant_set(swigCPtr, this, value);
  }

  protected int getM_to_variant() {
    return HJSTREAMJNI.TK_Instance_m_to_variant_get(swigCPtr, this);
  }

  protected void setM_options(int value) {
    HJSTREAMJNI.TK_Instance_m_options_set(swigCPtr, this, value);
  }

  protected int getM_options() {
    return HJSTREAMJNI.TK_Instance_m_options_get(swigCPtr, this);
  }

  protected void setM_matrix(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Instance_m_matrix_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_matrix() {
    long cPtr = HJSTREAMJNI.TK_Instance_m_matrix_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public TK_Instance(int from_index, int from_variant, int to_index, int to_variant, int options, float[] xform) {
    this(HJSTREAMJNI.new_TK_Instance__SWIG_0(from_index, from_variant, to_index, to_variant, options, xform), true);
    HJSTREAMJNI.TK_Instance_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Instance(int from_index, int from_variant, int to_index, int to_variant, int options) {
    this(HJSTREAMJNI.new_TK_Instance__SWIG_1(from_index, from_variant, to_index, to_variant, options), true);
    HJSTREAMJNI.TK_Instance_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Instance(int from_index, int from_variant, int to_index, int to_variant) {
    this(HJSTREAMJNI.new_TK_Instance__SWIG_2(from_index, from_variant, to_index, to_variant), true);
    HJSTREAMJNI.TK_Instance_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Instance(int from_index, int from_variant, int to_index) {
    this(HJSTREAMJNI.new_TK_Instance__SWIG_3(from_index, from_variant, to_index), true);
    HJSTREAMJNI.TK_Instance_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Instance(int from_index, int from_variant) {
    this(HJSTREAMJNI.new_TK_Instance__SWIG_4(from_index, from_variant), true);
    HJSTREAMJNI.TK_Instance_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Instance(int from_index) {
    this(HJSTREAMJNI.new_TK_Instance__SWIG_5(from_index), true);
    HJSTREAMJNI.TK_Instance_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Instance() {
    this(HJSTREAMJNI.new_TK_Instance__SWIG_6(), true);
    HJSTREAMJNI.TK_Instance_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Instance.class) ? HJSTREAMJNI.TK_Instance_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Instance_ReadSwigExplicitTK_Instance(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Instance.class) ? HJSTREAMJNI.TK_Instance_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Instance_WriteSwigExplicitTK_Instance(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Clone(BStreamFileToolkit tk, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    return TK_Status.swigToEnum((getClass() == TK_Instance.class) ? HJSTREAMJNI.TK_Instance_Clone(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)) : HJSTREAMJNI.TK_Instance_CloneSwigExplicitTK_Instance(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Instance_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Instance_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public void Reset() {
    if (getClass() == TK_Instance.class) HJSTREAMJNI.TK_Instance_Reset(swigCPtr, this); else HJSTREAMJNI.TK_Instance_ResetSwigExplicitTK_Instance(swigCPtr, this);
  }

}
