/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_Circle extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected TK_Circle(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_CircleUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_Circle obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_Circle(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_Circle_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_Circle_change_ownership(this, swigCPtr, true);
  }

  protected void setM_points(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Circle_m_points_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_points() {
    long cPtr = HJSTREAMJNI.TK_Circle_m_points_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_center(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Circle_m_center_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_center() {
    long cPtr = HJSTREAMJNI.TK_Circle_m_center_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_dpoints(SWIGTYPE_p_double value) {
    HJSTREAMJNI.TK_Circle_m_dpoints_set(swigCPtr, this, SWIGTYPE_p_double.getCPtr(value));
  }

  protected SWIGTYPE_p_double getM_dpoints() {
    long cPtr = HJSTREAMJNI.TK_Circle_m_dpoints_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  protected void setM_dcenter(SWIGTYPE_p_double value) {
    HJSTREAMJNI.TK_Circle_m_dcenter_set(swigCPtr, this, SWIGTYPE_p_double.getCPtr(value));
  }

  protected SWIGTYPE_p_double getM_dcenter() {
    long cPtr = HJSTREAMJNI.TK_Circle_m_dcenter_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  protected void setM_flags(short value) {
    HJSTREAMJNI.TK_Circle_m_flags_set(swigCPtr, this, value);
  }

  protected short getM_flags() {
    return HJSTREAMJNI.TK_Circle_m_flags_get(swigCPtr, this);
  }

  public TK_Circle(short opcode) {
    this(HJSTREAMJNI.new_TK_Circle(opcode), true);
    HJSTREAMJNI.TK_Circle_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Circle.class) ? HJSTREAMJNI.TK_Circle_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Circle_ReadSwigExplicitTK_Circle(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Circle.class) ? HJSTREAMJNI.TK_Circle_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Circle_WriteSwigExplicitTK_Circle(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Clone(BStreamFileToolkit tk, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    return TK_Status.swigToEnum((getClass() == TK_Circle.class) ? HJSTREAMJNI.TK_Circle_Clone(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)) : HJSTREAMJNI.TK_Circle_CloneSwigExplicitTK_Circle(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Circle_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Circle_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public void Reset() {
    if (getClass() == TK_Circle.class) HJSTREAMJNI.TK_Circle_Reset(swigCPtr, this); else HJSTREAMJNI.TK_Circle_ResetSwigExplicitTK_Circle(swigCPtr, this);
  }

  public void SetStart(float x, float y, float z) {
    HJSTREAMJNI.TK_Circle_SetStart__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetStart(float[] s) {
    HJSTREAMJNI.TK_Circle_SetStart__SWIG_1(swigCPtr, this, s);
  }

  public void SetMiddle(float x, float y, float z) {
    HJSTREAMJNI.TK_Circle_SetMiddle__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetMiddle(float[] m) {
    HJSTREAMJNI.TK_Circle_SetMiddle__SWIG_1(swigCPtr, this, m);
  }

  public void SetEnd(float x, float y, float z) {
    HJSTREAMJNI.TK_Circle_SetEnd__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetEnd(float[] e) {
    HJSTREAMJNI.TK_Circle_SetEnd__SWIG_1(swigCPtr, this, e);
  }

  public void SetCenter(float x, float y, float z) {
    HJSTREAMJNI.TK_Circle_SetCenter__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetCenter(float[] c) {
    HJSTREAMJNI.TK_Circle_SetCenter__SWIG_1(swigCPtr, this, c);
  }

  public void SetPoints(float[] s, float[] m, float[] e, float[] c) {
    HJSTREAMJNI.TK_Circle_SetPoints__SWIG_0(swigCPtr, this, s, m, e, c);
  }

  public void SetPoints(float[] s, float[] m, float[] e) {
    HJSTREAMJNI.TK_Circle_SetPoints__SWIG_1(swigCPtr, this, s, m, e);
  }

  public void SetDStart(double x, double y, double z) {
    HJSTREAMJNI.TK_Circle_SetDStart__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetDStart(double[] s) {
    HJSTREAMJNI.TK_Circle_SetDStart__SWIG_1(swigCPtr, this, s);
  }

  public void SetDMiddle(double x, double y, double z) {
    HJSTREAMJNI.TK_Circle_SetDMiddle__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetDMiddle(double[] m) {
    HJSTREAMJNI.TK_Circle_SetDMiddle__SWIG_1(swigCPtr, this, m);
  }

  public void SetDEnd(double x, double y, double z) {
    HJSTREAMJNI.TK_Circle_SetDEnd__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetDEnd(double[] e) {
    HJSTREAMJNI.TK_Circle_SetDEnd__SWIG_1(swigCPtr, this, e);
  }

  public void SetDCenter(double x, double y, double z) {
    HJSTREAMJNI.TK_Circle_SetDCenter__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetDCenter(double[] c) {
    HJSTREAMJNI.TK_Circle_SetDCenter__SWIG_1(swigCPtr, this, c);
  }

  public void SetDPoints(double[] s, double[] m, double[] e, double[] c) {
    HJSTREAMJNI.TK_Circle_SetDPoints__SWIG_0(swigCPtr, this, s, m, e, c);
  }

  public void SetDPoints(double[] s, double[] m, double[] e) {
    HJSTREAMJNI.TK_Circle_SetDPoints__SWIG_1(swigCPtr, this, s, m, e);
  }

  public double[] GetDStart() {return HJSTREAMJNI.TK_Circle_GetDStart(swigCPtr, this);}

  public double[] GetDMiddle() {return HJSTREAMJNI.TK_Circle_GetDMiddle(swigCPtr, this);}

  public double[] GetDEnd() {return HJSTREAMJNI.TK_Circle_GetDEnd(swigCPtr, this);}

  public double[] GetDCenter() {return HJSTREAMJNI.TK_Circle_GetDCenter(swigCPtr, this);}

}
