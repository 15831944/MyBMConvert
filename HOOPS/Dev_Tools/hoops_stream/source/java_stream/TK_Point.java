/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_Point extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected TK_Point(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_PointUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_Point obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_Point(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_Point_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_Point_change_ownership(this, swigCPtr, true);
  }

  protected void setM_point(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Point_m_point_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_point() {
    long cPtr = HJSTREAMJNI.TK_Point_m_point_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_dpoint(SWIGTYPE_p_double value) {
    HJSTREAMJNI.TK_Point_m_dpoint_set(swigCPtr, this, SWIGTYPE_p_double.getCPtr(value));
  }

  protected SWIGTYPE_p_double getM_dpoint() {
    long cPtr = HJSTREAMJNI.TK_Point_m_dpoint_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  protected void setM_options(char value) {
    HJSTREAMJNI.TK_Point_m_options_set(swigCPtr, this, value);
  }

  protected char getM_options() {
    return HJSTREAMJNI.TK_Point_m_options_get(swigCPtr, this);
  }

  public TK_Point(short opcode) {
    this(HJSTREAMJNI.new_TK_Point(opcode), true);
    HJSTREAMJNI.TK_Point_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Point.class) ? HJSTREAMJNI.TK_Point_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Point_ReadSwigExplicitTK_Point(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Point.class) ? HJSTREAMJNI.TK_Point_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Point_WriteSwigExplicitTK_Point(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Clone(BStreamFileToolkit tk, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    return TK_Status.swigToEnum((getClass() == TK_Point.class) ? HJSTREAMJNI.TK_Point_Clone(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)) : HJSTREAMJNI.TK_Point_CloneSwigExplicitTK_Point(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Point_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Point_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public void Reset() {
    if (getClass() == TK_Point.class) HJSTREAMJNI.TK_Point_Reset(swigCPtr, this); else HJSTREAMJNI.TK_Point_ResetSwigExplicitTK_Point(swigCPtr, this);
  }

  public void SetPoint(float x, float y, float z) {
    HJSTREAMJNI.TK_Point_SetPoint__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetPoint(float[] p) {
    HJSTREAMJNI.TK_Point_SetPoint__SWIG_1(swigCPtr, this, p);
  }

  public void SetDPoint(double x, double y, double z) {
    HJSTREAMJNI.TK_Point_SetDPoint__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetDPoint(double[] p) {
    HJSTREAMJNI.TK_Point_SetDPoint__SWIG_1(swigCPtr, this, p);
  }

  public double[] GetDPoint() {return HJSTREAMJNI.TK_Point_GetDPoint(swigCPtr, this);}

  public void SetOptions(int o) {
    HJSTREAMJNI.TK_Point_SetOptions(swigCPtr, this, o);
  }

  public int GetOptions() {
    return HJSTREAMJNI.TK_Point_GetOptions(swigCPtr, this);
  }

}
