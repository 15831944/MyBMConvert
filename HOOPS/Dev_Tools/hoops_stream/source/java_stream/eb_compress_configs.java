/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class eb_compress_configs {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected eb_compress_configs(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(eb_compress_configs obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_eb_compress_configs(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setX_quantization(int value) {
    HJSTREAMJNI.eb_compress_configs_x_quantization_set(swigCPtr, this, value);
  }

  public int getX_quantization() {
    return HJSTREAMJNI.eb_compress_configs_x_quantization_get(swigCPtr, this);
  }

  public void setY_quantization(int value) {
    HJSTREAMJNI.eb_compress_configs_y_quantization_set(swigCPtr, this, value);
  }

  public int getY_quantization() {
    return HJSTREAMJNI.eb_compress_configs_y_quantization_get(swigCPtr, this);
  }

  public void setZ_quantization(int value) {
    HJSTREAMJNI.eb_compress_configs_z_quantization_set(swigCPtr, this, value);
  }

  public int getZ_quantization() {
    return HJSTREAMJNI.eb_compress_configs_z_quantization_get(swigCPtr, this);
  }

  public void setX_quantization_normals(int value) {
    HJSTREAMJNI.eb_compress_configs_x_quantization_normals_set(swigCPtr, this, value);
  }

  public int getX_quantization_normals() {
    return HJSTREAMJNI.eb_compress_configs_x_quantization_normals_get(swigCPtr, this);
  }

  public void setY_quantization_normals(int value) {
    HJSTREAMJNI.eb_compress_configs_y_quantization_normals_set(swigCPtr, this, value);
  }

  public int getY_quantization_normals() {
    return HJSTREAMJNI.eb_compress_configs_y_quantization_normals_get(swigCPtr, this);
  }

  public void setZ_quantization_normals(int value) {
    HJSTREAMJNI.eb_compress_configs_z_quantization_normals_set(swigCPtr, this, value);
  }

  public int getZ_quantization_normals() {
    return HJSTREAMJNI.eb_compress_configs_z_quantization_normals_get(swigCPtr, this);
  }

  public void setPoint_factor(float value) {
    HJSTREAMJNI.eb_compress_configs_point_factor_set(swigCPtr, this, value);
  }

  public float getPoint_factor() {
    return HJSTREAMJNI.eb_compress_configs_point_factor_get(swigCPtr, this);
  }

  public void setBounding(ET_Bounding value) {
    HJSTREAMJNI.eb_compress_configs_bounding_set(swigCPtr, this, ET_Bounding.getCPtr(value), value);
  }

  public ET_Bounding getBounding() {
    long cPtr = HJSTREAMJNI.eb_compress_configs_bounding_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ET_Bounding(cPtr, false);
  }

  public void setTarget_version(int value) {
    HJSTREAMJNI.eb_compress_configs_target_version_set(swigCPtr, this, value);
  }

  public int getTarget_version() {
    return HJSTREAMJNI.eb_compress_configs_target_version_get(swigCPtr, this);
  }

  public void setHints(int value) {
    HJSTREAMJNI.eb_compress_configs_hints_set(swigCPtr, this, value);
  }

  public int getHints() {
    return HJSTREAMJNI.eb_compress_configs_hints_get(swigCPtr, this);
  }

  public eb_compress_configs() {
    this(HJSTREAMJNI.new_eb_compress_configs(), true);
  }

}
