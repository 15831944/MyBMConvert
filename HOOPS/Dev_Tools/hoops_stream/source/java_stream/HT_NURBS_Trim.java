/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class HT_NURBS_Trim extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected HT_NURBS_Trim(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGHT_NURBS_TrimUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HT_NURBS_Trim obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_HT_NURBS_Trim(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void SetPoly(int count, float[] points) {
    HJSTREAMJNI.HT_NURBS_Trim_SetPoly__SWIG_0(swigCPtr, this, count, points);
  }

  public void SetPoly(int count) {
    HJSTREAMJNI.HT_NURBS_Trim_SetPoly__SWIG_1(swigCPtr, this, count);
  }

  public void SetCurve(int degree, int control_count, float[] points, float[] weights, float[] knots, float start_u, float end_u) {
    HJSTREAMJNI.HT_NURBS_Trim_SetCurve__SWIG_0(swigCPtr, this, degree, control_count, points, weights, knots, start_u, end_u);
  }

  public void SetCurve(int degree, int control_count, float[] points, float[] weights, float[] knots, float start_u) {
    HJSTREAMJNI.HT_NURBS_Trim_SetCurve__SWIG_1(swigCPtr, this, degree, control_count, points, weights, knots, start_u);
  }

  public void SetCurve(int degree, int control_count, float[] points, float[] weights, float[] knots) {
    HJSTREAMJNI.HT_NURBS_Trim_SetCurve__SWIG_2(swigCPtr, this, degree, control_count, points, weights, knots);
  }

  public void SetCurve(int degree, int control_count, float[] points, float[] weights) {
    HJSTREAMJNI.HT_NURBS_Trim_SetCurve__SWIG_3(swigCPtr, this, degree, control_count, points, weights);
  }

  public void SetCurve(int degree, int control_count, float[] points) {
    HJSTREAMJNI.HT_NURBS_Trim_SetCurve__SWIG_4(swigCPtr, this, degree, control_count, points);
  }

  public void SetCurve(int degree, int control_count) {
    HJSTREAMJNI.HT_NURBS_Trim_SetCurve__SWIG_5(swigCPtr, this, degree, control_count);
  }

  public void SetCollection() {
    HJSTREAMJNI.HT_NURBS_Trim_SetCollection(swigCPtr, this);
  }

  public void SetOptions(int o) {
    HJSTREAMJNI.HT_NURBS_Trim_SetOptions(swigCPtr, this, o);
  }

  public void SetList(HT_NURBS_Trim node) {
    HJSTREAMJNI.HT_NURBS_Trim_SetList(swigCPtr, this, HT_NURBS_Trim.getCPtr(node), node);
  }

  public void SetNext(HT_NURBS_Trim next) {
    HJSTREAMJNI.HT_NURBS_Trim_SetNext(swigCPtr, this, HT_NURBS_Trim.getCPtr(next), next);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.HT_NURBS_Trim_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.HT_NURBS_Trim_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.HT_NURBS_Trim_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.HT_NURBS_Trim_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status read_collection_ascii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.HT_NURBS_Trim_read_collection_ascii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status write_collection_ascii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.HT_NURBS_Trim_write_collection_ascii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public HT_NURBS_Trim GetNext() {
    long cPtr = HJSTREAMJNI.HT_NURBS_Trim_GetNext(swigCPtr, this);
    return (cPtr == 0) ? null : new HT_NURBS_Trim(cPtr, false);
  }

  public int GetType() {
    return HJSTREAMJNI.HT_NURBS_Trim_GetType(swigCPtr, this);
  }

  public int GetCount() {
    return HJSTREAMJNI.HT_NURBS_Trim_GetCount(swigCPtr, this);
  }

  public int GetDegree() {
    return HJSTREAMJNI.HT_NURBS_Trim_GetDegree(swigCPtr, this);
  }

  public int GetOptions() {
    return HJSTREAMJNI.HT_NURBS_Trim_GetOptions(swigCPtr, this);
  }

  public HT_NURBS_Trim GetList() {
    long cPtr = HJSTREAMJNI.HT_NURBS_Trim_GetList__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new HT_NURBS_Trim(cPtr, false);
  }

  public void GetPoints(float[] values, int count) {
    HJSTREAMJNI.HT_NURBS_Trim_GetPoints(swigCPtr, this, values, count);
  }

  public void GetWeights(float[] values, int count) {
    HJSTREAMJNI.HT_NURBS_Trim_GetWeights(swigCPtr, this, values, count);
  }

  public void GetKnots(float[] values, int count) {
    HJSTREAMJNI.HT_NURBS_Trim_GetKnots(swigCPtr, this, values, count);
  }

}
