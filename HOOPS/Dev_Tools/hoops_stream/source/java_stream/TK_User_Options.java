/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_User_Options extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected TK_User_Options(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_User_OptionsUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_User_Options obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_User_Options(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_User_Options_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_User_Options_change_ownership(this, swigCPtr, true);
  }

  protected void setM_length(int value) {
    HJSTREAMJNI.TK_User_Options_m_length_set(swigCPtr, this, value);
  }

  protected int getM_length() {
    return HJSTREAMJNI.TK_User_Options_m_length_get(swigCPtr, this);
  }

  protected void setM_indices(BBaseOpcodeHandler value) {
    HJSTREAMJNI.TK_User_Options_m_indices_set(swigCPtr, this, BBaseOpcodeHandler.getCPtr(value), value);
  }

  protected BBaseOpcodeHandler getM_indices() {
    long cPtr = HJSTREAMJNI.TK_User_Options_m_indices_get(swigCPtr, this);
    return (cPtr == 0) ? null : new BBaseOpcodeHandler(cPtr, false);
  }

  protected void setM_unicode(BBaseOpcodeHandler value) {
    HJSTREAMJNI.TK_User_Options_m_unicode_set(swigCPtr, this, BBaseOpcodeHandler.getCPtr(value), value);
  }

  protected BBaseOpcodeHandler getM_unicode() {
    long cPtr = HJSTREAMJNI.TK_User_Options_m_unicode_get(swigCPtr, this);
    return (cPtr == 0) ? null : new BBaseOpcodeHandler(cPtr, false);
  }

  protected void setM_index_data(BBaseOpcodeHandler value) {
    HJSTREAMJNI.TK_User_Options_m_index_data_set(swigCPtr, this, BBaseOpcodeHandler.getCPtr(value), value);
  }

  protected BBaseOpcodeHandler getM_index_data() {
    long cPtr = HJSTREAMJNI.TK_User_Options_m_index_data_get(swigCPtr, this);
    return (cPtr == 0) ? null : new BBaseOpcodeHandler(cPtr, false);
  }

  protected void set_options(String options) {
    HJSTREAMJNI.TK_User_Options_set_options__SWIG_0(swigCPtr, this, options);
  }

  protected void set_options(int length) {
    HJSTREAMJNI.TK_User_Options_set_options__SWIG_1(swigCPtr, this, length);
  }

  public TK_User_Options() {
    this(HJSTREAMJNI.new_TK_User_Options(), true);
    HJSTREAMJNI.TK_User_Options_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_User_Options.class) ? HJSTREAMJNI.TK_User_Options_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_User_Options_ReadSwigExplicitTK_User_Options(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_User_Options.class) ? HJSTREAMJNI.TK_User_Options_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_User_Options_WriteSwigExplicitTK_User_Options(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Clone(BStreamFileToolkit tk, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    return TK_Status.swigToEnum((getClass() == TK_User_Options.class) ? HJSTREAMJNI.TK_User_Options_Clone(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)) : HJSTREAMJNI.TK_User_Options_CloneSwigExplicitTK_User_Options(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_User_Options_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_User_Options_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public void Reset() {
    if (getClass() == TK_User_Options.class) HJSTREAMJNI.TK_User_Options_Reset(swigCPtr, this); else HJSTREAMJNI.TK_User_Options_ResetSwigExplicitTK_User_Options(swigCPtr, this);
  }

  public void SetOptions(String options) {
    HJSTREAMJNI.TK_User_Options_SetOptions__SWIG_0(swigCPtr, this, options);
  }

  public void SetOptions(int length) {
    HJSTREAMJNI.TK_User_Options_SetOptions__SWIG_1(swigCPtr, this, length);
  }

  public String GetOptions() {return HJSTREAMJNI.TK_User_Options_GetOptions__SWIG_0(swigCPtr, this);}

  public int GetLength() {
    return HJSTREAMJNI.TK_User_Options_GetLength(swigCPtr, this);
  }

}
