/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_Shell extends TK_Polyhedron {
  private long swigCPtr;

  protected TK_Shell(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_ShellUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_Shell obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_Shell(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_Shell_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_Shell_change_ownership(this, swigCPtr, true);
  }

  protected void setM_substage(int value) {
    HJSTREAMJNI.TK_Shell_m_substage_set(swigCPtr, this, value);
  }

  protected int getM_substage() {
    return HJSTREAMJNI.TK_Shell_m_substage_get(swigCPtr, this);
  }

  protected void setM_compression_scheme(short value) {
    HJSTREAMJNI.TK_Shell_m_compression_scheme_set(swigCPtr, this, value);
  }

  protected short getM_compression_scheme() {
    return HJSTREAMJNI.TK_Shell_m_compression_scheme_get(swigCPtr, this);
  }

  protected void setM_flistlen(int value) {
    HJSTREAMJNI.TK_Shell_m_flistlen_set(swigCPtr, this, value);
  }

  protected int getM_flistlen() {
    return HJSTREAMJNI.TK_Shell_m_flistlen_get(swigCPtr, this);
  }

  protected void setM_lodlevel(char value) {
    HJSTREAMJNI.TK_Shell_m_lodlevel_set(swigCPtr, this, value);
  }

  protected char getM_lodlevel() {
    return HJSTREAMJNI.TK_Shell_m_lodlevel_get(swigCPtr, this);
  }

  protected TK_Status SetFaces(int length, int[] face_list) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Shell_SetFaces__SWIG_0(swigCPtr, this, length, face_list));
  }

  protected TK_Status SetFaces(int length) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Shell_SetFaces__SWIG_1(swigCPtr, this, length));
  }

  protected TK_Status SetLodLevel(int level) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Shell_SetLodLevel(swigCPtr, this, level));
  }

  protected int GetFacesLength() {
    return HJSTREAMJNI.TK_Shell_GetFacesLength(swigCPtr, this);
  }

  protected int GetLodLevel() {
    return HJSTREAMJNI.TK_Shell_GetLodLevel(swigCPtr, this);
  }

  protected TK_Status EnumerateEdges() {
    return TK_Status.swigToEnum((getClass() == TK_Shell.class) ? HJSTREAMJNI.TK_Shell_EnumerateEdges(swigCPtr, this) : HJSTREAMJNI.TK_Shell_EnumerateEdgesSwigExplicitTK_Shell(swigCPtr, this));
  }

  public TK_Shell() {
    this(HJSTREAMJNI.new_TK_Shell(), true);
    HJSTREAMJNI.TK_Shell_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void set_flist(int count, int[] list) {
    HJSTREAMJNI.TK_Shell_set_flist__SWIG_0(swigCPtr, this, count, list);
  }

  public void set_flist(int count) {
    HJSTREAMJNI.TK_Shell_set_flist__SWIG_1(swigCPtr, this, count);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Shell.class) ? HJSTREAMJNI.TK_Shell_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Shell_ReadSwigExplicitTK_Shell(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Shell.class) ? HJSTREAMJNI.TK_Shell_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Shell_WriteSwigExplicitTK_Shell(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Shell_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Shell_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public void Reset() {
    if (getClass() == TK_Shell.class) HJSTREAMJNI.TK_Shell_Reset(swigCPtr, this); else HJSTREAMJNI.TK_Shell_ResetSwigExplicitTK_Shell(swigCPtr, this);
  }

}
