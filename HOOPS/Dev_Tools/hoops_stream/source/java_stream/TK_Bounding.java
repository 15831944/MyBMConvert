/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_Bounding extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected TK_Bounding(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_BoundingUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_Bounding obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_Bounding(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_Bounding_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_Bounding_change_ownership(this, swigCPtr, true);
  }

  protected void setM_dvalues(SWIGTYPE_p_double value) {
    HJSTREAMJNI.TK_Bounding_m_dvalues_set(swigCPtr, this, SWIGTYPE_p_double.getCPtr(value));
  }

  protected SWIGTYPE_p_double getM_dvalues() {
    long cPtr = HJSTREAMJNI.TK_Bounding_m_dvalues_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  protected void setM_values(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Bounding_m_values_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_values() {
    long cPtr = HJSTREAMJNI.TK_Bounding_m_values_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_type(char value) {
    HJSTREAMJNI.TK_Bounding_m_type_set(swigCPtr, this, value);
  }

  protected char getM_type() {
    return HJSTREAMJNI.TK_Bounding_m_type_get(swigCPtr, this);
  }

  protected void setM_is_valid(boolean value) {
    HJSTREAMJNI.TK_Bounding_m_is_valid_set(swigCPtr, this, value);
  }

  protected boolean getM_is_valid() {
    return HJSTREAMJNI.TK_Bounding_m_is_valid_get(swigCPtr, this);
  }

  public TK_Bounding(short opcode) {
    this(HJSTREAMJNI.new_TK_Bounding__SWIG_0(opcode), true);
    HJSTREAMJNI.TK_Bounding_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Bounding(short opcode, float[] min, float[] max) {
    this(HJSTREAMJNI.new_TK_Bounding__SWIG_1(opcode, min, max), true);
    HJSTREAMJNI.TK_Bounding_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Bounding(short opcode, float[] center, float radius) {
    this(HJSTREAMJNI.new_TK_Bounding__SWIG_2(opcode, center, radius), true);
    HJSTREAMJNI.TK_Bounding_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Bounding(short opcode, double[] min, double[] max) {
    this(HJSTREAMJNI.new_TK_Bounding__SWIG_3(opcode, min, max), true);
    HJSTREAMJNI.TK_Bounding_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Bounding(short opcode, double[] center, double radius) {
    this(HJSTREAMJNI.new_TK_Bounding__SWIG_4(opcode, center, radius), true);
    HJSTREAMJNI.TK_Bounding_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Bounding.class) ? HJSTREAMJNI.TK_Bounding_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Bounding_ReadSwigExplicitTK_Bounding(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Bounding.class) ? HJSTREAMJNI.TK_Bounding_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Bounding_WriteSwigExplicitTK_Bounding(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Clone(BStreamFileToolkit tk, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    return TK_Status.swigToEnum((getClass() == TK_Bounding.class) ? HJSTREAMJNI.TK_Bounding_Clone(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)) : HJSTREAMJNI.TK_Bounding_CloneSwigExplicitTK_Bounding(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Bounding_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Bounding_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

}
