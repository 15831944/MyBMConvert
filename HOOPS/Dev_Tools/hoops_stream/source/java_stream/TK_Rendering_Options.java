/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_Rendering_Options extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected TK_Rendering_Options(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_Rendering_OptionsUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_Rendering_Options obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_Rendering_Options(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_Rendering_Options_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_Rendering_Options_change_ownership(this, swigCPtr, true);
  }

  protected void setM_mask(SWIGTYPE_p_int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_mask_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
  }

  protected SWIGTYPE_p_int getM_mask() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_mask_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  protected void setM_value(SWIGTYPE_p_int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_value_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
  }

  protected SWIGTYPE_p_int getM_value() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_value_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  protected void setM_hsr(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_hsr_set(swigCPtr, this, value);
  }

  protected short getM_hsr() {
    return HJSTREAMJNI.TK_Rendering_Options_m_hsr_get(swigCPtr, this);
  }

  protected void setM_tq(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_tq_set(swigCPtr, this, value);
  }

  protected short getM_tq() {
    return HJSTREAMJNI.TK_Rendering_Options_m_tq_get(swigCPtr, this);
  }

  protected void setM_debug(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_debug_set(swigCPtr, this, value);
  }

  protected int getM_debug() {
    return HJSTREAMJNI.TK_Rendering_Options_m_debug_get(swigCPtr, this);
  }

  protected void setM_face_displacement(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_face_displacement_set(swigCPtr, this, value);
  }

  protected int getM_face_displacement() {
    return HJSTREAMJNI.TK_Rendering_Options_m_face_displacement_get(swigCPtr, this);
  }

  protected void setM_vertex_displacement(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_vertex_displacement_set(swigCPtr, this, value);
  }

  protected int getM_vertex_displacement() {
    return HJSTREAMJNI.TK_Rendering_Options_m_vertex_displacement_get(swigCPtr, this);
  }

  protected void setM_fog_limits(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_fog_limits_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_fog_limits() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_fog_limits_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_lock(Lock_Masks value) {
    HJSTREAMJNI.TK_Rendering_Options_m_lock_set(swigCPtr, this, Lock_Masks.getCPtr(value), value);
  }

  protected Lock_Masks getM_lock() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_lock_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Lock_Masks(cPtr, false);
  }

  protected void setM_forced(Lock_Masks value) {
    HJSTREAMJNI.TK_Rendering_Options_m_forced_set(swigCPtr, this, Lock_Masks.getCPtr(value), value);
  }

  protected Lock_Masks getM_forced() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_forced_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Lock_Masks(cPtr, false);
  }

  protected void setM_buffer_options_mask(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_buffer_options_mask_set(swigCPtr, this, value);
  }

  protected short getM_buffer_options_mask() {
    return HJSTREAMJNI.TK_Rendering_Options_m_buffer_options_mask_get(swigCPtr, this);
  }

  protected void setM_buffer_options_value(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_buffer_options_value_set(swigCPtr, this, value);
  }

  protected short getM_buffer_options_value() {
    return HJSTREAMJNI.TK_Rendering_Options_m_buffer_options_value_get(swigCPtr, this);
  }

  protected void setM_buffer_size_limit(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_buffer_size_limit_set(swigCPtr, this, value);
  }

  protected int getM_buffer_size_limit() {
    return HJSTREAMJNI.TK_Rendering_Options_m_buffer_size_limit_get(swigCPtr, this);
  }

  protected void setM_hlr_options(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_hlr_options_set(swigCPtr, this, value);
  }

  protected int getM_hlr_options() {
    return HJSTREAMJNI.TK_Rendering_Options_m_hlr_options_get(swigCPtr, this);
  }

  protected void setM_hlr_dim_factor(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_hlr_dim_factor_set(swigCPtr, this, value);
  }

  protected float getM_hlr_dim_factor() {
    return HJSTREAMJNI.TK_Rendering_Options_m_hlr_dim_factor_get(swigCPtr, this);
  }

  protected void setM_hlr_face_displacement(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_hlr_face_displacement_set(swigCPtr, this, value);
  }

  protected float getM_hlr_face_displacement() {
    return HJSTREAMJNI.TK_Rendering_Options_m_hlr_face_displacement_get(swigCPtr, this);
  }

  protected void setM_hlr_transparency_cutoff(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_hlr_transparency_cutoff_set(swigCPtr, this, value);
  }

  protected float getM_hlr_transparency_cutoff() {
    return HJSTREAMJNI.TK_Rendering_Options_m_hlr_transparency_cutoff_get(swigCPtr, this);
  }

  protected void setM_hlr_line_pattern(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_hlr_line_pattern_set(swigCPtr, this, value);
  }

  protected int getM_hlr_line_pattern() {
    return HJSTREAMJNI.TK_Rendering_Options_m_hlr_line_pattern_get(swigCPtr, this);
  }

  protected void setM_hlr_color(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_hlr_color_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_hlr_color() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_hlr_color_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_hlr_weight(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_hlr_weight_set(swigCPtr, this, value);
  }

  protected float getM_hlr_weight() {
    return HJSTREAMJNI.TK_Rendering_Options_m_hlr_weight_get(swigCPtr, this);
  }

  protected void setM_hlr_weight_units(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_hlr_weight_units_set(swigCPtr, this, value);
  }

  protected short getM_hlr_weight_units() {
    return HJSTREAMJNI.TK_Rendering_Options_m_hlr_weight_units_get(swigCPtr, this);
  }

  protected void setM_hlr_hsr_algorithm(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_hlr_hsr_algorithm_set(swigCPtr, this, value);
  }

  protected short getM_hlr_hsr_algorithm() {
    return HJSTREAMJNI.TK_Rendering_Options_m_hlr_hsr_algorithm_get(swigCPtr, this);
  }

  protected void setM_contour_options(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_contour_options_set(swigCPtr, this, value);
  }

  protected int getM_contour_options() {
    return HJSTREAMJNI.TK_Rendering_Options_m_contour_options_get(swigCPtr, this);
  }

  protected void setM_isoline_options(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_isoline_options_set(swigCPtr, this, value);
  }

  protected int getM_isoline_options() {
    return HJSTREAMJNI.TK_Rendering_Options_m_isoline_options_get(swigCPtr, this);
  }

  protected void setM_contour_value_adjustment(char value) {
    HJSTREAMJNI.TK_Rendering_Options_m_contour_value_adjustment_set(swigCPtr, this, value);
  }

  protected char getM_contour_value_adjustment() {
    return HJSTREAMJNI.TK_Rendering_Options_m_contour_value_adjustment_get(swigCPtr, this);
  }

  protected void setM_contour_value_scale(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_contour_value_scale_set(swigCPtr, this, value);
  }

  protected float getM_contour_value_scale() {
    return HJSTREAMJNI.TK_Rendering_Options_m_contour_value_scale_get(swigCPtr, this);
  }

  protected void setM_contour_value_translate(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_contour_value_translate_set(swigCPtr, this, value);
  }

  protected float getM_contour_value_translate() {
    return HJSTREAMJNI.TK_Rendering_Options_m_contour_value_translate_get(swigCPtr, this);
  }

  protected void setM_isoline_position_type(char value) {
    HJSTREAMJNI.TK_Rendering_Options_m_isoline_position_type_set(swigCPtr, this, value);
  }

  protected char getM_isoline_position_type() {
    return HJSTREAMJNI.TK_Rendering_Options_m_isoline_position_type_get(swigCPtr, this);
  }

  protected void setM_isoline_position_count(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_isoline_position_count_set(swigCPtr, this, value);
  }

  protected int getM_isoline_position_count() {
    return HJSTREAMJNI.TK_Rendering_Options_m_isoline_position_count_get(swigCPtr, this);
  }

  protected void setM_isoline_color_count(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_isoline_color_count_set(swigCPtr, this, value);
  }

  protected int getM_isoline_color_count() {
    return HJSTREAMJNI.TK_Rendering_Options_m_isoline_color_count_get(swigCPtr, this);
  }

  protected void setM_isoline_pattern_count(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_isoline_pattern_count_set(swigCPtr, this, value);
  }

  protected int getM_isoline_pattern_count() {
    return HJSTREAMJNI.TK_Rendering_Options_m_isoline_pattern_count_get(swigCPtr, this);
  }

  protected void setM_isoline_patterns(SWIGTYPE_p_p_char value) {
    HJSTREAMJNI.TK_Rendering_Options_m_isoline_patterns_set(swigCPtr, this, SWIGTYPE_p_p_char.getCPtr(value));
  }

  protected SWIGTYPE_p_p_char getM_isoline_patterns() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_isoline_patterns_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  protected void setM_isoline_weight_count(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_isoline_weight_count_set(swigCPtr, this, value);
  }

  protected int getM_isoline_weight_count() {
    return HJSTREAMJNI.TK_Rendering_Options_m_isoline_weight_count_get(swigCPtr, this);
  }

  protected void setM_tint_options(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_tint_options_set(swigCPtr, this, value);
  }

  protected int getM_tint_options() {
    return HJSTREAMJNI.TK_Rendering_Options_m_tint_options_get(swigCPtr, this);
  }

  protected void setM_tint_color(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_tint_color_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_tint_color() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_tint_color_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_tint_range(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_tint_range_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_tint_range() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_tint_range_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_tint_effect(char value) {
    HJSTREAMJNI.TK_Rendering_Options_m_tint_effect_set(swigCPtr, this, value);
  }

  protected char getM_tint_effect() {
    return HJSTREAMJNI.TK_Rendering_Options_m_tint_effect_get(swigCPtr, this);
  }

  protected void setM_lod_options_mask(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_lod_options_mask_set(swigCPtr, this, value);
  }

  protected int getM_lod_options_mask() {
    return HJSTREAMJNI.TK_Rendering_Options_m_lod_options_mask_get(swigCPtr, this);
  }

  protected void setM_lod_options_value(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_lod_options_value_set(swigCPtr, this, value);
  }

  protected int getM_lod_options_value() {
    return HJSTREAMJNI.TK_Rendering_Options_m_lod_options_value_get(swigCPtr, this);
  }

  protected void setM_lod_algorithm(char value) {
    HJSTREAMJNI.TK_Rendering_Options_m_lod_algorithm_set(swigCPtr, this, value);
  }

  protected char getM_lod_algorithm() {
    return HJSTREAMJNI.TK_Rendering_Options_m_lod_algorithm_get(swigCPtr, this);
  }

  protected void setM_num_ratios(char value) {
    HJSTREAMJNI.TK_Rendering_Options_m_num_ratios_set(swigCPtr, this, value);
  }

  protected char getM_num_ratios() {
    return HJSTREAMJNI.TK_Rendering_Options_m_num_ratios_get(swigCPtr, this);
  }

  protected void setM_ratio(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_ratio_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_ratio() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_ratio_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_num_thresholds(char value) {
    HJSTREAMJNI.TK_Rendering_Options_m_num_thresholds_set(swigCPtr, this, value);
  }

  protected char getM_num_thresholds() {
    return HJSTREAMJNI.TK_Rendering_Options_m_num_thresholds_get(swigCPtr, this);
  }

  protected void setM_threshold(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_threshold_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_threshold() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_threshold_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_threshold_type(char value) {
    HJSTREAMJNI.TK_Rendering_Options_m_threshold_type_set(swigCPtr, this, value);
  }

  protected char getM_threshold_type() {
    return HJSTREAMJNI.TK_Rendering_Options_m_threshold_type_get(swigCPtr, this);
  }

  protected void setM_min_triangle_count(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_min_triangle_count_set(swigCPtr, this, value);
  }

  protected int getM_min_triangle_count() {
    return HJSTREAMJNI.TK_Rendering_Options_m_min_triangle_count_get(swigCPtr, this);
  }

  protected void setM_clamp(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_clamp_set(swigCPtr, this, value);
  }

  protected short getM_clamp() {
    return HJSTREAMJNI.TK_Rendering_Options_m_clamp_get(swigCPtr, this);
  }

  protected void setM_num_levels(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_num_levels_set(swigCPtr, this, value);
  }

  protected short getM_num_levels() {
    return HJSTREAMJNI.TK_Rendering_Options_m_num_levels_get(swigCPtr, this);
  }

  protected void setM_max_degree(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_max_degree_set(swigCPtr, this, value);
  }

  protected int getM_max_degree() {
    return HJSTREAMJNI.TK_Rendering_Options_m_max_degree_get(swigCPtr, this);
  }

  protected void setM_tolerance(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_tolerance_set(swigCPtr, this, value);
  }

  protected float getM_tolerance() {
    return HJSTREAMJNI.TK_Rendering_Options_m_tolerance_get(swigCPtr, this);
  }

  protected void setM_bounding(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_bounding_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_bounding() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_bounding_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_num_cutoffs(char value) {
    HJSTREAMJNI.TK_Rendering_Options_m_num_cutoffs_set(swigCPtr, this, value);
  }

  protected char getM_num_cutoffs() {
    return HJSTREAMJNI.TK_Rendering_Options_m_num_cutoffs_get(swigCPtr, this);
  }

  protected void setM_cutoff(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_cutoff_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_cutoff() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_cutoff_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_heuristic(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_heuristic_set(swigCPtr, this, value);
  }

  protected short getM_heuristic() {
    return HJSTREAMJNI.TK_Rendering_Options_m_heuristic_get(swigCPtr, this);
  }

  protected void setM_fallback(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_fallback_set(swigCPtr, this, value);
  }

  protected short getM_fallback() {
    return HJSTREAMJNI.TK_Rendering_Options_m_fallback_get(swigCPtr, this);
  }

  protected void setM_nurbs_options_mask(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_nurbs_options_mask_set(swigCPtr, this, value);
  }

  protected int getM_nurbs_options_mask() {
    return HJSTREAMJNI.TK_Rendering_Options_m_nurbs_options_mask_get(swigCPtr, this);
  }

  protected void setM_nurbs_options_value(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_nurbs_options_value_set(swigCPtr, this, value);
  }

  protected int getM_nurbs_options_value() {
    return HJSTREAMJNI.TK_Rendering_Options_m_nurbs_options_value_get(swigCPtr, this);
  }

  protected void setM_curve_budget(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_curve_budget_set(swigCPtr, this, value);
  }

  protected int getM_curve_budget() {
    return HJSTREAMJNI.TK_Rendering_Options_m_curve_budget_get(swigCPtr, this);
  }

  protected void setM_curve_continued_budget(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_curve_continued_budget_set(swigCPtr, this, value);
  }

  protected int getM_curve_continued_budget() {
    return HJSTREAMJNI.TK_Rendering_Options_m_curve_continued_budget_get(swigCPtr, this);
  }

  protected void setM_surface_budget(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_surface_budget_set(swigCPtr, this, value);
  }

  protected int getM_surface_budget() {
    return HJSTREAMJNI.TK_Rendering_Options_m_surface_budget_get(swigCPtr, this);
  }

  protected void setM_surface_trim_budget(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_surface_trim_budget_set(swigCPtr, this, value);
  }

  protected int getM_surface_trim_budget() {
    return HJSTREAMJNI.TK_Rendering_Options_m_surface_trim_budget_get(swigCPtr, this);
  }

  protected void setM_surface_max_trim_curve_deviation(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_surface_max_trim_curve_deviation_set(swigCPtr, this, value);
  }

  protected float getM_surface_max_trim_curve_deviation() {
    return HJSTREAMJNI.TK_Rendering_Options_m_surface_max_trim_curve_deviation_get(swigCPtr, this);
  }

  protected void setM_surface_max_facet_angle(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_surface_max_facet_angle_set(swigCPtr, this, value);
  }

  protected float getM_surface_max_facet_angle() {
    return HJSTREAMJNI.TK_Rendering_Options_m_surface_max_facet_angle_get(swigCPtr, this);
  }

  protected void setM_surface_max_facet_deviation(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_surface_max_facet_deviation_set(swigCPtr, this, value);
  }

  protected float getM_surface_max_facet_deviation() {
    return HJSTREAMJNI.TK_Rendering_Options_m_surface_max_facet_deviation_get(swigCPtr, this);
  }

  protected void setM_surface_max_facet_width(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_surface_max_facet_width_set(swigCPtr, this, value);
  }

  protected float getM_surface_max_facet_width() {
    return HJSTREAMJNI.TK_Rendering_Options_m_surface_max_facet_width_get(swigCPtr, this);
  }

  protected void setM_curve_max_angle(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_curve_max_angle_set(swigCPtr, this, value);
  }

  protected float getM_curve_max_angle() {
    return HJSTREAMJNI.TK_Rendering_Options_m_curve_max_angle_get(swigCPtr, this);
  }

  protected void setM_curve_max_deviation(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_curve_max_deviation_set(swigCPtr, this, value);
  }

  protected float getM_curve_max_deviation() {
    return HJSTREAMJNI.TK_Rendering_Options_m_curve_max_deviation_get(swigCPtr, this);
  }

  protected void setM_curve_max_length(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_curve_max_length_set(swigCPtr, this, value);
  }

  protected float getM_curve_max_length() {
    return HJSTREAMJNI.TK_Rendering_Options_m_curve_max_length_get(swigCPtr, this);
  }

  protected void setM_stereo_separation(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_stereo_separation_set(swigCPtr, this, value);
  }

  protected float getM_stereo_separation() {
    return HJSTREAMJNI.TK_Rendering_Options_m_stereo_separation_get(swigCPtr, this);
  }

  protected void setM_stereo_distance(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_stereo_distance_set(swigCPtr, this, value);
  }

  protected float getM_stereo_distance() {
    return HJSTREAMJNI.TK_Rendering_Options_m_stereo_distance_get(swigCPtr, this);
  }

  protected void setM_tessellations(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_tessellations_set(swigCPtr, this, value);
  }

  protected short getM_tessellations() {
    return HJSTREAMJNI.TK_Rendering_Options_m_tessellations_get(swigCPtr, this);
  }

  protected void setM_num_cylinder(char value) {
    HJSTREAMJNI.TK_Rendering_Options_m_num_cylinder_set(swigCPtr, this, value);
  }

  protected char getM_num_cylinder() {
    return HJSTREAMJNI.TK_Rendering_Options_m_num_cylinder_get(swigCPtr, this);
  }

  protected void setM_cylinder(String value) {
    HJSTREAMJNI.TK_Rendering_Options_m_cylinder_set(swigCPtr, this, value);
  }

  protected String getM_cylinder() {
    return HJSTREAMJNI.TK_Rendering_Options_m_cylinder_get(swigCPtr, this);
  }

  protected void setM_num_sphere(char value) {
    HJSTREAMJNI.TK_Rendering_Options_m_num_sphere_set(swigCPtr, this, value);
  }

  protected char getM_num_sphere() {
    return HJSTREAMJNI.TK_Rendering_Options_m_num_sphere_get(swigCPtr, this);
  }

  protected void setM_sphere(String value) {
    HJSTREAMJNI.TK_Rendering_Options_m_sphere_set(swigCPtr, this, value);
  }

  protected String getM_sphere() {
    return HJSTREAMJNI.TK_Rendering_Options_m_sphere_get(swigCPtr, this);
  }

  protected void setM_gooch_color_range(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_gooch_color_range_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_gooch_color_range() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_gooch_color_range_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_gooch_diffuse_weight(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_gooch_diffuse_weight_set(swigCPtr, this, value);
  }

  protected float getM_gooch_diffuse_weight() {
    return HJSTREAMJNI.TK_Rendering_Options_m_gooch_diffuse_weight_get(swigCPtr, this);
  }

  protected void setM_gooch_color_map_segment_length(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_gooch_color_map_segment_length_set(swigCPtr, this, value);
  }

  protected int getM_gooch_color_map_segment_length() {
    return HJSTREAMJNI.TK_Rendering_Options_m_gooch_color_map_segment_length_get(swigCPtr, this);
  }

  protected void setM_transparency_options(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_transparency_options_set(swigCPtr, this, value);
  }

  protected int getM_transparency_options() {
    return HJSTREAMJNI.TK_Rendering_Options_m_transparency_options_get(swigCPtr, this);
  }

  protected void setM_cut_geometry(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_cut_geometry_set(swigCPtr, this, value);
  }

  protected short getM_cut_geometry() {
    return HJSTREAMJNI.TK_Rendering_Options_m_cut_geometry_get(swigCPtr, this);
  }

  protected void setM_cut_geometry_level(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_cut_geometry_level_set(swigCPtr, this, value);
  }

  protected short getM_cut_geometry_level() {
    return HJSTREAMJNI.TK_Rendering_Options_m_cut_geometry_level_get(swigCPtr, this);
  }

  protected void setM_cut_geometry_match(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_cut_geometry_match_set(swigCPtr, this, value);
  }

  protected short getM_cut_geometry_match() {
    return HJSTREAMJNI.TK_Rendering_Options_m_cut_geometry_match_get(swigCPtr, this);
  }

  protected void setM_cut_geometry_tolerance(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_cut_geometry_tolerance_set(swigCPtr, this, value);
  }

  protected float getM_cut_geometry_tolerance() {
    return HJSTREAMJNI.TK_Rendering_Options_m_cut_geometry_tolerance_get(swigCPtr, this);
  }

  protected void setM_simple_shadow(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_set(swigCPtr, this, value);
  }

  protected int getM_simple_shadow() {
    return HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_get(swigCPtr, this);
  }

  protected void setM_simple_shadow_blur(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_blur_set(swigCPtr, this, value);
  }

  protected short getM_simple_shadow_blur() {
    return HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_blur_get(swigCPtr, this);
  }

  protected void setM_simple_shadow_resolution(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_resolution_set(swigCPtr, this, value);
  }

  protected int getM_simple_shadow_resolution() {
    return HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_resolution_get(swigCPtr, this);
  }

  protected void setM_simple_shadow_plane(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_plane_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_simple_shadow_plane() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_plane_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_simple_shadow_light(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_light_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_simple_shadow_light() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_light_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_simple_shadow_color(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_color_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_simple_shadow_color() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_color_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_simple_shadow_opacity(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_opacity_set(swigCPtr, this, value);
  }

  protected float getM_simple_shadow_opacity() {
    return HJSTREAMJNI.TK_Rendering_Options_m_simple_shadow_opacity_get(swigCPtr, this);
  }

  protected void setM_shadow_map(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_shadow_map_set(swigCPtr, this, value);
  }

  protected int getM_shadow_map() {
    return HJSTREAMJNI.TK_Rendering_Options_m_shadow_map_get(swigCPtr, this);
  }

  protected void setM_shadow_map_resolution(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_shadow_map_resolution_set(swigCPtr, this, value);
  }

  protected int getM_shadow_map_resolution() {
    return HJSTREAMJNI.TK_Rendering_Options_m_shadow_map_resolution_get(swigCPtr, this);
  }

  protected void setM_shadow_map_samples(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_shadow_map_samples_set(swigCPtr, this, value);
  }

  protected short getM_shadow_map_samples() {
    return HJSTREAMJNI.TK_Rendering_Options_m_shadow_map_samples_get(swigCPtr, this);
  }

  protected void setM_simple_reflection(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_set(swigCPtr, this, value);
  }

  protected int getM_simple_reflection() {
    return HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_get(swigCPtr, this);
  }

  protected void setM_simple_reflection_plane(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_plane_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_simple_reflection_plane() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_plane_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_simple_reflection_opacity(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_opacity_set(swigCPtr, this, value);
  }

  protected float getM_simple_reflection_opacity() {
    return HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_opacity_get(swigCPtr, this);
  }

  protected void setM_simple_reflection_blur(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_blur_set(swigCPtr, this, value);
  }

  protected int getM_simple_reflection_blur() {
    return HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_blur_get(swigCPtr, this);
  }

  protected void setM_simple_reflection_hither(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_hither_set(swigCPtr, this, value);
  }

  protected float getM_simple_reflection_hither() {
    return HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_hither_get(swigCPtr, this);
  }

  protected void setM_simple_reflection_yon(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_yon_set(swigCPtr, this, value);
  }

  protected float getM_simple_reflection_yon() {
    return HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_yon_get(swigCPtr, this);
  }

  protected void setM_simple_reflection_visibility_mask(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_visibility_mask_set(swigCPtr, this, value);
  }

  protected int getM_simple_reflection_visibility_mask() {
    return HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_visibility_mask_get(swigCPtr, this);
  }

  protected void setM_simple_reflection_visibility_value(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_visibility_value_set(swigCPtr, this, value);
  }

  protected int getM_simple_reflection_visibility_value() {
    return HJSTREAMJNI.TK_Rendering_Options_m_simple_reflection_visibility_value_get(swigCPtr, this);
  }

  protected void setM_depth_range(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_depth_range_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_depth_range() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_depth_range_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_screen_range(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_screen_range_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_screen_range() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_screen_range_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_ambient_up_vector(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_ambient_up_vector_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_ambient_up_vector() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_ambient_up_vector_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_image_scale(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_image_scale_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_image_scale() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_image_scale_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_mask_transform(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_mask_transform_set(swigCPtr, this, value);
  }

  protected int getM_mask_transform() {
    return HJSTREAMJNI.TK_Rendering_Options_m_mask_transform_get(swigCPtr, this);
  }

  protected void setM_geometry_options(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_geometry_options_set(swigCPtr, this, value);
  }

  protected short getM_geometry_options() {
    return HJSTREAMJNI.TK_Rendering_Options_m_geometry_options_get(swigCPtr, this);
  }

  protected void setM_dihedral(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_dihedral_set(swigCPtr, this, value);
  }

  protected float getM_dihedral() {
    return HJSTREAMJNI.TK_Rendering_Options_m_dihedral_get(swigCPtr, this);
  }

  protected void setM_image_tint_color(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_image_tint_color_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_image_tint_color() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_image_tint_color_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_texture_tint_color(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_texture_tint_color_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_texture_tint_color() {
    long cPtr = HJSTREAMJNI.TK_Rendering_Options_m_texture_tint_color_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_depth_peeling_layers(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_depth_peeling_layers_set(swigCPtr, this, value);
  }

  protected short getM_depth_peeling_layers() {
    return HJSTREAMJNI.TK_Rendering_Options_m_depth_peeling_layers_get(swigCPtr, this);
  }

  protected void setM_depth_peeling_min_area(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_depth_peeling_min_area_set(swigCPtr, this, value);
  }

  protected float getM_depth_peeling_min_area() {
    return HJSTREAMJNI.TK_Rendering_Options_m_depth_peeling_min_area_get(swigCPtr, this);
  }

  protected void setM_depth_peeling_algorithm(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_depth_peeling_algorithm_set(swigCPtr, this, value);
  }

  protected short getM_depth_peeling_algorithm() {
    return HJSTREAMJNI.TK_Rendering_Options_m_depth_peeling_algorithm_get(swigCPtr, this);
  }

  protected void setM_general_displacement(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_general_displacement_set(swigCPtr, this, value);
  }

  protected int getM_general_displacement() {
    return HJSTREAMJNI.TK_Rendering_Options_m_general_displacement_get(swigCPtr, this);
  }

  protected void setM_join_cutoff_angle(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_join_cutoff_angle_set(swigCPtr, this, value);
  }

  protected int getM_join_cutoff_angle() {
    return HJSTREAMJNI.TK_Rendering_Options_m_join_cutoff_angle_get(swigCPtr, this);
  }

  protected void setM_edge_join_cutoff_angle(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_edge_join_cutoff_angle_set(swigCPtr, this, value);
  }

  protected int getM_edge_join_cutoff_angle() {
    return HJSTREAMJNI.TK_Rendering_Options_m_edge_join_cutoff_angle_get(swigCPtr, this);
  }

  protected void setM_vertex_decimation(float value) {
    HJSTREAMJNI.TK_Rendering_Options_m_vertex_decimation_set(swigCPtr, this, value);
  }

  protected float getM_vertex_decimation() {
    return HJSTREAMJNI.TK_Rendering_Options_m_vertex_decimation_get(swigCPtr, this);
  }

  protected void setM_display_list_level(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_display_list_level_set(swigCPtr, this, value);
  }

  protected short getM_display_list_level() {
    return HJSTREAMJNI.TK_Rendering_Options_m_display_list_level_get(swigCPtr, this);
  }

  protected void setM_antialias(short value) {
    HJSTREAMJNI.TK_Rendering_Options_m_antialias_set(swigCPtr, this, value);
  }

  protected short getM_antialias() {
    return HJSTREAMJNI.TK_Rendering_Options_m_antialias_get(swigCPtr, this);
  }

  protected void setM_extra(int value) {
    HJSTREAMJNI.TK_Rendering_Options_m_extra_set(swigCPtr, this, value);
  }

  protected int getM_extra() {
    return HJSTREAMJNI.TK_Rendering_Options_m_extra_get(swigCPtr, this);
  }

  public TK_Rendering_Options() {
    this(HJSTREAMJNI.new_TK_Rendering_Options(), true);
    HJSTREAMJNI.TK_Rendering_Options_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Rendering_Options.class) ? HJSTREAMJNI.TK_Rendering_Options_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Rendering_Options_ReadSwigExplicitTK_Rendering_Options(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Rendering_Options.class) ? HJSTREAMJNI.TK_Rendering_Options_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Rendering_Options_WriteSwigExplicitTK_Rendering_Options(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Clone(BStreamFileToolkit tk, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    return TK_Status.swigToEnum((getClass() == TK_Rendering_Options.class) ? HJSTREAMJNI.TK_Rendering_Options_Clone(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)) : HJSTREAMJNI.TK_Rendering_Options_CloneSwigExplicitTK_Rendering_Options(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Rendering_Options_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Rendering_Options_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public void Reset() {
    if (getClass() == TK_Rendering_Options.class) HJSTREAMJNI.TK_Rendering_Options_Reset(swigCPtr, this); else HJSTREAMJNI.TK_Rendering_Options_ResetSwigExplicitTK_Rendering_Options(swigCPtr, this);
  }

  public void SetMask(int m0, int m1, int m2) {
    HJSTREAMJNI.TK_Rendering_Options_SetMask__SWIG_0(swigCPtr, this, m0, m1, m2);
  }

  public void SetMask(int m0, int m1) {
    HJSTREAMJNI.TK_Rendering_Options_SetMask__SWIG_1(swigCPtr, this, m0, m1);
  }

  public void SetMask(int m0) {
    HJSTREAMJNI.TK_Rendering_Options_SetMask__SWIG_2(swigCPtr, this, m0);
  }

  public int GetMask(int index) {
    return HJSTREAMJNI.TK_Rendering_Options_GetMask__SWIG_0(swigCPtr, this, index);
  }

  public int GetMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetMask__SWIG_1(swigCPtr, this);
  }

  public void SetValue(int v0, int v1, int v2) {
    HJSTREAMJNI.TK_Rendering_Options_SetValue__SWIG_0(swigCPtr, this, v0, v1, v2);
  }

  public void SetValue(int v0, int v1) {
    HJSTREAMJNI.TK_Rendering_Options_SetValue__SWIG_1(swigCPtr, this, v0, v1);
  }

  public void SetValue(int v0) {
    HJSTREAMJNI.TK_Rendering_Options_SetValue__SWIG_2(swigCPtr, this, v0);
  }

  public int GetValue(int index) {
    return HJSTREAMJNI.TK_Rendering_Options_GetValue__SWIG_0(swigCPtr, this, index);
  }

  public int GetValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetValue__SWIG_1(swigCPtr, this);
  }

  public void SetHSR(int h) {
    HJSTREAMJNI.TK_Rendering_Options_SetHSR(swigCPtr, this, h);
  }

  public int GetHSR() {
    return HJSTREAMJNI.TK_Rendering_Options_GetHSR(swigCPtr, this);
  }

  public void SetTransparentHSR(int t) {
    HJSTREAMJNI.TK_Rendering_Options_SetTransparentHSR(swigCPtr, this, t);
  }

  public int GetTransparentHSR() {
    return HJSTREAMJNI.TK_Rendering_Options_GetTransparentHSR(swigCPtr, this);
  }

  public void SetTransparentStyle(int s) {
    HJSTREAMJNI.TK_Rendering_Options_SetTransparentStyle(swigCPtr, this, s);
  }

  public int GetTransparentStyle() {
    return HJSTREAMJNI.TK_Rendering_Options_GetTransparentStyle(swigCPtr, this);
  }

  public void SetTechnology(int t) {
    HJSTREAMJNI.TK_Rendering_Options_SetTechnology(swigCPtr, this, t);
  }

  public int GetTechnology() {
    return HJSTREAMJNI.TK_Rendering_Options_GetTechnology(swigCPtr, this);
  }

  public void SetQuantization(int q) {
    HJSTREAMJNI.TK_Rendering_Options_SetQuantization(swigCPtr, this, q);
  }

  public int GetQuantization() {
    return HJSTREAMJNI.TK_Rendering_Options_GetQuantization(swigCPtr, this);
  }

  public void SetDebug(int d) {
    HJSTREAMJNI.TK_Rendering_Options_SetDebug(swigCPtr, this, d);
  }

  public int GetDebug() {
    return HJSTREAMJNI.TK_Rendering_Options_GetDebug(swigCPtr, this);
  }

  public void SetFaceDisplacement(int d) {
    HJSTREAMJNI.TK_Rendering_Options_SetFaceDisplacement(swigCPtr, this, d);
  }

  public int GetFaceDisplacement() {
    return HJSTREAMJNI.TK_Rendering_Options_GetFaceDisplacement(swigCPtr, this);
  }

  public void SetVertexDisplacement(int d) {
    HJSTREAMJNI.TK_Rendering_Options_SetVertexDisplacement(swigCPtr, this, d);
  }

  public int GetVertexDisplacement() {
    return HJSTREAMJNI.TK_Rendering_Options_GetVertexDisplacement(swigCPtr, this);
  }

  public void SetGeneralDisplacement(int d) {
    HJSTREAMJNI.TK_Rendering_Options_SetGeneralDisplacement(swigCPtr, this, d);
  }

  public int GetGeneralDisplacement() {
    return HJSTREAMJNI.TK_Rendering_Options_GetGeneralDisplacement(swigCPtr, this);
  }

  public void SetJoinCutoffAngle(int d) {
    HJSTREAMJNI.TK_Rendering_Options_SetJoinCutoffAngle(swigCPtr, this, d);
  }

  public int GetJoinCutoffAngle() {
    return HJSTREAMJNI.TK_Rendering_Options_GetJoinCutoffAngle(swigCPtr, this);
  }

  public void SetFogLimits(float n, float f) {
    HJSTREAMJNI.TK_Rendering_Options_SetFogLimits__SWIG_0(swigCPtr, this, n, f);
  }

  public void SetFogLimits(float[] l) {
    HJSTREAMJNI.TK_Rendering_Options_SetFogLimits__SWIG_1(swigCPtr, this, l);
  }

  public void SetLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetLockMask(swigCPtr, this, m);
  }

  public int GetLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLockMask(swigCPtr, this);
  }

  public void SetLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetLockValue(swigCPtr, this, v);
  }

  public int GetLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLockValue(swigCPtr, this);
  }

  public void SetVisibilityLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetVisibilityLockMask(swigCPtr, this, m);
  }

  public int GetVisibilityLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetVisibilityLockMask(swigCPtr, this);
  }

  public void SetVisibilityLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetVisibilityLockValue(swigCPtr, this, v);
  }

  public int GetVisibilityLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetVisibilityLockValue(swigCPtr, this);
  }

  public void SetColorLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorLockMask(swigCPtr, this, m);
  }

  public int GetColorLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorLockMask(swigCPtr, this);
  }

  public void SetColorLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorLockValue(swigCPtr, this, v);
  }

  public int GetColorLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorLockValue(swigCPtr, this);
  }

  public void SetColorFaceLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorFaceLockMask(swigCPtr, this, m);
  }

  public int GetColorFaceLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorFaceLockMask(swigCPtr, this);
  }

  public void SetColorFaceLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorFaceLockValue(swigCPtr, this, v);
  }

  public int GetColorFaceLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorFaceLockValue(swigCPtr, this);
  }

  public void SetColorEdgeLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorEdgeLockMask(swigCPtr, this, m);
  }

  public int GetColorEdgeLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorEdgeLockMask(swigCPtr, this);
  }

  public void SetColorEdgeLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorEdgeLockValue(swigCPtr, this, v);
  }

  public int GetColorEdgeLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorEdgeLockValue(swigCPtr, this);
  }

  public void SetColorLineLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorLineLockMask(swigCPtr, this, m);
  }

  public int GetColorLineLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorLineLockMask(swigCPtr, this);
  }

  public void SetColorLineLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorLineLockValue(swigCPtr, this, v);
  }

  public int GetColorLineLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorLineLockValue(swigCPtr, this);
  }

  public void SetColorMarkerLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorMarkerLockMask(swigCPtr, this, m);
  }

  public int GetColorMarkerLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorMarkerLockMask(swigCPtr, this);
  }

  public void SetColorMarkerLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorMarkerLockValue(swigCPtr, this, v);
  }

  public int GetColorMarkerLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorMarkerLockValue(swigCPtr, this);
  }

  public void SetColorTextLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorTextLockMask(swigCPtr, this, m);
  }

  public int GetColorTextLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorTextLockMask(swigCPtr, this);
  }

  public void SetColorTextLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorTextLockValue(swigCPtr, this, v);
  }

  public int GetColorTextLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorTextLockValue(swigCPtr, this);
  }

  public void SetColorWindowLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorWindowLockMask(swigCPtr, this, m);
  }

  public int GetColorWindowLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorWindowLockMask(swigCPtr, this);
  }

  public void SetColorWindowLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorWindowLockValue(swigCPtr, this, v);
  }

  public int GetColorWindowLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorWindowLockValue(swigCPtr, this);
  }

  public void SetColorFaceContrastLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorFaceContrastLockMask(swigCPtr, this, m);
  }

  public int GetColorFaceContrastLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorFaceContrastLockMask(swigCPtr, this);
  }

  public void SetColorFaceContrastLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorFaceContrastLockValue(swigCPtr, this, v);
  }

  public int GetColorFaceContrastLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorFaceContrastLockValue(swigCPtr, this);
  }

  public void SetColorWindowContrastLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorWindowContrastLockMask(swigCPtr, this, m);
  }

  public int GetColorWindowContrastLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorWindowContrastLockMask(swigCPtr, this);
  }

  public void SetColorWindowContrastLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorWindowContrastLockValue(swigCPtr, this, v);
  }

  public int GetColorWindowContrastLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorWindowContrastLockValue(swigCPtr, this);
  }

  public void SetColorBackLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorBackLockMask(swigCPtr, this, m);
  }

  public int GetColorBackLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorBackLockMask(swigCPtr, this);
  }

  public void SetColorBackLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorBackLockValue(swigCPtr, this, v);
  }

  public int GetColorBackLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorBackLockValue(swigCPtr, this);
  }

  public void SetColorVertexLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorVertexLockMask(swigCPtr, this, m);
  }

  public int GetColorVertexLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorVertexLockMask(swigCPtr, this);
  }

  public void SetColorVertexLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorVertexLockValue(swigCPtr, this, v);
  }

  public int GetColorVertexLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorVertexLockValue(swigCPtr, this);
  }

  public void SetColorEdgeContrastLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorEdgeContrastLockMask(swigCPtr, this, m);
  }

  public int GetColorEdgeContrastLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorEdgeContrastLockMask(swigCPtr, this);
  }

  public void SetColorEdgeContrastLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorEdgeContrastLockValue(swigCPtr, this, v);
  }

  public int GetColorEdgeContrastLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorEdgeContrastLockValue(swigCPtr, this);
  }

  public void SetColorLineContrastLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorLineContrastLockMask(swigCPtr, this, m);
  }

  public int GetColorLineContrastLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorLineContrastLockMask(swigCPtr, this);
  }

  public void SetColorLineContrastLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorLineContrastLockValue(swigCPtr, this, v);
  }

  public int GetColorLineContrastLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorLineContrastLockValue(swigCPtr, this);
  }

  public void SetColorMarkerContrastLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorMarkerContrastLockMask(swigCPtr, this, m);
  }

  public int GetColorMarkerContrastLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorMarkerContrastLockMask(swigCPtr, this);
  }

  public void SetColorMarkerContrastLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorMarkerContrastLockValue(swigCPtr, this, v);
  }

  public int GetColorMarkerContrastLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorMarkerContrastLockValue(swigCPtr, this);
  }

  public void SetColorVertexContrastLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorVertexContrastLockMask(swigCPtr, this, m);
  }

  public int GetColorVertexContrastLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorVertexContrastLockMask(swigCPtr, this);
  }

  public void SetColorVertexContrastLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorVertexContrastLockValue(swigCPtr, this, v);
  }

  public int GetColorVertexContrastLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorVertexContrastLockValue(swigCPtr, this);
  }

  public void SetColorTextContrastLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorTextContrastLockMask(swigCPtr, this, m);
  }

  public int GetColorTextContrastLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorTextContrastLockMask(swigCPtr, this);
  }

  public void SetColorTextContrastLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorTextContrastLockValue(swigCPtr, this, v);
  }

  public int GetColorTextContrastLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorTextContrastLockValue(swigCPtr, this);
  }

  public void SetForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetForcedLockMask(swigCPtr, this, m);
  }

  public int GetForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetForcedLockMask(swigCPtr, this);
  }

  public void SetForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetForcedLockValue(swigCPtr, this, v);
  }

  public int GetForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetForcedLockValue(swigCPtr, this);
  }

  public void SetVisibilityForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetVisibilityForcedLockMask(swigCPtr, this, m);
  }

  public int GetVisibilityForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetVisibilityForcedLockMask(swigCPtr, this);
  }

  public void SetVisibilityForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetVisibilityForcedLockValue(swigCPtr, this, v);
  }

  public int GetVisibilityForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetVisibilityForcedLockValue(swigCPtr, this);
  }

  public void SetColorForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorForcedLockMask(swigCPtr, this);
  }

  public void SetColorForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorForcedLockValue(swigCPtr, this);
  }

  public void SetColorFaceForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorFaceForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorFaceForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorFaceForcedLockMask(swigCPtr, this);
  }

  public void SetColorFaceForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorFaceForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorFaceForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorFaceForcedLockValue(swigCPtr, this);
  }

  public void SetColorEdgeForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorEdgeForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorEdgeForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorEdgeForcedLockMask(swigCPtr, this);
  }

  public void SetColorEdgeForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorEdgeForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorEdgeForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorEdgeForcedLockValue(swigCPtr, this);
  }

  public void SetColorLineForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorLineForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorLineForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorLineForcedLockMask(swigCPtr, this);
  }

  public void SetColorLineForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorLineForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorLineForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorLineForcedLockValue(swigCPtr, this);
  }

  public void SetColorMarkerForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorMarkerForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorMarkerForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorMarkerForcedLockMask(swigCPtr, this);
  }

  public void SetColorMarkerForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorMarkerForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorMarkerForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorMarkerForcedLockValue(swigCPtr, this);
  }

  public void SetColorTextForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorTextForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorTextForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorTextForcedLockMask(swigCPtr, this);
  }

  public void SetColorTextForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorTextForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorTextForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorTextForcedLockValue(swigCPtr, this);
  }

  public void SetColorWindowForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorWindowForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorWindowForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorWindowForcedLockMask(swigCPtr, this);
  }

  public void SetColorWindowForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorWindowForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorWindowForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorWindowForcedLockValue(swigCPtr, this);
  }

  public void SetColorFaceContrastForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorFaceContrastForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorFaceContrastForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorFaceContrastForcedLockMask(swigCPtr, this);
  }

  public void SetColorFaceContrastForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorFaceContrastForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorFaceContrastForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorFaceContrastForcedLockValue(swigCPtr, this);
  }

  public void SetColorWindowContrastForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorWindowContrastForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorWindowContrastForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorWindowContrastForcedLockMask(swigCPtr, this);
  }

  public void SetColorWindowContrastForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorWindowContrastForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorWindowContrastForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorWindowContrastForcedLockValue(swigCPtr, this);
  }

  public void SetColorBackForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorBackForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorBackForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorBackForcedLockMask(swigCPtr, this);
  }

  public void SetColorBackForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorBackForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorBackForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorBackForcedLockValue(swigCPtr, this);
  }

  public void SetColorVertexForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorVertexForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorVertexForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorVertexForcedLockMask(swigCPtr, this);
  }

  public void SetColorVertexForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorVertexForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorVertexForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorVertexForcedLockValue(swigCPtr, this);
  }

  public void SetColorEdgeContrastForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorEdgeContrastForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorEdgeContrastForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorEdgeContrastForcedLockMask(swigCPtr, this);
  }

  public void SetColorEdgeContrastForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorEdgeContrastForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorEdgeContrastForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorEdgeContrastForcedLockValue(swigCPtr, this);
  }

  public void SetColorLineContrastForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorLineContrastForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorLineContrastForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorLineContrastForcedLockMask(swigCPtr, this);
  }

  public void SetColorLineContrastForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorLineContrastForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorLineContrastForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorLineContrastForcedLockValue(swigCPtr, this);
  }

  public void SetColorMarkerContrastForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorMarkerContrastForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorMarkerContrastForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorMarkerContrastForcedLockMask(swigCPtr, this);
  }

  public void SetColorMarkerContrastForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorMarkerContrastForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorMarkerContrastForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorMarkerContrastForcedLockValue(swigCPtr, this);
  }

  public void SetColorVertexContrastForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorVertexContrastForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorVertexContrastForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorVertexContrastForcedLockMask(swigCPtr, this);
  }

  public void SetColorVertexContrastForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorVertexContrastForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorVertexContrastForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorVertexContrastForcedLockValue(swigCPtr, this);
  }

  public void SetColorTextContrastForcedLockMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorTextContrastForcedLockMask(swigCPtr, this, m);
  }

  public int GetColorTextContrastForcedLockMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorTextContrastForcedLockMask(swigCPtr, this);
  }

  public void SetColorTextContrastForcedLockValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetColorTextContrastForcedLockValue(swigCPtr, this, v);
  }

  public int GetColorTextContrastForcedLockValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetColorTextContrastForcedLockValue(swigCPtr, this);
  }

  public void SetBufferOptionsMask(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetBufferOptionsMask(swigCPtr, this, v);
  }

  public int GetBufferOptionsMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetBufferOptionsMask(swigCPtr, this);
  }

  public void SetBufferOptionsValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetBufferOptionsValue(swigCPtr, this, v);
  }

  public int GetBufferOptionsValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetBufferOptionsValue(swigCPtr, this);
  }

  public void SetBufferSizeLimit(int l) {
    HJSTREAMJNI.TK_Rendering_Options_SetBufferSizeLimit(swigCPtr, this, l);
  }

  public int GetBufferSizeLimit() {
    return HJSTREAMJNI.TK_Rendering_Options_GetBufferSizeLimit(swigCPtr, this);
  }

  public void SetStereoSeparation(float s) {
    HJSTREAMJNI.TK_Rendering_Options_SetStereoSeparation(swigCPtr, this, s);
  }

  public float GetStereoSeparation() {
    return HJSTREAMJNI.TK_Rendering_Options_GetStereoSeparation(swigCPtr, this);
  }

  public void SetStereoDistance(float d) {
    HJSTREAMJNI.TK_Rendering_Options_SetStereoDistance(swigCPtr, this, d);
  }

  public float GetStereoDistance() {
    return HJSTREAMJNI.TK_Rendering_Options_GetStereoDistance(swigCPtr, this);
  }

  public void SetHlrOptions(int o) {
    HJSTREAMJNI.TK_Rendering_Options_SetHlrOptions(swigCPtr, this, o);
  }

  public int GetHlrOptions() {
    return HJSTREAMJNI.TK_Rendering_Options_GetHlrOptions(swigCPtr, this);
  }

  public void SetHlrDimFactor(float d) {
    HJSTREAMJNI.TK_Rendering_Options_SetHlrDimFactor(swigCPtr, this, d);
  }

  public float GetHlrDimFactor() {
    return HJSTREAMJNI.TK_Rendering_Options_GetHlrDimFactor(swigCPtr, this);
  }

  public void SetHlrFaceDisplacement(float d) {
    HJSTREAMJNI.TK_Rendering_Options_SetHlrFaceDisplacement(swigCPtr, this, d);
  }

  public float GetHlrFaceDisplacement() {
    return HJSTREAMJNI.TK_Rendering_Options_GetHlrFaceDisplacement(swigCPtr, this);
  }

  public void SetHlrLinePattern(int p) {
    HJSTREAMJNI.TK_Rendering_Options_SetHlrLinePattern(swigCPtr, this, p);
  }

  public int GetHlrLinePattern() {
    return HJSTREAMJNI.TK_Rendering_Options_GetHlrLinePattern(swigCPtr, this);
  }

  public void SetHlrFaceSortingAlgorithm(int a) {
    HJSTREAMJNI.TK_Rendering_Options_SetHlrFaceSortingAlgorithm(swigCPtr, this, a);
  }

  public float GetHlrFaceSortingAlgorithm() {
    return HJSTREAMJNI.TK_Rendering_Options_GetHlrFaceSortingAlgorithm(swigCPtr, this);
  }

  public void SetNURBSOptionsMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetNURBSOptionsMask(swigCPtr, this, m);
  }

  public int GetNURBSOptionsMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetNURBSOptionsMask(swigCPtr, this);
  }

  public void SetNURBSOptionsValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetNURBSOptionsValue(swigCPtr, this, v);
  }

  public int GetNURBSOptionsValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetNURBSOptionsValue(swigCPtr, this);
  }

  public void SetNURBSCurveBudget(int b) {
    HJSTREAMJNI.TK_Rendering_Options_SetNURBSCurveBudget(swigCPtr, this, b);
  }

  public int GetNURBSCurveBudget() {
    return HJSTREAMJNI.TK_Rendering_Options_GetNURBSCurveBudget(swigCPtr, this);
  }

  public void SetNURBSCurveContinuedBudget(int b) {
    HJSTREAMJNI.TK_Rendering_Options_SetNURBSCurveContinuedBudget(swigCPtr, this, b);
  }

  public int GetNURBSCurveContinuedBudget() {
    return HJSTREAMJNI.TK_Rendering_Options_GetNURBSCurveContinuedBudget(swigCPtr, this);
  }

  public void SetNURBSSurfaceBudget(int b) {
    HJSTREAMJNI.TK_Rendering_Options_SetNURBSSurfaceBudget(swigCPtr, this, b);
  }

  public int GetNURBSSurfaceBudget() {
    return HJSTREAMJNI.TK_Rendering_Options_GetNURBSSurfaceBudget(swigCPtr, this);
  }

  public void SetNURBSSurfaceTrimBudget(int b) {
    HJSTREAMJNI.TK_Rendering_Options_SetNURBSSurfaceTrimBudget(swigCPtr, this, b);
  }

  public int GetNURBSSurfaceTrimBudget() {
    return HJSTREAMJNI.TK_Rendering_Options_GetNURBSSurfaceTrimBudget(swigCPtr, this);
  }

  public void SetLodOptionsMask(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodOptionsMask(swigCPtr, this, v);
  }

  public int GetLodOptionsMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodOptionsMask(swigCPtr, this);
  }

  public void SetLodOptionsValue(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodOptionsValue(swigCPtr, this, v);
  }

  public int GetLodOptionsValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodOptionsValue(swigCPtr, this);
  }

  public void SetLodAlgorithm(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodAlgorithm(swigCPtr, this, v);
  }

  public int GetLodAlgorithm() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodAlgorithm(swigCPtr, this);
  }

  public void SetLodMinimumTriangleCount(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodMinimumTriangleCount(swigCPtr, this, v);
  }

  public int GetLodMinimumTriangleCount() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodMinimumTriangleCount(swigCPtr, this);
  }

  public void SetLodNumLevels(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodNumLevels(swigCPtr, this, v);
  }

  public int GetLodNumLevels() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodNumLevels(swigCPtr, this);
  }

  public void SetLodClamp(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodClamp(swigCPtr, this, v);
  }

  public int GetLodClamp() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodClamp(swigCPtr, this);
  }

  public void SetLodMaxDegree(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodMaxDegree(swigCPtr, this, v);
  }

  public int GetLodMaxDegree() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodMaxDegree(swigCPtr, this);
  }

  public void SetLodTolerance(float v) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodTolerance(swigCPtr, this, v);
  }

  public float GetLodTolerance() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodTolerance(swigCPtr, this);
  }

  public void SetLodFallback(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodFallback(swigCPtr, this, v);
  }

  public int GetLodFallback() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodFallback(swigCPtr, this);
  }

  public void SetLodBounding(float x1, float y1, float z1, float x2, float y2, float z2) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodBounding__SWIG_0(swigCPtr, this, x1, y1, z1, x2, y2, z2);
  }

  public void SetLodBounding(float[] s, float[] e) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodBounding__SWIG_1(swigCPtr, this, s, e);
  }

  public void SetLodBounding(float[] p) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodBounding__SWIG_2(swigCPtr, this, p);
  }

  public void SetLodRatio(float r) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodRatio(swigCPtr, this, r);
  }

  public void SetLodRatios(int c, float[] r) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodRatios__SWIG_0(swigCPtr, this, c, r);
  }

  public void SetLodRatios(int c) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodRatios__SWIG_1(swigCPtr, this, c);
  }

  public int GetLodNumRatios() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodNumRatios(swigCPtr, this);
  }

  public void SetLodThresholdType(int v) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodThresholdType(swigCPtr, this, v);
  }

  public int GetLodThresholdType() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodThresholdType(swigCPtr, this);
  }

  public void SetLodThreshold(float r) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodThreshold(swigCPtr, this, r);
  }

  public void SetLodThresholds(int c, float[] r) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodThresholds__SWIG_0(swigCPtr, this, c, r);
  }

  public void SetLodThresholds(int c) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodThresholds__SWIG_1(swigCPtr, this, c);
  }

  public int GetLodNumThresholds() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodNumThresholds(swigCPtr, this);
  }

  public void SetLodCutoff(float r) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodCutoff(swigCPtr, this, r);
  }

  public void SetLodCutoffs(int c, float[] r) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodCutoffs__SWIG_0(swigCPtr, this, c, r);
  }

  public void SetLodCutoffs(int c) {
    HJSTREAMJNI.TK_Rendering_Options_SetLodCutoffs__SWIG_1(swigCPtr, this, c);
  }

  public int GetLodNumCutoffs() {
    return HJSTREAMJNI.TK_Rendering_Options_GetLodNumCutoffs(swigCPtr, this);
  }

  public void SetTessellationMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetTessellationMask(swigCPtr, this, m);
  }

  public int GetTessellationMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetTessellationMask(swigCPtr, this);
  }

  public void SetCylinderTessellation(int n) {
    HJSTREAMJNI.TK_Rendering_Options_SetCylinderTessellation(swigCPtr, this, n);
  }

  public void SetCylinderTessellations(int c, String n) {
    HJSTREAMJNI.TK_Rendering_Options_SetCylinderTessellations__SWIG_0(swigCPtr, this, c, n);
  }

  public void SetCylinderTessellations(int c) {
    HJSTREAMJNI.TK_Rendering_Options_SetCylinderTessellations__SWIG_1(swigCPtr, this, c);
  }

  public int GetNumCylinderTessellations() {
    return HJSTREAMJNI.TK_Rendering_Options_GetNumCylinderTessellations(swigCPtr, this);
  }

  public String GetCylinderTessellations() {return HJSTREAMJNI.TK_Rendering_Options_GetCylinderTessellations__SWIG_0(swigCPtr, this);}

  public void SetSphereTessellation(int n) {
    HJSTREAMJNI.TK_Rendering_Options_SetSphereTessellation(swigCPtr, this, n);
  }

  public void SetSphereTessellations(int c, String n) {
    HJSTREAMJNI.TK_Rendering_Options_SetSphereTessellations__SWIG_0(swigCPtr, this, c, n);
  }

  public void SetSphereTessellations(int c) {
    HJSTREAMJNI.TK_Rendering_Options_SetSphereTessellations__SWIG_1(swigCPtr, this, c);
  }

  public int GetNumSphereTessellations() {
    return HJSTREAMJNI.TK_Rendering_Options_GetNumSphereTessellations(swigCPtr, this);
  }

  public String GetSphereTessellations() {return HJSTREAMJNI.TK_Rendering_Options_GetSphereTessellations__SWIG_0(swigCPtr, this);}

  public void SetGeometryOptionsMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetGeometryOptionsMask(swigCPtr, this, m);
  }

  public int GetGeometryOptionsMask() {
    return HJSTREAMJNI.TK_Rendering_Options_GetGeometryOptionsMask(swigCPtr, this);
  }

  public void SetHardEdgeAngle(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetHardEdgeAngle(swigCPtr, this, m);
  }

  public float GetHardEdgeAngle() {
    return HJSTREAMJNI.TK_Rendering_Options_GetHardEdgeAngle(swigCPtr, this);
  }

  public void SetMaskTransform(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetMaskTransform(swigCPtr, this, m);
  }

  public int GetMaskTransform() {
    return HJSTREAMJNI.TK_Rendering_Options_GetMaskTransform(swigCPtr, this);
  }

  public void SetCutGeometry(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetCutGeometry(swigCPtr, this, m);
  }

  public int GetCutGeometry() {
    return HJSTREAMJNI.TK_Rendering_Options_GetCutGeometry(swigCPtr, this);
  }

  public void SetCutGeometryLevel(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetCutGeometryLevel(swigCPtr, this, m);
  }

  public int GetCutGeometryLevel() {
    return HJSTREAMJNI.TK_Rendering_Options_GetCutGeometryLevel(swigCPtr, this);
  }

  public void SetCutGeometryColorMatch(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetCutGeometryColorMatch(swigCPtr, this, m);
  }

  public int GetCutGeometryColorMatch() {
    return HJSTREAMJNI.TK_Rendering_Options_GetCutGeometryColorMatch(swigCPtr, this);
  }

  public void SetCutGeometryTolerance(float m) {
    HJSTREAMJNI.TK_Rendering_Options_SetCutGeometryTolerance(swigCPtr, this, m);
  }

  public float GetCutGeometryTolerance() {
    return HJSTREAMJNI.TK_Rendering_Options_GetCutGeometryTolerance(swigCPtr, this);
  }

  public void SetDisplayListLevel(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetDisplayListLevel(swigCPtr, this, m);
  }

  public int GetDisplayListLevel() {
    return HJSTREAMJNI.TK_Rendering_Options_GetDisplayListLevel(swigCPtr, this);
  }

  public void SetSimpleShadow(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleShadow(swigCPtr, this, m);
  }

  public int GetSimpleShadow() {
    return HJSTREAMJNI.TK_Rendering_Options_GetSimpleShadow(swigCPtr, this);
  }

  public void SetSimpleShadowBlur(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleShadowBlur(swigCPtr, this, m);
  }

  public int GetSimpleShadowBlur() {
    return HJSTREAMJNI.TK_Rendering_Options_GetSimpleShadowBlur(swigCPtr, this);
  }

  public void SetSimpleShadowResolution(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleShadowResolution(swigCPtr, this, m);
  }

  public int GetSimpleShadowResolution() {
    return HJSTREAMJNI.TK_Rendering_Options_GetSimpleShadowResolution(swigCPtr, this);
  }

  public void SetSimpleShadowLight(float x, float y, float z) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleShadowLight__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetSimpleShadowLight(float[] l) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleShadowLight__SWIG_1(swigCPtr, this, l);
  }

  public void SetSimpleShadowPlane(float a, float b, float c, float d) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleShadowPlane__SWIG_0(swigCPtr, this, a, b, c, d);
  }

  public void SetSimpleShadowPlane(float[] p) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleShadowPlane__SWIG_1(swigCPtr, this, p);
  }

  public void SetSimpleShadowColor(float r, float g, float b) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleShadowColor__SWIG_0(swigCPtr, this, r, g, b);
  }

  public void SetSimpleShadowColor(float[] rgb) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleShadowColor__SWIG_1(swigCPtr, this, rgb);
  }

  public void SetSimpleShadowOpacity(float o) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleShadowOpacity(swigCPtr, this, o);
  }

  public float GetSimpleShadowOpacity() {
    return HJSTREAMJNI.TK_Rendering_Options_GetSimpleShadowOpacity(swigCPtr, this);
  }

  public void SetShadowMap(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetShadowMap(swigCPtr, this, m);
  }

  public int GetShadowMap() {
    return HJSTREAMJNI.TK_Rendering_Options_GetShadowMap(swigCPtr, this);
  }

  public void SetShadowMapResolution(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetShadowMapResolution(swigCPtr, this, m);
  }

  public int GetShadowMapResolution() {
    return HJSTREAMJNI.TK_Rendering_Options_GetShadowMapResolution(swigCPtr, this);
  }

  public void SetShadowMapSamples(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetShadowMapSamples(swigCPtr, this, m);
  }

  public int GetShadowMapSamples() {
    return HJSTREAMJNI.TK_Rendering_Options_GetShadowMapSamples(swigCPtr, this);
  }

  public void SetSimpleReflection(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleReflection(swigCPtr, this, m);
  }

  public int GetSimpleReflection() {
    return HJSTREAMJNI.TK_Rendering_Options_GetSimpleReflection(swigCPtr, this);
  }

  public void SetSimpleReflectionPlane(float a, float b, float c, float d) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleReflectionPlane__SWIG_0(swigCPtr, this, a, b, c, d);
  }

  public void SetSimpleReflectionPlane(float[] p) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleReflectionPlane__SWIG_1(swigCPtr, this, p);
  }

  public void SetSimpleReflectionOpacity(float o) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleReflectionOpacity(swigCPtr, this, o);
  }

  public float GetSimpleReflectionOpacity() {
    return HJSTREAMJNI.TK_Rendering_Options_GetSimpleReflectionOpacity(swigCPtr, this);
  }

  public void SetSimpleReflectionVisibilityMask(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetSimpleReflectionVisibilityMask(swigCPtr, this, m);
  }

  public int GetSimpleReflectionVisibilityValue() {
    return HJSTREAMJNI.TK_Rendering_Options_GetSimpleReflectionVisibilityValue(swigCPtr, this);
  }

  public void SetDepthRange(float n, float f) {
    HJSTREAMJNI.TK_Rendering_Options_SetDepthRange__SWIG_0(swigCPtr, this, n, f);
  }

  public void SetDepthRange(float[] l) {
    HJSTREAMJNI.TK_Rendering_Options_SetDepthRange__SWIG_1(swigCPtr, this, l);
  }

  public void SetScreenRange(float l, float r, float b, float t) {
    HJSTREAMJNI.TK_Rendering_Options_SetScreenRange__SWIG_0(swigCPtr, this, l, r, b, t);
  }

  public void SetScreenRange(float[] l) {
    HJSTREAMJNI.TK_Rendering_Options_SetScreenRange__SWIG_1(swigCPtr, this, l);
  }

  public void SetAmbientUpVector(float x, float y, float z) {
    HJSTREAMJNI.TK_Rendering_Options_SetAmbientUpVector__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void SetAmbientUpVector(float[] v) {
    HJSTREAMJNI.TK_Rendering_Options_SetAmbientUpVector__SWIG_1(swigCPtr, this, v);
  }

  public void SetImageScale(float x, float y) {
    HJSTREAMJNI.TK_Rendering_Options_SetImageScale__SWIG_0(swigCPtr, this, x, y);
  }

  public void SetImageScale(float[] s) {
    HJSTREAMJNI.TK_Rendering_Options_SetImageScale__SWIG_1(swigCPtr, this, s);
  }

  public void SetImageTintColor(float r, float g, float b) {
    HJSTREAMJNI.TK_Rendering_Options_SetImageTintColor__SWIG_0(swigCPtr, this, r, g, b);
  }

  public void SetImageTintColor(float[] rgb) {
    HJSTREAMJNI.TK_Rendering_Options_SetImageTintColor__SWIG_1(swigCPtr, this, rgb);
  }

  public void SetDiffuseTextureTintColor(float r, float g, float b) {
    HJSTREAMJNI.TK_Rendering_Options_SetDiffuseTextureTintColor__SWIG_0(swigCPtr, this, r, g, b);
  }

  public void SetDiffuseTextureTintColor(float[] rgb) {
    HJSTREAMJNI.TK_Rendering_Options_SetDiffuseTextureTintColor__SWIG_1(swigCPtr, this, rgb);
  }

  public void SetAntiAlias(int m) {
    HJSTREAMJNI.TK_Rendering_Options_SetAntiAlias(swigCPtr, this, m);
  }

  public int GetAntiAlias() {
    return HJSTREAMJNI.TK_Rendering_Options_GetAntiAlias(swigCPtr, this);
  }

  public void SetVertexDecimation(float f) {
    HJSTREAMJNI.TK_Rendering_Options_SetVertexDecimation(swigCPtr, this, f);
  }

  public float GetVertexDecimation() {
    return HJSTREAMJNI.TK_Rendering_Options_GetVertexDecimation(swigCPtr, this);
  }

  public void GetDiffuseTextureTintColor(float[] values, int count) {
    HJSTREAMJNI.TK_Rendering_Options_GetDiffuseTextureTintColor(swigCPtr, this, values, count);
  }

  public void getSimpleShadowLight(float[] values, int count) {
    HJSTREAMJNI.TK_Rendering_Options_getSimpleShadowLight(swigCPtr, this, values, count);
  }

}
