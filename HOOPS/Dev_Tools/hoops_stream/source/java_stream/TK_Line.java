/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_Line extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected TK_Line(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_LineUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_Line obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_Line(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_Line_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_Line_change_ownership(this, swigCPtr, true);
  }

  protected void setM_points(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Line_m_points_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_points() {
    long cPtr = HJSTREAMJNI.TK_Line_m_points_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_dpoints(SWIGTYPE_p_double value) {
    HJSTREAMJNI.TK_Line_m_dpoints_set(swigCPtr, this, SWIGTYPE_p_double.getCPtr(value));
  }

  protected SWIGTYPE_p_double getM_dpoints() {
    long cPtr = HJSTREAMJNI.TK_Line_m_dpoints_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  public TK_Line(short opcode) {
    this(HJSTREAMJNI.new_TK_Line__SWIG_0(opcode), true);
    HJSTREAMJNI.TK_Line_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Line() {
    this(HJSTREAMJNI.new_TK_Line__SWIG_1(), true);
    HJSTREAMJNI.TK_Line_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Line.class) ? HJSTREAMJNI.TK_Line_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Line_ReadSwigExplicitTK_Line(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Line.class) ? HJSTREAMJNI.TK_Line_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Line_WriteSwigExplicitTK_Line(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Clone(BStreamFileToolkit tk, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    return TK_Status.swigToEnum((getClass() == TK_Line.class) ? HJSTREAMJNI.TK_Line_Clone(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)) : HJSTREAMJNI.TK_Line_CloneSwigExplicitTK_Line(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Line_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Line_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public void SetPoints(float x1, float y1, float z1, float x2, float y2, float z2) {
    HJSTREAMJNI.TK_Line_SetPoints__SWIG_0(swigCPtr, this, x1, y1, z1, x2, y2, z2);
  }

  public void SetPoints(float[] s, float[] e) {
    HJSTREAMJNI.TK_Line_SetPoints__SWIG_1(swigCPtr, this, s, e);
  }

  public void SetPoints(float[] p) {
    HJSTREAMJNI.TK_Line_SetPoints__SWIG_2(swigCPtr, this, p);
  }

  public void SetDPoints(double x1, double y1, double z1, double x2, double y2, double z2) {
    HJSTREAMJNI.TK_Line_SetDPoints__SWIG_0(swigCPtr, this, x1, y1, z1, x2, y2, z2);
  }

  public void SetDPoints(double[] s, double[] e) {
    HJSTREAMJNI.TK_Line_SetDPoints__SWIG_1(swigCPtr, this, s, e);
  }

  public void SetDPoints(double[] p) {
    HJSTREAMJNI.TK_Line_SetDPoints__SWIG_2(swigCPtr, this, p);
  }

  public double[] GetDPoints() {return HJSTREAMJNI.TK_Line_GetDPoints(swigCPtr, this);}

}
