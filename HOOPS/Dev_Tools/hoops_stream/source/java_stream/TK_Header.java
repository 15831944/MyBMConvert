/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_Header extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected TK_Header(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_HeaderUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_Header obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_Header(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_Header_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_Header_change_ownership(this, swigCPtr, true);
  }

  protected void setM_current_object(BBaseOpcodeHandler value) {
    HJSTREAMJNI.TK_Header_m_current_object_set(swigCPtr, this, BBaseOpcodeHandler.getCPtr(value), value);
  }

  protected BBaseOpcodeHandler getM_current_object() {
    long cPtr = HJSTREAMJNI.TK_Header_m_current_object_get(swigCPtr, this);
    return (cPtr == 0) ? null : new BBaseOpcodeHandler(cPtr, false);
  }

  public TK_Header() {
    this(HJSTREAMJNI.new_TK_Header(), true);
    HJSTREAMJNI.TK_Header_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Header.class) ? HJSTREAMJNI.TK_Header_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Header_ReadSwigExplicitTK_Header(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Header.class) ? HJSTREAMJNI.TK_Header_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Header_WriteSwigExplicitTK_Header(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Header_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Header_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public void Reset() {
    if (getClass() == TK_Header.class) HJSTREAMJNI.TK_Header_Reset(swigCPtr, this); else HJSTREAMJNI.TK_Header_ResetSwigExplicitTK_Header(swigCPtr, this);
  }

}
