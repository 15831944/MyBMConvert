/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.techsoft.hoops;

public class TK_Color_By_Value extends BBaseOpcodeHandler {
  private long swigCPtr;

  protected TK_Color_By_Value(long cPtr, boolean cMemoryOwn) {
    super(HJSTREAMJNI.SWIGTK_Color_By_ValueUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TK_Color_By_Value obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        HJSTREAMJNI.delete_TK_Color_By_Value(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    HJSTREAMJNI.TK_Color_By_Value_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    HJSTREAMJNI.TK_Color_By_Value_change_ownership(this, swigCPtr, true);
  }

  protected void setM_mask(int value) {
    HJSTREAMJNI.TK_Color_By_Value_m_mask_set(swigCPtr, this, value);
  }

  protected int getM_mask() {
    return HJSTREAMJNI.TK_Color_By_Value_m_mask_get(swigCPtr, this);
  }

  protected void setM_value(SWIGTYPE_p_float value) {
    HJSTREAMJNI.TK_Color_By_Value_m_value_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  protected SWIGTYPE_p_float getM_value() {
    long cPtr = HJSTREAMJNI.TK_Color_By_Value_m_value_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  protected void setM_space(char value) {
    HJSTREAMJNI.TK_Color_By_Value_m_space_set(swigCPtr, this, value);
  }

  protected char getM_space() {
    return HJSTREAMJNI.TK_Color_By_Value_m_space_get(swigCPtr, this);
  }

  public TK_Color_By_Value() {
    this(HJSTREAMJNI.new_TK_Color_By_Value(), true);
    HJSTREAMJNI.TK_Color_By_Value_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public TK_Status Read(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Color_By_Value.class) ? HJSTREAMJNI.TK_Color_By_Value_Read(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Color_By_Value_ReadSwigExplicitTK_Color_By_Value(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Write(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum((getClass() == TK_Color_By_Value.class) ? HJSTREAMJNI.TK_Color_By_Value_Write(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk) : HJSTREAMJNI.TK_Color_By_Value_WriteSwigExplicitTK_Color_By_Value(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status Clone(BStreamFileToolkit tk, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    return TK_Status.swigToEnum((getClass() == TK_Color_By_Value.class) ? HJSTREAMJNI.TK_Color_By_Value_Clone(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)) : HJSTREAMJNI.TK_Color_By_Value_CloneSwigExplicitTK_Color_By_Value(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler)));
  }

  public TK_Status ReadAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Color_By_Value_ReadAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public TK_Status WriteAscii(BStreamFileToolkit tk) {
    return TK_Status.swigToEnum(HJSTREAMJNI.TK_Color_By_Value_WriteAscii(swigCPtr, this, BStreamFileToolkit.getCPtr(tk), tk));
  }

  public void SetGeometry(int m) {
    HJSTREAMJNI.TK_Color_By_Value_SetGeometry(swigCPtr, this, m);
  }

  public int GetGeometry() {
    return HJSTREAMJNI.TK_Color_By_Value_GetGeometry(swigCPtr, this);
  }

  public void SetSpace(int s) {
    HJSTREAMJNI.TK_Color_By_Value_SetSpace(swigCPtr, this, s);
  }

  public int GetSpace() {
    return HJSTREAMJNI.TK_Color_By_Value_GetSpace(swigCPtr, this);
  }

  public void SetValue(float a, float b, float c) {
    HJSTREAMJNI.TK_Color_By_Value_SetValue__SWIG_0(swigCPtr, this, a, b, c);
  }

  public void SetValue(float[] triple) {
    HJSTREAMJNI.TK_Color_By_Value_SetValue__SWIG_1(swigCPtr, this, triple);
  }

}
