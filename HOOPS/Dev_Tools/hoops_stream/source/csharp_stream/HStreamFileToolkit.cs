/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

#if _M_X64
using HLONG = System.Int64;
using ID_Key = System.Int64;
#else
using HLONG = System.Int32;
using ID_Key = System.Int32;
#endif


public class HStreamFileToolkit : BStreamFileToolkit {
  private HandleRef swigCPtr;

  public HStreamFileToolkit(IntPtr cPtr, bool cMemoryOwn) : base(HCSSTREAMPINVOKE.HStreamFileToolkitUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HStreamFileToolkit obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~HStreamFileToolkit() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HCSSTREAMPINVOKE.delete_HStreamFileToolkit(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public HStreamFileToolkit() : this(HCSSTREAMPINVOKE.new_HStreamFileToolkit(), true) {
  }

  public override void Restart() {
    HCSSTREAMPINVOKE.HStreamFileToolkit_Restart(swigCPtr);
  }

  public TK_Status GenerateBuffer(byte[] b, int s, int[] f, string start_segment) {
    TK_Status ret = (TK_Status)HCSSTREAMPINVOKE.HStreamFileToolkit_GenerateBuffer__SWIG_0(swigCPtr, b, s, f, start_segment);
    return ret;
  }

  public TK_Status GenerateBuffer(byte[] b, int s, int[] f) {
    TK_Status ret = (TK_Status)HCSSTREAMPINVOKE.HStreamFileToolkit_GenerateBuffer__SWIG_1(swigCPtr, b, s, f);
    return ret;
  }

  public TK_Status GenerateOneItemBuffer(byte[] b, int s, int[] f, SWIGTYPE_p_HC_KEY item) {
    TK_Status ret = (TK_Status)HCSSTREAMPINVOKE.HStreamFileToolkit_GenerateOneItemBuffer(swigCPtr, b, s, f, SWIGTYPE_p_HC_KEY.getCPtr(item));
    if (HCSSTREAMPINVOKE.SWIGPendingException.Pending) throw HCSSTREAMPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint CountObjects(string start_segment) {
    uint ret = HCSSTREAMPINVOKE.HStreamFileToolkit_CountObjects__SWIG_0(swigCPtr, start_segment);
    return ret;
  }

  public uint CountObjects() {
    uint ret = HCSSTREAMPINVOKE.HStreamFileToolkit_CountObjects__SWIG_1(swigCPtr);
    return ret;
  }

  public override void ActivateContext(ID_Key key) {
    HCSSTREAMPINVOKE.HStreamFileToolkit_ActivateContext(swigCPtr, key);
  }

  public override void DeactivateContext(ID_Key key) {
    HCSSTREAMPINVOKE.HStreamFileToolkit_DeactivateContext(swigCPtr, key);
  }

  public override void NewFileContext(ID_Key key) {
    HCSSTREAMPINVOKE.HStreamFileToolkit_NewFileContext(swigCPtr, key);
  }

  public int GetHoopsVersion() {
    int ret = HCSSTREAMPINVOKE.HStreamFileToolkit_GetHoopsVersion(swigCPtr);
    return ret;
  }

  public TK_Status StringToHandler(string type, SWIGTYPE_p_p_BBaseOpcodeHandler handler) {
    TK_Status ret = (TK_Status)HCSSTREAMPINVOKE.HStreamFileToolkit_StringToHandler(swigCPtr, type, SWIGTYPE_p_p_BBaseOpcodeHandler.getCPtr(handler));
    return ret;
  }

  public TK_Status StringToOpcode(string type, byte[] opcode_out) {
    TK_Status ret = (TK_Status)HCSSTREAMPINVOKE.HStreamFileToolkit_StringToOpcode(swigCPtr, type, opcode_out);
    return ret;
  }

  public void SetThumbnail(BBaseOpcodeHandler handler) {
    HCSSTREAMPINVOKE.HStreamFileToolkit_SetThumbnail__SWIG_0(swigCPtr, BBaseOpcodeHandler.getCPtr(handler));
  }

  public void SetThumbnail(int format, int width, int height, byte[] data) {
    HCSSTREAMPINVOKE.HStreamFileToolkit_SetThumbnail__SWIG_1(swigCPtr, format, width, height, data);
  }

  public TK_Status Write_Stream_File() {
    TK_Status ret = (TK_Status)HCSSTREAMPINVOKE.HStreamFileToolkit_Write_Stream_File(swigCPtr);
    return ret;
  }

  public void AddExcludedSegments(int count, SWIGTYPE_p_HC_KEY keys) {
    HCSSTREAMPINVOKE.HStreamFileToolkit_AddExcludedSegments(swigCPtr, count, SWIGTYPE_p_HC_KEY.getCPtr(keys));
  }

  public void AddExcludedSegment(SWIGTYPE_p_HC_KEY key) {
    HCSSTREAMPINVOKE.HStreamFileToolkit_AddExcludedSegment(swigCPtr, SWIGTYPE_p_HC_KEY.getCPtr(key));
    if (HCSSTREAMPINVOKE.SWIGPendingException.Pending) throw HCSSTREAMPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool SegmentIsExcluded(SWIGTYPE_p_HC_KEY key) {
    bool ret = HCSSTREAMPINVOKE.HStreamFileToolkit_SegmentIsExcluded(swigCPtr, SWIGTYPE_p_HC_KEY.getCPtr(key));
    if (HCSSTREAMPINVOKE.SWIGPendingException.Pending) throw HCSSTREAMPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void ClearExcludedSegments() {
    HCSSTREAMPINVOKE.HStreamFileToolkit_ClearExcludedSegments(swigCPtr);
  }

  public int GetExcludedSegmentCount() {
    int ret = HCSSTREAMPINVOKE.HStreamFileToolkit_GetExcludedSegmentCount(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_HC_KEY GetExcludedSegments() {
    IntPtr cPtr = HCSSTREAMPINVOKE.HStreamFileToolkit_GetExcludedSegments(swigCPtr);
    SWIGTYPE_p_HC_KEY ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_HC_KEY(cPtr, false);
    return ret;
  }

  public void SetPrependRootSegment(string segment) {
    HCSSTREAMPINVOKE.HStreamFileToolkit_SetPrependRootSegment(swigCPtr, segment);
  }

  public string GetPrependRootSegment() {return HCSSTREAMPINVOKE.HStreamFileToolkit_GetPrependRootSegment(swigCPtr);}

  public override bool MatchPreviousExRef() {
    bool ret = HCSSTREAMPINVOKE.HStreamFileToolkit_MatchPreviousExRef(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_p_char m_search_strings {
    set {
      HCSSTREAMPINVOKE.HStreamFileToolkit_m_search_strings_set(swigCPtr, SWIGTYPE_p_p_char.getCPtr(value));
    } 
    get {
      IntPtr cPtr = HCSSTREAMPINVOKE.HStreamFileToolkit_m_search_strings_get(swigCPtr);
      SWIGTYPE_p_p_char ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_char(cPtr, false);
      return ret;
    } 
  }

}
